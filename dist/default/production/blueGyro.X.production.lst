

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Oct 12 19:35:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0197                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0391                     	;# 
   169  0392                     	;# 
   170  0393                     	;# 
   171  039A                     	;# 
   172  039C                     	;# 
   173  039D                     	;# 
   174  039E                     	;# 
   175  039F                     	;# 
   176  0FE4                     	;# 
   177  0FE5                     	;# 
   178  0FE6                     	;# 
   179  0FE7                     	;# 
   180  0FE8                     	;# 
   181  0FE9                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEF                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  008C                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  010C                     	;# 
   228  0111                     	;# 
   229  0112                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  0191                     	;# 
   241  0191                     	;# 
   242  0192                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0194                     	;# 
   247  0195                     	;# 
   248  0196                     	;# 
   249  0197                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020C                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0291                     	;# 
   395  0291                     	;# 
   396  0292                     	;# 
   397  0293                     	;# 
   398  0294                     	;# 
   399  0295                     	;# 
   400  0295                     	;# 
   401  0296                     	;# 
   402  0391                     	;# 
   403  0392                     	;# 
   404  0393                     	;# 
   405  039A                     	;# 
   406  039C                     	;# 
   407  039D                     	;# 
   408  039E                     	;# 
   409  039F                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421                           
   422                           	psect	eeprom_data
   423  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   424                           
   425                           	psect	idataBANK0
   426  0003                     __pidataBANK0:	
   427                           
   428                           ;initializer for _Mode
   429  0003  34FF               	retlw	255
   430                           
   431                           	psect	stringtext
   432  053C                     __pstringtext:	
   433  053C                     Setup_MPU6050@MPU6050RegTable:	
   434  053C  341D               	retlw	29
   435  053D  341E               	retlw	30
   436  053E  341F               	retlw	31
   437  053F  3420               	retlw	32
   438  0540  3421               	retlw	33
   439  0541  3422               	retlw	34
   440  0542  3423               	retlw	35
   441  0543  3424               	retlw	36
   442  0544  3425               	retlw	37
   443  0545  3426               	retlw	38
   444  0546  3427               	retlw	39
   445  0547  3428               	retlw	40
   446  0548  3429               	retlw	41
   447  0549  342A               	retlw	42
   448  054A  342B               	retlw	43
   449  054B  342C               	retlw	44
   450  054C  342D               	retlw	45
   451  054D  342E               	retlw	46
   452  054E  342F               	retlw	47
   453  054F  3430               	retlw	48
   454  0550  3431               	retlw	49
   455  0551  3432               	retlw	50
   456  0552  3433               	retlw	51
   457  0553  3434               	retlw	52
   458  0554  3435               	retlw	53
   459  0555  3437               	retlw	55
   460  0556  3438               	retlw	56
   461  0557  3463               	retlw	99
   462  0558  3464               	retlw	100
   463  0559  3465               	retlw	101
   464  055A  3466               	retlw	102
   465  055B  3467               	retlw	103
   466  055C  3468               	retlw	104
   467  055D  3469               	retlw	105
   468  055E  346A               	retlw	106
   469  055F  341A               	retlw	26
   470  0560  3437               	retlw	55
   471  0561  3438               	retlw	56
   472  0562  3474               	retlw	116
   473  0563  34FF               	retlw	255
   474  0564                     __end_ofSetup_MPU6050@MPU6050RegTable:	
   475  0564                     FindDeltaG@HG:	
   476  0564  3400               	retlw	0
   477  0565  3400               	retlw	0
   478  0566  3490               	retlw	144
   479  0567  3400               	retlw	0
   480  0568                     __end_ofFindDeltaG@HG:	
   481  0568                     FindDeltaG@LG:	
   482  0568  34A4               	retlw	164
   483  0569  34F0               	retlw	240
   484  056A  3428               	retlw	40
   485  056B  3400               	retlw	0
   486  056C                     __end_ofFindDeltaG@LG:	
   487  000B                     _INTCON	set	11
   488  000C                     _PORTA	set	12
   489  001B                     _PR2	set	27
   490  001C                     _T2CON	set	28
   491  001A                     _TMR2	set	26
   492  0018                     _CARRY	set	24
   493  005F                     _GIE	set	95
   494  005E                     _PEIE	set	94
   495  008D                     _RCIF	set	141
   496  0089                     _TMR2IF	set	137
   497  008C                     _TXIF	set	140
   498  009B                     _ADRES	set	155
   499  009D                     _ADCON0	set	157
   500  009E                     _ADCON1	set	158
   501  0095                     _OPTION_REG	set	149
   502  0099                     _OSCCON	set	153
   503  008C                     _TRISA	set	140
   504  04E9                     _ADGO	set	1257
   505  048D                     _RCIE	set	1165
   506  0489                     _TMR2IE	set	1161
   507  0461                     _TRISA1	set	1121
   508  0462                     _TRISA2	set	1122
   509  048C                     _TXIE	set	1164
   510  011D                     _APFCON	set	285
   511  0117                     _FVRCON	set	279
   512  0191                     _EEADR	set	401
   513  018C                     _ANSELA	set	396
   514  0195                     _EECON1	set	405
   515  0196                     _EECON2	set	406
   516  0193                     _EEDATA	set	403
   517  0199                     _RCREG	set	409
   518  019D                     _RCSTA	set	413
   519  019C                     _SPBRGH	set	412
   520  019B                     _SPBRGL	set	411
   521  019A                     _TXREG	set	410
   522  019E                     _TXSTA	set	414
   523  0CF8                     _ABDEN	set	3320
   524  0CFB                     _BRG16	set	3323
   525  0CF2                     _BRGH	set	3314
   526  0CEC                     _CREN	set	3308
   527  0CA8                     _RD	set	3240
   528  0CFC                     _SCKP	set	3324
   529  0CEF                     _SPEN	set	3311
   530  0CF4                     _SYNC	set	3316
   531  0CF5                     _TXEN	set	3317
   532  0CA9                     _WR	set	3241
   533  0CAA                     _WREN	set	3242
   534  0216                     _SSP1CON2	set	534
   535  0212                     _SSPADD	set	530
   536  0211                     _SSPBUF	set	529
   537  0215                     _SSPCON1	set	533
   538  0216                     _SSPCON2	set	534
   539  0214                     _SSPSTAT	set	532
   540  020C                     _WPUA	set	524
   541  10B5                     _ACKDT	set	4277
   542  10B4                     _ACKEN	set	4276
   543  10B2                     _PEN	set	4274
   544  10B3                     _RCEN	set	4275
   545  10B1                     _RSEN	set	4273
   546  10B0                     _SEN	set	4272
   547  056C                     STR_11:	
   548  056C  3443               	retlw	67	;'C'
   549  056D  3461               	retlw	97	;'a'
   550  056E  3474               	retlw	116	;'t'
   551  056F  3461               	retlw	97	;'a'
   552  0570  3470               	retlw	112	;'p'
   553  0571  3475               	retlw	117	;'u'
   554  0572  346C               	retlw	108	;'l'
   555  0573  3474               	retlw	116	;'t'
   556  0574  3420               	retlw	32	;' '
   557  0575  3456               	retlw	86	;'V'
   558  0576  3431               	retlw	49	;'1'
   559  0577  342E               	retlw	46	;'.'
   560  0578  3430               	retlw	48	;'0'
   561  0579  3432               	retlw	50	;'2'
   562  057A  340D               	retlw	13
   563  057B  340A               	retlw	10
   564  057C  3400               	retlw	0
   565  057D                     STR_15:	
   566  057D  345A               	retlw	90	;'Z'
   567  057E  3465               	retlw	101	;'e'
   568  057F  3472               	retlw	114	;'r'
   569  0580  346F               	retlw	111	;'o'
   570  0581  3420               	retlw	32	;' '
   571  0582  3447               	retlw	71	;'G'
   572  0583  3479               	retlw	121	;'y'
   573  0584  3472               	retlw	114	;'r'
   574  0585  346F               	retlw	111	;'o'
   575  0586  342E               	retlw	46	;'.'
   576  0587  340D               	retlw	13
   577  0588  340A               	retlw	10
   578  0589  3400               	retlw	0
   579  058A                     STR_1:	
   580  058A  3445               	retlw	69	;'E'
   581  058B  3452               	retlw	82	;'R'
   582  058C  3452               	retlw	82	;'R'
   583  058D  344F               	retlw	79	;'O'
   584  058E  3452               	retlw	82	;'R'
   585  058F  343A               	retlw	58	;':'
   586  0590  3420               	retlw	32	;' '
   587  0591  3449               	retlw	73	;'I'
   588  0592  3432               	retlw	50	;'2'
   589  0593  3443               	retlw	67	;'C'
   590  0594  340D               	retlw	13
   591  0595  340A               	retlw	10
   592  0596  3400               	retlw	0
   593  0597                     STR_7:	
   594  0597  3420               	retlw	32	;' '
   595  0598  3447               	retlw	71	;'G'
   596  0599  3479               	retlw	121	;'y'
   597  059A  3472               	retlw	114	;'r'
   598  059B  346F               	retlw	111	;'o'
   599  059C  3420               	retlw	32	;' '
   600  059D  3478               	retlw	120	;'x'
   601  059E  343D               	retlw	61	;'='
   602  059F  3400               	retlw	0
   603  05A0                     STR_17:	
   604  05A0  3452               	retlw	82	;'R'
   605  05A1  3445               	retlw	69	;'E'
   606  05A2  3441               	retlw	65	;'A'
   607  05A3  3444               	retlw	68	;'D'
   608  05A4  3459               	retlw	89	;'Y'
   609  05A5  340D               	retlw	13
   610  05A6  340A               	retlw	10
   611  05A7  3400               	retlw	0
   612  05A8                     STR_4:	
   613  05A8  3420               	retlw	32	;' '
   614  05A9  3454               	retlw	84	;'T'
   615  05AA  3428               	retlw	40	;'('
   616  05AB  346D               	retlw	109	;'m'
   617  05AC  3473               	retlw	115	;'s'
   618  05AD  3429               	retlw	41	;')'
   619  05AE  343D               	retlw	61	;'='
   620  05AF  3400               	retlw	0
   621  05B0                     STR_8:	
   622  05B0  3420               	retlw	32	;' '
   623  05B1  344D               	retlw	77	;'M'
   624  05B2  3461               	retlw	97	;'a'
   625  05B3  3467               	retlw	103	;'g'
   626  05B4  3420               	retlw	32	;' '
   627  05B5  3478               	retlw	120	;'x'
   628  05B6  343D               	retlw	61	;'='
   629  05B7  3400               	retlw	0
   630  05B8                     STR_16:	
   631  05B8  3449               	retlw	73	;'I'
   632  05B9  3444               	retlw	68	;'D'
   633  05BA  344C               	retlw	76	;'L'
   634  05BB  3445               	retlw	69	;'E'
   635  05BC  340D               	retlw	13
   636  05BD  340A               	retlw	10
   637  05BE  3400               	retlw	0
   638  05BF                     STR_12:	
   639  05BF  3456               	retlw	86	;'V'
   640  05C0  3444               	retlw	68	;'D'
   641  05C1  3444               	retlw	68	;'D'
   642  05C2  3420               	retlw	32	;' '
   643  05C3  343D               	retlw	61	;'='
   644  05C4  3420               	retlw	32	;' '
   645  05C5  3400               	retlw	0
   646  05C6                     STR_5:	
   647  05C6  3420               	retlw	32	;' '
   648  05C7  3447               	retlw	71	;'G'
   649  05C8  3420               	retlw	32	;' '
   650  05C9  3478               	retlw	120	;'x'
   651  05CA  343D               	retlw	61	;'='
   652  05CB  3400               	retlw	0
   653  05CC                     STR_6:	
   654  05CC  3420               	retlw	32	;' '
   655  05CD  3447               	retlw	71	;'G'
   656  05CE  3474               	retlw	116	;'t'
   657  05CF  343D               	retlw	61	;'='
   658  05D0  3400               	retlw	0
   659  05D1                     STR_14:	
   660  05D1  3456               	retlw	86	;'V'
   661  05D2  340D               	retlw	13
   662  05D3  340A               	retlw	10
   663  05D4  3400               	retlw	0
   664  05D5                     STR_13:	
   665  05D5  342D               	retlw	45	;'-'
   666  05D6  342D               	retlw	45	;'-'
   667  05D7  342D               	retlw	45	;'-'
   668  05D8  3400               	retlw	0
   669  05D9                     STR_2:	
   670  05D9  3420               	retlw	32	;' '
   671  05DA  3479               	retlw	121	;'y'
   672  05DB  343D               	retlw	61	;'='
   673  05DC  3400               	retlw	0
   674  05DD                     STR_3:	
   675  05DD  3420               	retlw	32	;' '
   676  05DE  347A               	retlw	122	;'z'
   677  05DF  343D               	retlw	61	;'='
   678  05E0  3400               	retlw	0
   679  0587                     
   680                           ; #config settings
   681  0000                     
   682                           	psect	cinit
   683  0039                     start_initialization:	
   684  0039                     __initialization:	
   685                           
   686                           ; Clear objects allocated to COMMON
   687  0039  01FA               	clrf	__pbssCOMMON& (0+127)
   688  003A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   689                           
   690                           ; Clear objects allocated to BANK0
   691  003B  3059               	movlw	low __pbssBANK0
   692  003C  0084               	movwf	4
   693  003D  3000               	movlw	high __pbssBANK0
   694  003E  0085               	movwf	5
   695  003F  3014               	movlw	20
   696  0040  3188  208B  3180   	fcall	clear_ram0
   697                           
   698                           ; Clear objects allocated to BANK1
   699  0043  30A0               	movlw	low __pbssBANK1
   700  0044  0084               	movwf	4
   701  0045  3000               	movlw	high __pbssBANK1
   702  0046  0085               	movwf	5
   703  0047  3050               	movlw	80
   704  0048  3188  208B  3180   	fcall	clear_ram0
   705                           
   706                           ; Initialize objects allocated to BANK0
   707  004B  3180  2003         	fcall	__pidataBANK0	;fetch initializer
   708  004D  00ED               	movwf	__pdataBANK0& (0+127)
   709  004E                     end_of_initialization:	
   710                           ;End of C runtime variable initialization code
   711                           
   712  004E                     __end_of__initialization:	
   713  004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   714  004F  0020               	movlb	0
   715  0050  3180  2852         	ljmp	_main	;jump to C main() function
   716                           
   717                           	psect	bssCOMMON
   718  007A                     __pbssCOMMON:	
   719  007A                     _Timerms:	
   720  007A                     	ds	2
   721                           
   722                           	psect	bssBANK0
   723  0059                     __pbssBANK0:	
   724  0059                     _AT24CM02_BlockID:	
   725  0059                     	ds	4
   726  005D                     _AT24CM02_BlockIdx:	
   727  005D                     	ds	2
   728  005F                     _AccGyroCount:	
   729  005F                     	ds	2
   730  0061                     _AT24CM02_A0A7:	
   731  0061                     	ds	1
   732  0062                     _AT24CM02_A16A17:	
   733  0062                     	ds	1
   734  0063                     _AT24CM02_A8A15:	
   735  0063                     	ds	1
   736  0064                     _InFiFo:	
   737  0064                     	ds	1
   738  0065                     _NewMode:	
   739  0065                     	ds	1
   740  0066                     _OutFiFo:	
   741  0066                     	ds	1
   742  0067                     _Setting:	
   743  0067                     	ds	6
   744                           
   745                           	psect	dataBANK0
   746  006D                     __pdataBANK0:	
   747  006D                     _Mode:	
   748  006D                     	ds	1
   749                           
   750                           	psect	bssBANK1
   751  00A0                     __pbssBANK1:	
   752  00A0                     _SerialBuffer:	
   753  00A0                     	ds	32
   754  00C0                     _AccGyroX:	
   755  00C0                     	ds	4
   756  00C4                     _AccGyroY:	
   757  00C4                     	ds	4
   758  00C8                     _AccGyroZ:	
   759  00C8                     	ds	4
   760  00CC                     _AT24CM02_A0A15:	
   761  00CC                     	ds	2
   762  00CE                     _TimerCrash:	
   763  00CE                     	ds	2
   764  00D0                     _CurrentData:	
   765  00D0                     	ds	32
   766                           
   767                           	psect	clrtext
   768  088B                     clear_ram0:	
   769                           ;	Called with FSR0 containing the base address, and
   770                           ;	WREG with the size to clear
   771                           
   772  088B  0064               	clrwdt	;clear the watchdog before getting into this loop
   773  088C                     clrloop0:	
   774  088C  0180               	clrf	0	;clear RAM location pointed to by FSR
   775  088D  3101               	addfsr 0,1
   776  088E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   777  088F  288C               	goto	clrloop0	;have we reached the end yet?
   778  0890  3400               	retlw	0	;all done for this memory range, return
   779                           
   780                           	psect	cstackCOMMON
   781  0070                     __pcstackCOMMON:	
   782  0070                     ?_Setup_HMC5883L:	
   783  0070                     ?_Get_HMC5883L_Values:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0070                     ?_i2c_Init:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0070                     ?_i2c_Wait:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0070                     ?_i2c_Start:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0070                     ?_i2c_Restart:	
   796                           ; 0 bytes @ 0x0
   797                           
   798  0070                     ?_i2c_Stop:	
   799                           ; 0 bytes @ 0x0
   800                           
   801  0070                     ?_i2c_Write:	
   802                           ; 0 bytes @ 0x0
   803                           
   804  0070                     ?_Setup_MPU6050:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0070                     ?_Get_Accel_Values:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0070                     ?_LoadSetting:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_SaveSetting:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_Init1msTimer:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?_isr:	
   820                           ; 0 bytes @ 0x0
   821                           
   822  0070                     ??_isr:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  0070                     ?_putch:	
   826                           ; 0 bytes @ 0x0
   827                           
   828  0070                     ?_CalculateSumOfSquares:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  0070                     ?_DisplayInfo:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  0070                     ?_putHexNibble:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  0070                     ?_DisplayData:	
   838                           ; 0 bytes @ 0x0
   839                           
   840  0070                     ?_printVersion:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  0070                     ?_printVoltage:	
   844                           ; 0 bytes @ 0x0
   845                           
   846  0070                     ?_eeprom_read:	
   847                           ; 0 bytes @ 0x0
   848                           
   849  0070                     ?_i2c_Read:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_GotInt_MPU6050:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_FindDeltaG:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_MPU6050_Test_I2C:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_main:	
   862                           ; 2 bytes @ 0x0
   863                           
   864                           
   865                           ; 2 bytes @ 0x0
   866  0070                     	ds	2
   867  0072                     ??_eeprom_read:	
   868  0072                     ?_eeprom_write:	
   869                           ; 0 bytes @ 0x2
   870                           
   871  0072                     ??_i2c_Init:	
   872                           ; 0 bytes @ 0x2
   873                           
   874  0072                     ??_i2c_Wait:	
   875                           ; 0 bytes @ 0x2
   876                           
   877  0072                     ??_i2c_Start:	
   878                           ; 0 bytes @ 0x2
   879                           
   880  0072                     ??_i2c_Restart:	
   881                           ; 0 bytes @ 0x2
   882                           
   883  0072                     ??_i2c_Stop:	
   884                           ; 0 bytes @ 0x2
   885                           
   886  0072                     ??_i2c_Write:	
   887                           ; 0 bytes @ 0x2
   888                           
   889  0072                     ?_i2c_Address:	
   890                           ; 0 bytes @ 0x2
   891                           
   892  0072                     ??_i2c_Read:	
   893                           ; 0 bytes @ 0x2
   894                           
   895  0072                     ??_Init1msTimer:	
   896                           ; 0 bytes @ 0x2
   897                           
   898  0072                     ??_putch:	
   899                           ; 0 bytes @ 0x2
   900                           
   901  0072                     ??_FindDeltaG:	
   902                           ; 0 bytes @ 0x2
   903                           
   904  0072                     ?_AT24CM02_GetAddress:	
   905                           ; 0 bytes @ 0x2
   906                           
   907  0072                     ?_GetGyroWithOffset:	
   908                           ; 0 bytes @ 0x2
   909                           
   910  0072                     ?_isqrt:	
   911                           ; 2 bytes @ 0x2
   912                           
   913  0072                     ?___lwdiv:	
   914                           ; 2 bytes @ 0x2
   915                           
   916  0072                     ?___lwmod:	
   917                           ; 2 bytes @ 0x2
   918                           
   919  0072                     ?___lmul:	
   920                           ; 2 bytes @ 0x2
   921                           
   922  0072                     ?___aldiv:	
   923                           ; 4 bytes @ 0x2
   924                           
   925  0072                     i2c_Write@data:	
   926                           ; 4 bytes @ 0x2
   927                           
   928  0072                     i2c_Address@mode:	
   929                           ; 1 bytes @ 0x2
   930                           
   931  0072                     eeprom_write@value:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  0072                     GetGyroWithOffset@value:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  0072                     AT24CM02_GetAddress@block:	
   938                           ; 2 bytes @ 0x2
   939                           
   940  0072                     ___lwdiv@divisor:	
   941                           ; 2 bytes @ 0x2
   942                           
   943  0072                     ___lwmod@divisor:	
   944                           ; 2 bytes @ 0x2
   945                           
   946  0072                     isqrt@val:	
   947                           ; 2 bytes @ 0x2
   948                           
   949  0072                     ___lmul@multiplier:	
   950                           ; 4 bytes @ 0x2
   951                           
   952  0072                     ___aldiv@divisor:	
   953                           ; 4 bytes @ 0x2
   954                           
   955                           
   956                           ; 4 bytes @ 0x2
   957  0072                     	ds	1
   958  0073                     ??_eeprom_write:	
   959  0073                     ??_i2c_Address:	
   960                           ; 0 bytes @ 0x3
   961                           
   962  0073                     i2c_Read@ack:	
   963                           ; 0 bytes @ 0x3
   964                           
   965  0073                     putch@char_out:	
   966                           ; 1 bytes @ 0x3
   967                           
   968                           
   969                           ; 1 bytes @ 0x3
   970  0073                     	ds	1
   971  0074                     ??_AT24CM02_GetAddress:	
   972  0074                     i2c_Address@address:	
   973                           ; 0 bytes @ 0x4
   974                           
   975  0074                     i2c_Read@i2cReadData:	
   976                           ; 1 bytes @ 0x4
   977                           
   978  0074                     putch@temp:	
   979                           ; 1 bytes @ 0x4
   980                           
   981  0074                     GetGyroWithOffset@Goffset:	
   982                           ; 1 bytes @ 0x4
   983                           
   984  0074                     ___lwdiv@dividend:	
   985                           ; 2 bytes @ 0x4
   986                           
   987  0074                     ___lwmod@dividend:	
   988                           ; 2 bytes @ 0x4
   989                           
   990                           
   991                           ; 2 bytes @ 0x4
   992  0074                     	ds	1
   993  0075                     ?_cputs:	
   994  0075                     ??_putHexNibble:	
   995                           ; 0 bytes @ 0x5
   996                           
   997  0075                     i2c_Address@l_address:	
   998                           ; 0 bytes @ 0x5
   999                           
  1000  0075                     eeprom_read@addr:	
  1001                           ; 1 bytes @ 0x5
  1002                           
  1003  0075                     eeprom_write@addr:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006  0075                     cputs@s:	
  1007                           ; 1 bytes @ 0x5
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x5
  1011  0075                     	ds	1
  1012  0076                     ?_LDByteSetAddress:	
  1013  0076                     ?_LDRAMSetAddress:	
  1014                           ; 0 bytes @ 0x6
  1015                           
  1016  0076                     ??_LoadSetting:	
  1017                           ; 0 bytes @ 0x6
  1018                           
  1019  0076                     ??_SaveSetting:	
  1020                           ; 0 bytes @ 0x6
  1021                           
  1022  0076                     ??_GetGyroWithOffset:	
  1023                           ; 0 bytes @ 0x6
  1024                           
  1025  0076                     ??___lwdiv:	
  1026                           ; 0 bytes @ 0x6
  1027                           
  1028  0076                     ??___lwmod:	
  1029                           ; 0 bytes @ 0x6
  1030                           
  1031  0076                     LDByteSetAddress@LowAdd:	
  1032                           ; 0 bytes @ 0x6
  1033                           
  1034  0076                     LDRAMSetAddress@HighAddress:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  0076                     putHexNibble@value:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0076                     ___lmul@multiplicand:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043  0076                     ___aldiv@dividend:	
  1044                           ; 4 bytes @ 0x6
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0x6
  1048  0076                     	ds	1
  1049  0077                     ??_cputs:	
  1050  0077                     ??_LDByteSetAddress:	
  1051                           ; 0 bytes @ 0x7
  1052                           
  1053  0077                     LDByteSetAddress@i2cSlaveAddress:	
  1054                           ; 0 bytes @ 0x7
  1055                           
  1056  0077                     LDRAMSetAddress@LowAddress:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     LoadSetting@pointer:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0077                     SaveSetting@pointer:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0077                     ___lwdiv@counter:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068  0077                     ___lwmod@counter:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071                           
  1072                           ; 1 bytes @ 0x7
  1073  0077                     	ds	1
  1074  0078                     ?_LDByteWriteI2C:	
  1075  0078                     ??_LDByteReadI2C:	
  1076                           ; 0 bytes @ 0x8
  1077                           
  1078  0078                     ??_LDRAMSetAddress:	
  1079                           ; 0 bytes @ 0x8
  1080                           
  1081  0078                     ??_printVersion:	
  1082                           ; 0 bytes @ 0x8
  1083                           
  1084  0078                     LDByteWriteI2C@LowAdd:	
  1085                           ; 0 bytes @ 0x8
  1086                           
  1087  0078                     LDRAMSetAddress@i2cSlaveAddress:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090  0078                     LoadSetting@idx:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093  0078                     SaveSetting@idx:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096  0078                     GetGyroWithOffset@_temp:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099  0078                     ___lwdiv@quotient:	
  1100                           ; 2 bytes @ 0x8
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x8
  1104  0078                     	ds	1
  1105  0079                     LDByteWriteI2C@data:	
  1106  0079                     LDByteReadI2C@i2cSlaveAddress:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109  0079                     LDRAMWriteI2C@i2cSlaveAddress:	
  1110                           ; 1 bytes @ 0x9
  1111                           
  1112  0079                     LDRAMReadI2C@i2cSlaveAddress:	
  1113                           ; 1 bytes @ 0x9
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x9
  1117  0079                     	ds	1
  1118  007A                     ??_printValue:	
  1119  007A                     ??_printCentiValue:	
  1120                           ; 0 bytes @ 0xA
  1121                           
  1122  007A                     ??_printDeciValue:	
  1123                           ; 0 bytes @ 0xA
  1124                           
  1125  007A                     ??_printGForce:	
  1126                           ; 0 bytes @ 0xA
  1127                           
  1128  007A                     ??_printGyro:	
  1129                           ; 0 bytes @ 0xA
  1130                           
  1131  007A                     ??_printUShort:	
  1132                           ; 0 bytes @ 0xA
  1133                           
  1134  007A                     ??_DisplayInfo:	
  1135                           ; 0 bytes @ 0xA
  1136                           
  1137  007A                     ??_DisplayData:	
  1138                           ; 0 bytes @ 0xA
  1139                           
  1140  007A                     ??___lmul:	
  1141                           ; 0 bytes @ 0xA
  1142                           
  1143                           
  1144                           	psect	cstackBANK0
  1145  0020                     __pcstackBANK0:	
  1146                           ; 0 bytes @ 0xA
  1147                           
  1148  0020                     ??_LDByteWriteI2C:	
  1149  0020                     ?_LDByteReadI2C:	
  1150                           ; 0 bytes @ 0x0
  1151                           
  1152  0020                     ?_LDRAMWriteI2C:	
  1153                           ; 0 bytes @ 0x0
  1154                           
  1155  0020                     ?_LDRAMReadI2C:	
  1156                           ; 0 bytes @ 0x0
  1157                           
  1158  0020                     ??_isqrt:	
  1159                           ; 0 bytes @ 0x0
  1160                           
  1161  0020                     ?_putHex:	
  1162                           ; 0 bytes @ 0x0
  1163                           
  1164  0020                     ??___aldiv:	
  1165                           ; 0 bytes @ 0x0
  1166                           
  1167  0020                     ?_utoa:	
  1168                           ; 0 bytes @ 0x0
  1169                           
  1170  0020                     LDByteReadI2C@Address:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0020                     LDRAMWriteI2C@HighAddress:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0020                     LDRAMReadI2C@HighAddress:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0020                     putHex@value:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0020                     utoa@val:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0020                     ___lmul@product:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x0
  1190  0020                     	ds	1
  1191  0021                     LDByteReadI2C@Data:	
  1192  0021                     LDRAMWriteI2C@LowAddress:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0021                     LDRAMReadI2C@LowAddress:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0021                     ___aldiv@counter:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201  0021                     LDByteWriteI2C@ErrorCode:	
  1202                           ; 1 bytes @ 0x1
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x1
  1206  0021                     	ds	1
  1207  0022                     ??_putHex:	
  1208  0022                     LDByteReadI2C@Length:	
  1209                           ; 0 bytes @ 0x2
  1210                           
  1211  0022                     LDRAMWriteI2C@Data:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0022                     LDRAMReadI2C@Data:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0022                     ___aldiv@sign:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0022                     utoa@base:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223                           
  1224                           ; 2 bytes @ 0x2
  1225  0022                     	ds	1
  1226  0023                     ??_MPU6050_Test_I2C:	
  1227  0023                     ??_Get_Accel_Values:	
  1228                           ; 0 bytes @ 0x3
  1229                           
  1230  0023                     ??_GotInt_MPU6050:	
  1231                           ; 0 bytes @ 0x3
  1232                           
  1233  0023                     LDByteWriteI2C@i2cSlaveAddress:	
  1234                           ; 0 bytes @ 0x3
  1235                           
  1236  0023                     LDRAMWriteI2C@Length:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0023                     LDRAMReadI2C@Length:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0023                     ___aldiv@quotient:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x3
  1247  0023                     	ds	1
  1248  0024                     ??_utoa:	
  1249  0024                     ??_Setup_HMC5883L:	
  1250                           ; 0 bytes @ 0x4
  1251                           
  1252  0024                     ??_Get_HMC5883L_Values:	
  1253                           ; 0 bytes @ 0x4
  1254                           
  1255  0024                     ??_LDRAMWriteI2C:	
  1256                           ; 0 bytes @ 0x4
  1257                           
  1258  0024                     ??_LDRAMReadI2C:	
  1259                           ; 0 bytes @ 0x4
  1260                           
  1261  0024                     ??_Setup_MPU6050:	
  1262                           ; 0 bytes @ 0x4
  1263                           
  1264  0024                     ??_CalculateSumOfSquares:	
  1265                           ; 0 bytes @ 0x4
  1266                           
  1267                           
  1268                           ; 0 bytes @ 0x4
  1269  0024                     	ds	1
  1270  0025                     MPU6050_Test_I2C@Data:	
  1271  0025                     GotInt_MPU6050@uc_temp:	
  1272                           ; 1 bytes @ 0x5
  1273                           
  1274  0025                     utoa@v:	
  1275                           ; 1 bytes @ 0x5
  1276                           
  1277                           
  1278                           ; 2 bytes @ 0x5
  1279  0025                     	ds	1
  1280  0026                     ?_AT24CM02_ReadBlock:	
  1281  0026                     ?_AT24CM02_WriteBlock:	
  1282                           ; 0 bytes @ 0x6
  1283                           
  1284  0026                     Setup_MPU6050@loop:	
  1285                           ; 0 bytes @ 0x6
  1286                           
  1287  0026                     AT24CM02_WriteBlock@block:	
  1288                           ; 2 bytes @ 0x6
  1289                           
  1290  0026                     AT24CM02_ReadBlock@block:	
  1291                           ; 2 bytes @ 0x6
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x6
  1295  0026                     	ds	1
  1296  0027                     utoa@c:	
  1297                           
  1298                           ; 1 bytes @ 0x7
  1299  0027                     	ds	1
  1300  0028                     ??_AT24CM02_ReadBlock:	
  1301  0028                     ??_AT24CM02_WriteBlock:	
  1302                           ; 0 bytes @ 0x8
  1303                           
  1304  0028                     Setup_MPU6050@TheReg:	
  1305                           ; 0 bytes @ 0x8
  1306                           
  1307  0028                     utoa@buf:	
  1308                           ; 1 bytes @ 0x8
  1309                           
  1310  0028                     Get_Accel_Values@cval:	
  1311                           ; 1 bytes @ 0x8
  1312                           
  1313                           
  1314                           ; 14 bytes @ 0x8
  1315  0028                     	ds	1
  1316  0029                     ?_printUShort:	
  1317  0029                     ?_itoa:	
  1318                           ; 0 bytes @ 0x9
  1319                           
  1320  0029                     printUShort@value:	
  1321                           ; 1 bytes @ 0x9
  1322                           
  1323  0029                     itoa@val:	
  1324                           ; 2 bytes @ 0x9
  1325                           
  1326  0029                     Get_HMC5883L_Values@cval:	
  1327                           ; 2 bytes @ 0x9
  1328                           
  1329                           
  1330                           ; 6 bytes @ 0x9
  1331  0029                     	ds	2
  1332  002B                     itoa@base:	
  1333  002B                     printUShort@buffer:	
  1334                           ; 2 bytes @ 0xB
  1335                           
  1336                           
  1337                           ; 16 bytes @ 0xB
  1338  002B                     	ds	1
  1339  002C                     _CalculateSumOfSquares$323:	
  1340  002C                     isqrt@temp:	
  1341                           ; 2 bytes @ 0xC
  1342                           
  1343                           
  1344                           ; 4 bytes @ 0xC
  1345  002C                     	ds	1
  1346  002D                     ??_itoa:	
  1347                           
  1348                           ; 0 bytes @ 0xD
  1349  002D                     	ds	1
  1350  002E                     itoa@cp:	
  1351  002E                     _CalculateSumOfSquares$324:	
  1352                           ; 1 bytes @ 0xE
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0xE
  1356  002E                     	ds	1
  1357  002F                     itoa@buf:	
  1358                           
  1359                           ; 1 bytes @ 0xF
  1360  002F                     	ds	1
  1361  0030                     ?_printValue:	
  1362  0030                     ?_printCentiValue:	
  1363                           ; 0 bytes @ 0x10
  1364                           
  1365  0030                     ?_printDeciValue:	
  1366                           ; 0 bytes @ 0x10
  1367                           
  1368  0030                     printValue@value:	
  1369                           ; 0 bytes @ 0x10
  1370                           
  1371  0030                     _CalculateSumOfSquares$325:	
  1372                           ; 2 bytes @ 0x10
  1373                           
  1374  0030                     isqrt@bshft:	
  1375                           ; 2 bytes @ 0x10
  1376                           
  1377  0030                     printCentiValue@value:	
  1378                           ; 4 bytes @ 0x10
  1379                           
  1380  0030                     printDeciValue@value:	
  1381                           ; 4 bytes @ 0x10
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x10
  1385  0030                     	ds	2
  1386  0032                     CalculateSumOfSquares@GxSquare:	
  1387  0032                     printValue@buffer:	
  1388                           ; 4 bytes @ 0x12
  1389                           
  1390                           
  1391                           ; 16 bytes @ 0x12
  1392  0032                     	ds	2
  1393  0034                     isqrt@g:	
  1394  0034                     printCentiValue@buffer:	
  1395                           ; 4 bytes @ 0x14
  1396                           
  1397  0034                     printDeciValue@buffer:	
  1398                           ; 16 bytes @ 0x14
  1399                           
  1400                           
  1401                           ; 16 bytes @ 0x14
  1402  0034                     	ds	2
  1403  0036                     CalculateSumOfSquares@GySquare:	
  1404                           
  1405                           ; 4 bytes @ 0x16
  1406  0036                     	ds	2
  1407  0038                     isqrt@b:	
  1408                           
  1409                           ; 4 bytes @ 0x18
  1410  0038                     	ds	2
  1411  003A                     CalculateSumOfSquares@GzSquare:	
  1412                           
  1413                           ; 4 bytes @ 0x1A
  1414  003A                     	ds	10
  1415  0044                     printCentiValue@T:	
  1416  0044                     printDeciValue@T:	
  1417                           ; 2 bytes @ 0x24
  1418                           
  1419                           
  1420                           ; 2 bytes @ 0x24
  1421  0044                     	ds	2
  1422  0046                     printCentiValue@_lvalue:	
  1423  0046                     printDeciValue@_lvalue:	
  1424                           ; 4 bytes @ 0x26
  1425                           
  1426                           
  1427                           ; 4 bytes @ 0x26
  1428  0046                     	ds	4
  1429  004A                     ?_printGForce:	
  1430  004A                     ?_printGyro:	
  1431                           ; 0 bytes @ 0x2A
  1432                           
  1433  004A                     ??_printVoltage:	
  1434                           ; 0 bytes @ 0x2A
  1435                           
  1436  004A                     printGForce@RawG:	
  1437                           ; 0 bytes @ 0x2A
  1438                           
  1439  004A                     printGyro@RawG:	
  1440                           ; 4 bytes @ 0x2A
  1441                           
  1442                           
  1443                           ; 4 bytes @ 0x2A
  1444  004A                     	ds	3
  1445  004D                     printVoltage@VDDValue:	
  1446                           
  1447                           ; 4 bytes @ 0x2D
  1448  004D                     	ds	1
  1449  004E                     DisplayInfo@Gt:	
  1450                           
  1451                           ; 2 bytes @ 0x2E
  1452  004E                     	ds	2
  1453  0050                     DisplayInfo@cy:	
  1454                           
  1455                           ; 2 bytes @ 0x30
  1456  0050                     	ds	1
  1457  0051                     printVoltage@value:	
  1458                           
  1459                           ; 2 bytes @ 0x31
  1460  0051                     	ds	1
  1461  0052                     DisplayInfo@cz:	
  1462                           
  1463                           ; 2 bytes @ 0x32
  1464  0052                     	ds	2
  1465  0054                     ??_main:	
  1466                           
  1467                           ; 0 bytes @ 0x34
  1468  0054                     	ds	4
  1469  0058                     main@UserKey:	
  1470                           
  1471                           ; 1 bytes @ 0x38
  1472  0058                     	ds	1
  1473                           
  1474                           	psect	maintext
  1475  0052                     __pmaintext:	
  1476 ;;
  1477 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1478 ;;
  1479 ;; *************** function _main *****************
  1480 ;; Defined at:
  1481 ;;		line 621 in file "blueGyro.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  m_Timer         2    0        unsigned short 
  1486 ;;  UserKey         1   56[BANK0 ] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2  369[None  ] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : B1F/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1496 ;;      Params:         0       0       0       0
  1497 ;;      Locals:         0       1       0       0
  1498 ;;      Temps:          0       4       0       0
  1499 ;;      Totals:         0       5       0       0
  1500 ;;Total ram usage:        5 bytes
  1501 ;; Hardware stack levels required when called:    7
  1502 ;; This function calls:
  1503 ;;		_AT24CM02_ReadBlock
  1504 ;;		_AT24CM02_WriteBlock
  1505 ;;		_CalculateSumOfSquares
  1506 ;;		_DisplayData
  1507 ;;		_DisplayInfo
  1508 ;;		_FindDeltaG
  1509 ;;		_Get_Accel_Values
  1510 ;;		_Get_HMC5883L_Values
  1511 ;;		_GotInt_MPU6050
  1512 ;;		_Init1msTimer
  1513 ;;		_LoadSetting
  1514 ;;		_MPU6050_Test_I2C
  1515 ;;		_SaveSetting
  1516 ;;		_Setup_HMC5883L
  1517 ;;		_Setup_MPU6050
  1518 ;;		___aldiv
  1519 ;;		_cputs
  1520 ;;		_i2c_Init
  1521 ;;		_printVersion
  1522 ;;		_printVoltage
  1523 ;; This function is called by:
  1524 ;;		Startup code after reset
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _main
  1530  0052                     _main:	
  1531                           
  1532                           ;blueGyro.c: 622: unsigned short m_Timer;
  1533                           ;blueGyro.c: 623: char UserKey;
  1534                           ;blueGyro.c: 625: OSCCON = 0b11110000;
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1538  0052  30F0               	movlw	240
  1539  0053  0021               	movlb	1	; select bank1
  1540  0054  0099               	movwf	25	;volatile
  1541                           
  1542                           ;blueGyro.c: 626: OPTION_REG = 0b00000011;
  1543  0055  3003               	movlw	3
  1544  0056  0095               	movwf	21	;volatile
  1545                           
  1546                           ;blueGyro.c: 627: ANSELA = 0b00000;
  1547  0057  0023               	movlb	3	; select bank3
  1548  0058  018C               	clrf	12	;volatile
  1549                           
  1550                           ;blueGyro.c: 628: PORTA = 0b00100000;
  1551  0059  3020               	movlw	32
  1552  005A  0020               	movlb	0	; select bank0
  1553  005B  008C               	movwf	12	;volatile
  1554                           
  1555                           ;blueGyro.c: 629: WPUA = 0b00111111;
  1556  005C  303F               	movlw	63
  1557  005D  0024               	movlb	4	; select bank4
  1558  005E  008C               	movwf	12	;volatile
  1559                           
  1560                           ;blueGyro.c: 630: TRISA = 0b00011111;
  1561  005F  301F               	movlw	31
  1562  0060  0021               	movlb	1	; select bank1
  1563  0061  008C               	movwf	12	;volatile
  1564                           
  1565                           ;blueGyro.c: 632: INTCON = 0b00000000;
  1566  0062  018B               	clrf	11	;volatile
  1567                           
  1568                           ;blueGyro.c: 636: ADCON0=0;
  1569  0063  019D               	clrf	29	;volatile
  1570                           
  1571                           ;blueGyro.c: 637: FVRCON=0;
  1572  0064  0022               	movlb	2	; select bank2
  1573  0065  0197               	clrf	23	;volatile
  1574                           
  1575                           ;blueGyro.c: 641: APFCON = 0b10000100;
  1576  0066  3084               	movlw	132
  1577  0067  009D               	movwf	29	;volatile
  1578                           
  1579                           ;blueGyro.c: 642: TXSTA = 0b10000010;
  1580  0068  3082               	movlw	130
  1581  0069  0023               	movlb	3	; select bank3
  1582  006A  009E               	movwf	30	;volatile
  1583                           
  1584                           ;blueGyro.c: 643: RCSTA = 0;
  1585  006B  019D               	clrf	29	;volatile
  1586                           
  1587                           ;blueGyro.c: 645: BRGH=1;
  1588  006C  151E               	bsf	30,2	;volatile
  1589                           
  1590                           ;blueGyro.c: 647: BRG16 = 0;
  1591  006D  119F               	bcf	31,3	;volatile
  1592                           
  1593                           ;blueGyro.c: 648: SYNC =0;
  1594  006E  121E               	bcf	30,4	;volatile
  1595                           
  1596                           ;blueGyro.c: 650: SPBRGL = 16;
  1597  006F  3010               	movlw	16
  1598  0070  009B               	movwf	27	;volatile
  1599                           
  1600                           ;blueGyro.c: 652: SPBRGH =0;
  1601  0071  019C               	clrf	28	;volatile
  1602                           
  1603                           ;blueGyro.c: 653: TXEN =1;
  1604  0072  169E               	bsf	30,5	;volatile
  1605                           
  1606                           ;blueGyro.c: 654: SPEN = 1;
  1607  0073  179D               	bsf	29,7	;volatile
  1608                           
  1609                           ;blueGyro.c: 655: CREN = 1;
  1610  0074  161D               	bsf	29,4	;volatile
  1611                           
  1612                           ;blueGyro.c: 656: RCIE =0;
  1613  0075  0021               	movlb	1	; select bank1
  1614  0076  1291               	bcf	17,5	;volatile
  1615                           
  1616                           ;blueGyro.c: 657: TXIE =0;
  1617  0077  1211               	bcf	17,4	;volatile
  1618                           
  1619                           ;blueGyro.c: 658: RCIF =0;
  1620  0078  0020               	movlb	0	; select bank0
  1621  0079  1291               	bcf	17,5	;volatile
  1622                           
  1623                           ;blueGyro.c: 659: TXIF = 0;
  1624  007A  1211               	bcf	17,4	;volatile
  1625                           
  1626                           ;blueGyro.c: 660: SCKP = 0;
  1627  007B  0023               	movlb	3	; select bank3
  1628  007C  121F               	bcf	31,4	;volatile
  1629                           
  1630                           ;blueGyro.c: 661: ABDEN = 0;
  1631  007D  101F               	bcf	31,0	;volatile
  1632                           
  1633                           ;blueGyro.c: 663: InFiFo=0;
  1634  007E  0020               	movlb	0	; select bank0
  1635  007F  01E4               	clrf	_InFiFo	;volatile
  1636                           
  1637                           ;blueGyro.c: 664: OutFiFo=0;
  1638  0080  01E6               	clrf	_OutFiFo	;volatile
  1639                           
  1640                           ;blueGyro.c: 665: GIE = 1;
  1641  0081  178B               	bsf	11,7	;volatile
  1642                           
  1643                           ;blueGyro.c: 666: PEIE =1;
  1644  0082  170B               	bsf	11,6	;volatile
  1645                           
  1646                           ;blueGyro.c: 671: LoadSetting();
  1647  0083  3189  21B1  3180   	fcall	_LoadSetting
  1648                           
  1649                           ;blueGyro.c: 674: Init1msTimer() ;
  1650  0086  3188  20CF  3180   	fcall	_Init1msTimer
  1651                           
  1652                           ;blueGyro.c: 679: _delay((unsigned long)((100)*(32000000/4000.0)));
  1653  0089  3005               	movlw	5
  1654  008A  0020               	movlb	0	; select bank0
  1655  008B  00D6               	movwf	??_main+2
  1656  008C  300F               	movlw	15
  1657  008D  00D5               	movwf	??_main+1
  1658  008E  30F4               	movlw	244
  1659  008F  00D4               	movwf	??_main
  1660  0090                     u3317:	
  1661  0090  0BD4               	decfsz	??_main,f
  1662  0091  2890               	goto	u3317
  1663  0092  0BD5               	decfsz	??_main+1,f
  1664  0093  2890               	goto	u3317
  1665  0094  0BD6               	decfsz	??_main+2,f
  1666  0095  2890               	goto	u3317
  1667                           
  1668                           ;blueGyro.c: 680: printVersion();
  1669  0096  3188  2098  3180   	fcall	_printVersion
  1670                           
  1671                           ;blueGyro.c: 681: printVoltage();
  1672  0099  3187  279A  3180   	fcall	_printVoltage
  1673                           
  1674                           ;blueGyro.c: 684: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1675  009C  30CB               	movlw	203
  1676  009D  0020               	movlb	0	; select bank0
  1677  009E  00D6               	movwf	??_main+2
  1678  009F  30ED               	movlw	237
  1679  00A0  00D5               	movwf	??_main+1
  1680  00A1  304C               	movlw	76
  1681  00A2  00D4               	movwf	??_main
  1682  00A3                     u3327:	
  1683  00A3  0BD4               	decfsz	??_main,f
  1684  00A4  28A3               	goto	u3327
  1685  00A5  0BD5               	decfsz	??_main+1,f
  1686  00A6  28A3               	goto	u3327
  1687  00A7  0BD6               	decfsz	??_main+2,f
  1688  00A8  28A3               	goto	u3327
  1689  00A9  3200               	nop2
  1690                           
  1691                           ;blueGyro.c: 685: i2c_Init();
  1692  00AA  3188  20A7  3180   	fcall	_i2c_Init
  1693                           
  1694                           ;blueGyro.c: 686: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1695  00AD  3029               	movlw	41
  1696  00AE  0020               	movlb	0	; select bank0
  1697  00AF  00D6               	movwf	??_main+2
  1698  00B0  3096               	movlw	150
  1699  00B1  00D5               	movwf	??_main+1
  1700  00B2  30A6               	movlw	166
  1701  00B3  00D4               	movwf	??_main
  1702  00B4                     u3337:	
  1703  00B4  0BD4               	decfsz	??_main,f
  1704  00B5  28B4               	goto	u3337
  1705  00B6  0BD5               	decfsz	??_main+1,f
  1706  00B7  28B4               	goto	u3337
  1707  00B8  0BD6               	decfsz	??_main+2,f
  1708  00B9  28B4               	goto	u3337
  1709                           
  1710                           ;blueGyro.c: 687: MPU6050_Test_I2C();
  1711  00BA  3189  21CD  3180   	fcall	_MPU6050_Test_I2C
  1712                           
  1713                           ;blueGyro.c: 688: Setup_MPU6050();
  1714  00BD  318E  262A  3180   	fcall	_Setup_MPU6050
  1715                           
  1716                           ;blueGyro.c: 691: Setup_HMC5883L();
  1717  00C0  3189  2167  3180   	fcall	_Setup_HMC5883L
  1718                           
  1719                           ;blueGyro.c: 694: Mode= RCREG;
  1720  00C3  0023               	movlb	3	; select bank3
  1721  00C4  0819               	movf	25,w	;volatile
  1722  00C5  0020               	movlb	0	; select bank0
  1723  00C6  00D4               	movwf	??_main
  1724  00C7  0854               	movf	??_main,w
  1725  00C8  00ED               	movwf	_Mode	;volatile
  1726                           
  1727                           ;blueGyro.c: 695: Mode= 255;
  1728  00C9  30FF               	movlw	255
  1729  00CA  00D4               	movwf	??_main
  1730  00CB  0854               	movf	??_main,w
  1731  00CC  00ED               	movwf	_Mode	;volatile
  1732  00CD                     l3620:	
  1733                           ;blueGyro.c: 697: while(1)
  1734                           
  1735                           
  1736                           ;blueGyro.c: 698: {
  1737                           ;blueGyro.c: 701: if(RCIF)
  1738  00CD  0020               	movlb	0	; select bank0
  1739  00CE  1E91               	btfss	17,5	;volatile
  1740  00CF  295E               	goto	l3678
  1741                           
  1742                           ;blueGyro.c: 702: {
  1743                           ;blueGyro.c: 703: UserKey = RCREG;
  1744  00D0  0023               	movlb	3	; select bank3
  1745  00D1  0819               	movf	25,w	;volatile
  1746  00D2  0020               	movlb	0	; select bank0
  1747  00D3  00D4               	movwf	??_main
  1748  00D4  0854               	movf	??_main,w
  1749  00D5  00D8               	movwf	main@UserKey
  1750                           
  1751                           ;blueGyro.c: 705: if ((UserKey == 'D') || (UserKey == 'd' ))
  1752  00D6  3044               	movlw	68
  1753  00D7  0658               	xorwf	main@UserKey,w
  1754  00D8  1903               	btfsc	3,2
  1755  00D9  28DE               	goto	l3628
  1756  00DA  3064               	movlw	100
  1757  00DB  0658               	xorwf	main@UserKey,w
  1758  00DC  1D03               	btfss	3,2
  1759  00DD  28F7               	goto	l3636
  1760  00DE                     l3628:	
  1761                           
  1762                           ;blueGyro.c: 706: {
  1763                           ;blueGyro.c: 707: AT24CM02_BlockIdx=0;
  1764  00DE  01DD               	clrf	_AT24CM02_BlockIdx
  1765  00DF  01DE               	clrf	_AT24CM02_BlockIdx+1
  1766                           
  1767                           ;blueGyro.c: 708: AT24CM02_ReadBlock(0);
  1768  00E0  3000               	movlw	0
  1769  00E1  00A6               	movwf	AT24CM02_ReadBlock@block
  1770  00E2  00A7               	movwf	AT24CM02_ReadBlock@block+1
  1771  00E3  318A  22B5  3180   	fcall	_AT24CM02_ReadBlock
  1772                           
  1773                           ;blueGyro.c: 709: AT24CM02_BlockID= CurrentData.BlockID;
  1774  00E6  301A               	movlw	26
  1775  00E7  3ED0               	addlw	(low (_CurrentData| 0))& (0+255)
  1776  00E8  0086               	movwf	6
  1777  00E9  0187               	clrf	7
  1778  00EA  3F40               	moviw [0]fsr1
  1779  00EB  0020               	movlb	0	; select bank0
  1780  00EC  00D9               	movwf	_AT24CM02_BlockID
  1781  00ED  3F41               	moviw [1]fsr1
  1782  00EE  00DA               	movwf	_AT24CM02_BlockID+1
  1783  00EF  3F42               	moviw [2]fsr1
  1784  00F0  00DB               	movwf	_AT24CM02_BlockID+2
  1785  00F1  3F43               	moviw [3]fsr1
  1786  00F2  00DC               	movwf	_AT24CM02_BlockID+3
  1787                           
  1788                           ;blueGyro.c: 710: NewMode= 5;
  1789  00F3  3005               	movlw	5
  1790  00F4  00D4               	movwf	??_main
  1791  00F5  0854               	movf	??_main,w
  1792  00F6  00E5               	movwf	_NewMode	;volatile
  1793  00F7                     l3636:	
  1794                           
  1795                           ;blueGyro.c: 711: }
  1796                           ;blueGyro.c: 712: if ((UserKey == 'G' ) || (UserKey == 'g' ))
  1797  00F7  3047               	movlw	71
  1798  00F8  0658               	xorwf	main@UserKey,w
  1799  00F9  1903               	btfsc	3,2
  1800  00FA  28FF               	goto	l3640
  1801  00FB  3067               	movlw	103
  1802  00FC  0658               	xorwf	main@UserKey,w
  1803  00FD  1D03               	btfss	3,2
  1804  00FE  2901               	goto	l3642
  1805  00FF                     l3640:	
  1806                           
  1807                           ;blueGyro.c: 713: NewMode=1;
  1808  00FF  3001               	movlw	1
  1809  0100  291A               	goto	L2
  1810  0101                     l3642:	
  1811                           
  1812                           ;blueGyro.c: 714: else if (UserKey== 27)
  1813  0101  301B               	movlw	27
  1814  0102  0658               	xorwf	main@UserKey,w
  1815  0103  1D03               	btfss	3,2
  1816  0104  2907               	goto	l3646
  1817                           
  1818                           ;blueGyro.c: 715: NewMode= 0;
  1819  0105  01E5               	clrf	_NewMode	;volatile
  1820  0106  295E               	goto	l3678
  1821  0107                     l3646:	
  1822                           
  1823                           ;blueGyro.c: 717: else if ((UserKey== 'I') || (UserKey== 'i'))
  1824  0107  3049               	movlw	73
  1825  0108  0658               	xorwf	main@UserKey,w
  1826  0109  1903               	btfsc	3,2
  1827  010A  290F               	goto	l3650
  1828  010B  3069               	movlw	105
  1829  010C  0658               	xorwf	main@UserKey,w
  1830  010D  1D03               	btfss	3,2
  1831  010E  2911               	goto	l3652
  1832  010F                     l3650:	
  1833                           
  1834                           ;blueGyro.c: 718: NewMode= 100;
  1835  010F  3064               	movlw	100
  1836  0110  291A               	goto	L2
  1837  0111                     l3652:	
  1838                           
  1839                           ;blueGyro.c: 720: else if ((UserKey == 'H' ) || (UserKey == 'h'))
  1840  0111  3048               	movlw	72
  1841  0112  0658               	xorwf	main@UserKey,w
  1842  0113  1903               	btfsc	3,2
  1843  0114  2919               	goto	l3656
  1844  0115  3068               	movlw	104
  1845  0116  0658               	xorwf	main@UserKey,w
  1846  0117  1D03               	btfss	3,2
  1847  0118  291E               	goto	l3658
  1848  0119                     l3656:	
  1849                           
  1850                           ;blueGyro.c: 721: NewMode = 3;
  1851  0119  3003               	movlw	3
  1852  011A                     L2:	
  1853  011A  00D4               	movwf	??_main
  1854  011B  0854               	movf	??_main,w
  1855  011C  00E5               	movwf	_NewMode	;volatile
  1856  011D  295E               	goto	l3678
  1857  011E                     l3658:	
  1858                           
  1859                           ;blueGyro.c: 722: else
  1860                           ;blueGyro.c: 723: if(Mode == 0)
  1861  011E  086D               	movf	_Mode,w	;volatile
  1862  011F  1D03               	btfss	3,2
  1863  0120  295E               	goto	l3678
  1864                           
  1865                           ;blueGyro.c: 724: {
  1866                           ;blueGyro.c: 725: if ((UserKey == 'V') || (UserKey == 'v'))
  1867  0121  3056               	movlw	86
  1868  0122  0658               	xorwf	main@UserKey,w
  1869  0123  1903               	btfsc	3,2
  1870  0124  2929               	goto	l3664
  1871  0125  3076               	movlw	118
  1872  0126  0658               	xorwf	main@UserKey,w
  1873  0127  1D03               	btfss	3,2
  1874  0128  292D               	goto	l3666
  1875  0129                     l3664:	
  1876                           
  1877                           ;blueGyro.c: 726: printVoltage();
  1878  0129  3187  279A  3180   	fcall	_printVoltage
  1879  012C  295E               	goto	l3678
  1880  012D                     l3666:	
  1881                           
  1882                           ;blueGyro.c: 727: else if ((UserKey == 'Z') || (UserKey=='z'))
  1883  012D  305A               	movlw	90
  1884  012E  0020               	movlb	0	; select bank0
  1885  012F  0658               	xorwf	main@UserKey,w
  1886  0130  1903               	btfsc	3,2
  1887  0131  2936               	goto	l3670
  1888  0132  307A               	movlw	122
  1889  0133  0658               	xorwf	main@UserKey,w
  1890  0134  1D03               	btfss	3,2
  1891  0135  2957               	goto	l3674
  1892  0136                     l3670:	
  1893                           
  1894                           ;blueGyro.c: 728: {
  1895                           ;blueGyro.c: 729: NewMode= 4;
  1896  0136  3004               	movlw	4
  1897  0137  00D4               	movwf	??_main
  1898  0138  0854               	movf	??_main,w
  1899  0139  00E5               	movwf	_NewMode	;volatile
  1900                           
  1901                           ;blueGyro.c: 730: AccGyroX=0;
  1902  013A  3000               	movlw	0
  1903  013B  0021               	movlb	1	; select bank1
  1904  013C  00C3               	movwf	(_AccGyroX+3)^(0+128)
  1905  013D  3000               	movlw	0
  1906  013E  00C2               	movwf	(_AccGyroX+2)^(0+128)
  1907  013F  3000               	movlw	0
  1908  0140  00C1               	movwf	(_AccGyroX+1)^(0+128)
  1909  0141  3000               	movlw	0
  1910  0142  00C0               	movwf	_AccGyroX^(0+128)
  1911                           
  1912                           ;blueGyro.c: 731: AccGyroY=0;
  1913  0143  3000               	movlw	0
  1914  0144  00C7               	movwf	(_AccGyroY+3)^(0+128)
  1915  0145  3000               	movlw	0
  1916  0146  00C6               	movwf	(_AccGyroY+2)^(0+128)
  1917  0147  3000               	movlw	0
  1918  0148  00C5               	movwf	(_AccGyroY+1)^(0+128)
  1919  0149  3000               	movlw	0
  1920  014A  00C4               	movwf	_AccGyroY^(0+128)
  1921                           
  1922                           ;blueGyro.c: 732: AccGyroZ=0;
  1923  014B  3000               	movlw	0
  1924  014C  00CB               	movwf	(_AccGyroZ+3)^(0+128)
  1925  014D  3000               	movlw	0
  1926  014E  00CA               	movwf	(_AccGyroZ+2)^(0+128)
  1927  014F  3000               	movlw	0
  1928  0150  00C9               	movwf	(_AccGyroZ+1)^(0+128)
  1929  0151  3000               	movlw	0
  1930  0152  00C8               	movwf	_AccGyroZ^(0+128)
  1931                           
  1932                           ;blueGyro.c: 733: AccGyroCount=0;
  1933  0153  0020               	movlb	0	; select bank0
  1934  0154  01DF               	clrf	_AccGyroCount
  1935  0155  01E0               	clrf	_AccGyroCount+1
  1936                           
  1937                           ;blueGyro.c: 734: }
  1938  0156  295E               	goto	l3678
  1939  0157                     l3674:	
  1940                           
  1941                           ;blueGyro.c: 735: else if (UserKey =='?')
  1942  0157  303F               	movlw	63
  1943  0158  0658               	xorwf	main@UserKey,w
  1944  0159  1D03               	btfss	3,2
  1945  015A  295E               	goto	l3678
  1946                           
  1947                           ;blueGyro.c: 736: printVersion();
  1948  015B  3188  2098  3180   	fcall	_printVersion
  1949  015E                     l3678:	
  1950                           
  1951                           ;blueGyro.c: 737: }
  1952                           ;blueGyro.c: 739: }
  1953                           ;blueGyro.c: 743: if(Mode != NewMode)
  1954  015E  0020               	movlb	0	; select bank0
  1955  015F  086D               	movf	_Mode,w	;volatile
  1956  0160  0665               	xorwf	_NewMode,w	;volatile
  1957  0161  1903               	skipnz
  1958  0162  2999               	goto	l3696
  1959                           
  1960                           ;blueGyro.c: 744: {
  1961                           ;blueGyro.c: 745: Mode=NewMode;
  1962  0163  0865               	movf	_NewMode,w	;volatile
  1963  0164  00D4               	movwf	??_main
  1964  0165  0854               	movf	??_main,w
  1965  0166  00ED               	movwf	_Mode	;volatile
  1966                           
  1967                           ;blueGyro.c: 747: switch(Mode)
  1968  0167  298D               	goto	l3694
  1969  0168                     l3682:	
  1970                           ;blueGyro.c: 748: {
  1971                           ;blueGyro.c: 749: case 4: cputs("Zero Gyro.\r\n");
  1972                           
  1973  0168  307D               	movlw	low (STR_15| (0+32768))
  1974  0169  00F5               	movwf	cputs@s
  1975  016A  3085               	movlw	high (STR_15| (0+32768))
  1976  016B  00F6               	movwf	cputs@s+1
  1977  016C  3189  2115  3180   	fcall	_cputs
  1978                           
  1979                           ;blueGyro.c: 750: break;
  1980  016F  2999               	goto	l3696
  1981  0170                     l3684:	
  1982                           ;blueGyro.c: 751: case 0: cputs("IDLE\r\n");
  1983                           
  1984  0170  30B8               	movlw	low (STR_16| (0+32768))
  1985  0171  00F5               	movwf	cputs@s
  1986  0172  3085               	movlw	high (STR_16| (0+32768))
  1987  0173  00F6               	movwf	cputs@s+1
  1988  0174  3189  2115  3180   	fcall	_cputs
  1989                           
  1990                           ;blueGyro.c: 752: break;
  1991  0177  2999               	goto	l3696
  1992  0178                     l3686:	
  1993                           ;blueGyro.c: 753: case 1: cputs("READY\r\n");
  1994                           
  1995  0178  30A0               	movlw	low (STR_17| (0+32768))
  1996  0179  00F5               	movwf	cputs@s
  1997  017A  3085               	movlw	high (STR_17| (0+32768))
  1998  017B  00F6               	movwf	cputs@s+1
  1999  017C  3189  2115  3180   	fcall	_cputs
  2000                           
  2001                           ;blueGyro.c: 755: CurrentData.SumSquare=0;
  2002  017F  3000               	movlw	0
  2003  0180  0021               	movlb	1	; select bank1
  2004  0181  00E9               	movwf	((_CurrentData+3)^(0+128)+22)
  2005  0182  3000               	movlw	0
  2006  0183  00E8               	movwf	((_CurrentData+2)^(0+128)+22)
  2007  0184  3000               	movlw	0
  2008  0185  00E7               	movwf	((_CurrentData+1)^(0+128)+22)
  2009  0186  3000               	movlw	0
  2010  0187  00E6               	movwf	(_CurrentData^(0+128)+22)
  2011                           
  2012                           ;blueGyro.c: 756: TimerCrash=65535;
  2013  0188  30FF               	movlw	255
  2014  0189  00CE               	movwf	_TimerCrash^(0+128)	;volatile
  2015  018A  30FF               	movlw	255
  2016  018B  00CF               	movwf	(_TimerCrash^(0+128)+1)	;volatile
  2017                           
  2018                           ;blueGyro.c: 758: }
  2019                           
  2020                           ;blueGyro.c: 757: break;
  2021  018C  2999               	goto	l3696
  2022  018D                     l3694:	
  2023  018D  0020               	movlb	0	; select bank0
  2024  018E  086D               	movf	_Mode,w	;volatile
  2025                           
  2026                           ; Switch size 1, requested type "space"
  2027                           ; Number of cases is 3, Range of values is 0 to 4
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte           10     6 (average)
  2031                           ; direct_byte           16     6 (fixed)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is simple_byte
  2034  018F  3A00               	xorlw	0	; case 0
  2035  0190  1903               	skipnz
  2036  0191  2970               	goto	l3684
  2037  0192  3A01               	xorlw	1	; case 1
  2038  0193  1903               	skipnz
  2039  0194  2978               	goto	l3686
  2040  0195  3A05               	xorlw	5	; case 4
  2041  0196  1903               	skipnz
  2042  0197  2968               	goto	l3682
  2043  0198  2999               	goto	l3696
  2044  0199                     l3696:	
  2045                           
  2046                           ;blueGyro.c: 759: }
  2047                           ;blueGyro.c: 761: if(Mode == 4)
  2048  0199  3004               	movlw	4
  2049  019A  0020               	movlb	0	; select bank0
  2050  019B  066D               	xorwf	_Mode,w	;volatile
  2051  019C  1D03               	btfss	3,2
  2052  019D  2A81               	goto	l3726
  2053  019E                     l3700:	
  2054                           ;blueGyro.c: 762: {
  2055                           ;blueGyro.c: 763: while(GotInt_MPU6050()==0);
  2056                           
  2057  019E  3189  2151  3180   	fcall	_GotInt_MPU6050
  2058  01A1  3A00               	xorlw	0
  2059  01A2  1903               	skipnz
  2060  01A3  299E               	goto	l3700
  2061                           
  2062                           ;blueGyro.c: 764: Get_Accel_Values();
  2063  01A4  3185  25E1  3180   	fcall	_Get_Accel_Values
  2064                           
  2065                           ;blueGyro.c: 766: AccGyroX += CurrentData.Gyrox;
  2066  01A7  0021               	movlb	1	; select bank1
  2067  01A8  085A               	movf	(_CurrentData^(0+128)+10),w
  2068  01A9  0020               	movlb	0	; select bank0
  2069  01AA  00D4               	movwf	??_main
  2070  01AB  0021               	movlb	1	; select bank1
  2071  01AC  085B               	movf	((_CurrentData+1)^(0+128)+10),w
  2072  01AD  0020               	movlb	0	; select bank0
  2073  01AE  00D5               	movwf	??_main+1
  2074  01AF  3000               	movlw	0
  2075  01B0  1BD5               	btfsc	??_main+1,7
  2076  01B1  30FF               	movlw	255
  2077  01B2  00D6               	movwf	??_main+2
  2078  01B3  00D7               	movwf	??_main+3
  2079  01B4  0854               	movf	??_main,w
  2080  01B5  0021               	movlb	1	; select bank1
  2081  01B6  07C0               	addwf	_AccGyroX^(0+128),f
  2082  01B7  0020               	movlb	0	; select bank0
  2083  01B8  0855               	movf	??_main+1,w
  2084  01B9  0021               	movlb	1	; select bank1
  2085  01BA  3DC1               	addwfc	(_AccGyroX+1)^(0+128),f
  2086  01BB  0020               	movlb	0	; select bank0
  2087  01BC  0856               	movf	??_main+2,w
  2088  01BD  0021               	movlb	1	; select bank1
  2089  01BE  3DC2               	addwfc	(_AccGyroX+2)^(0+128),f
  2090  01BF  0020               	movlb	0	; select bank0
  2091  01C0  0857               	movf	??_main+3,w
  2092  01C1  0021               	movlb	1	; select bank1
  2093  01C2  3DC3               	addwfc	(_AccGyroX+3)^(0+128),f
  2094                           
  2095                           ;blueGyro.c: 767: AccGyroY += CurrentData.Gyroy;
  2096  01C3  085C               	movf	(_CurrentData^(0+128)+12),w
  2097  01C4  0020               	movlb	0	; select bank0
  2098  01C5  00D4               	movwf	??_main
  2099  01C6  0021               	movlb	1	; select bank1
  2100  01C7  085D               	movf	((_CurrentData+1)^(0+128)+12),w
  2101  01C8  0020               	movlb	0	; select bank0
  2102  01C9  00D5               	movwf	??_main+1
  2103  01CA  3000               	movlw	0
  2104  01CB  1BD5               	btfsc	??_main+1,7
  2105  01CC  30FF               	movlw	255
  2106  01CD  00D6               	movwf	??_main+2
  2107  01CE  00D7               	movwf	??_main+3
  2108  01CF  0854               	movf	??_main,w
  2109  01D0  0021               	movlb	1	; select bank1
  2110  01D1  07C4               	addwf	_AccGyroY^(0+128),f
  2111  01D2  0020               	movlb	0	; select bank0
  2112  01D3  0855               	movf	??_main+1,w
  2113  01D4  0021               	movlb	1	; select bank1
  2114  01D5  3DC5               	addwfc	(_AccGyroY+1)^(0+128),f
  2115  01D6  0020               	movlb	0	; select bank0
  2116  01D7  0856               	movf	??_main+2,w
  2117  01D8  0021               	movlb	1	; select bank1
  2118  01D9  3DC6               	addwfc	(_AccGyroY+2)^(0+128),f
  2119  01DA  0020               	movlb	0	; select bank0
  2120  01DB  0857               	movf	??_main+3,w
  2121  01DC  0021               	movlb	1	; select bank1
  2122  01DD  3DC7               	addwfc	(_AccGyroY+3)^(0+128),f
  2123                           
  2124                           ;blueGyro.c: 768: AccGyroZ += CurrentData.Gyroz;
  2125  01DE  085E               	movf	(_CurrentData^(0+128)+14),w
  2126  01DF  0020               	movlb	0	; select bank0
  2127  01E0  00D4               	movwf	??_main
  2128  01E1  0021               	movlb	1	; select bank1
  2129  01E2  085F               	movf	((_CurrentData+1)^(0+128)+14),w
  2130  01E3  0020               	movlb	0	; select bank0
  2131  01E4  00D5               	movwf	??_main+1
  2132  01E5  3000               	movlw	0
  2133  01E6  1BD5               	btfsc	??_main+1,7
  2134  01E7  30FF               	movlw	255
  2135  01E8  00D6               	movwf	??_main+2
  2136  01E9  00D7               	movwf	??_main+3
  2137  01EA  0854               	movf	??_main,w
  2138  01EB  0021               	movlb	1	; select bank1
  2139  01EC  07C8               	addwf	_AccGyroZ^(0+128),f
  2140  01ED  0020               	movlb	0	; select bank0
  2141  01EE  0855               	movf	??_main+1,w
  2142  01EF  0021               	movlb	1	; select bank1
  2143  01F0  3DC9               	addwfc	(_AccGyroZ+1)^(0+128),f
  2144  01F1  0020               	movlb	0	; select bank0
  2145  01F2  0856               	movf	??_main+2,w
  2146  01F3  0021               	movlb	1	; select bank1
  2147  01F4  3DCA               	addwfc	(_AccGyroZ+2)^(0+128),f
  2148  01F5  0020               	movlb	0	; select bank0
  2149  01F6  0857               	movf	??_main+3,w
  2150  01F7  0021               	movlb	1	; select bank1
  2151  01F8  3DCB               	addwfc	(_AccGyroZ+3)^(0+128),f
  2152                           
  2153                           ;blueGyro.c: 769: AccGyroCount++;
  2154  01F9  3001               	movlw	1
  2155  01FA  0020               	movlb	0	; select bank0
  2156  01FB  07DF               	addwf	_AccGyroCount,f
  2157  01FC  3000               	movlw	0
  2158  01FD  3DE0               	addwfc	_AccGyroCount+1,f
  2159                           
  2160                           ;blueGyro.c: 771: if(AccGyroCount>=250)
  2161  01FE  0860               	movf	_AccGyroCount+1,w
  2162  01FF  3A80               	xorlw	128
  2163  0200  00D4               	movwf	??_main
  2164  0201  3080               	movlw	128
  2165  0202  0254               	subwf	??_main,w
  2166  0203  1D03               	skipz
  2167  0204  2A07               	goto	u3225
  2168  0205  30FA               	movlw	250
  2169  0206  025F               	subwf	_AccGyroCount,w
  2170  0207                     u3225:	
  2171  0207  1C03               	skipc
  2172  0208  28CD               	goto	l3620
  2173                           
  2174                           ;blueGyro.c: 772: {
  2175                           ;blueGyro.c: 773: AccGyroX/=AccGyroCount;
  2176  0209  0020               	movlb	0	; select bank0
  2177  020A  085F               	movf	_AccGyroCount,w
  2178  020B  00F2               	movwf	___aldiv@divisor
  2179  020C  0860               	movf	_AccGyroCount+1,w
  2180  020D  00F3               	movwf	___aldiv@divisor+1
  2181  020E  0D89               	rlf	9,f
  2182  020F  3B89               	subwfb	9,f
  2183  0210  0989               	comf	9,f
  2184  0211  00F4               	movwf	___aldiv@divisor+2
  2185  0212  00F5               	movwf	___aldiv@divisor+3
  2186  0213  0021               	movlb	1	; select bank1
  2187  0214  0843               	movf	(_AccGyroX+3)^(0+128),w
  2188  0215  00F9               	movwf	___aldiv@dividend+3
  2189  0216  0842               	movf	(_AccGyroX+2)^(0+128),w
  2190  0217  00F8               	movwf	___aldiv@dividend+2
  2191  0218  0841               	movf	(_AccGyroX+1)^(0+128),w
  2192  0219  00F7               	movwf	___aldiv@dividend+1
  2193  021A  0840               	movf	_AccGyroX^(0+128),w
  2194  021B  00F6               	movwf	___aldiv@dividend
  2195  021C  318F  277E  3180   	fcall	___aldiv
  2196  021F  0875               	movf	?___aldiv+3,w
  2197  0220  0021               	movlb	1	; select bank1
  2198  0221  00C3               	movwf	(_AccGyroX+3)^(0+128)
  2199  0222  0874               	movf	?___aldiv+2,w
  2200  0223  00C2               	movwf	(_AccGyroX+2)^(0+128)
  2201  0224  0873               	movf	?___aldiv+1,w
  2202  0225  00C1               	movwf	(_AccGyroX+1)^(0+128)
  2203  0226  0872               	movf	?___aldiv,w
  2204  0227  00C0               	movwf	_AccGyroX^(0+128)
  2205                           
  2206                           ;blueGyro.c: 774: AccGyroY/=AccGyroCount;
  2207  0228  0020               	movlb	0	; select bank0
  2208  0229  085F               	movf	_AccGyroCount,w
  2209  022A  00F2               	movwf	___aldiv@divisor
  2210  022B  0860               	movf	_AccGyroCount+1,w
  2211  022C  00F3               	movwf	___aldiv@divisor+1
  2212  022D  0D89               	rlf	9,f
  2213  022E  3B89               	subwfb	9,f
  2214  022F  0989               	comf	9,f
  2215  0230  00F4               	movwf	___aldiv@divisor+2
  2216  0231  00F5               	movwf	___aldiv@divisor+3
  2217  0232  0021               	movlb	1	; select bank1
  2218  0233  0847               	movf	(_AccGyroY+3)^(0+128),w
  2219  0234  00F9               	movwf	___aldiv@dividend+3
  2220  0235  0846               	movf	(_AccGyroY+2)^(0+128),w
  2221  0236  00F8               	movwf	___aldiv@dividend+2
  2222  0237  0845               	movf	(_AccGyroY+1)^(0+128),w
  2223  0238  00F7               	movwf	___aldiv@dividend+1
  2224  0239  0844               	movf	_AccGyroY^(0+128),w
  2225  023A  00F6               	movwf	___aldiv@dividend
  2226  023B  318F  277E  3180   	fcall	___aldiv
  2227  023E  0875               	movf	?___aldiv+3,w
  2228  023F  0021               	movlb	1	; select bank1
  2229  0240  00C7               	movwf	(_AccGyroY+3)^(0+128)
  2230  0241  0874               	movf	?___aldiv+2,w
  2231  0242  00C6               	movwf	(_AccGyroY+2)^(0+128)
  2232  0243  0873               	movf	?___aldiv+1,w
  2233  0244  00C5               	movwf	(_AccGyroY+1)^(0+128)
  2234  0245  0872               	movf	?___aldiv,w
  2235  0246  00C4               	movwf	_AccGyroY^(0+128)
  2236                           
  2237                           ;blueGyro.c: 775: AccGyroZ/=AccGyroCount;
  2238  0247  0020               	movlb	0	; select bank0
  2239  0248  085F               	movf	_AccGyroCount,w
  2240  0249  00F2               	movwf	___aldiv@divisor
  2241  024A  0860               	movf	_AccGyroCount+1,w
  2242  024B  00F3               	movwf	___aldiv@divisor+1
  2243  024C  0D89               	rlf	9,f
  2244  024D  3B89               	subwfb	9,f
  2245  024E  0989               	comf	9,f
  2246  024F  00F4               	movwf	___aldiv@divisor+2
  2247  0250  00F5               	movwf	___aldiv@divisor+3
  2248  0251  0021               	movlb	1	; select bank1
  2249  0252  084B               	movf	(_AccGyroZ+3)^(0+128),w
  2250  0253  00F9               	movwf	___aldiv@dividend+3
  2251  0254  084A               	movf	(_AccGyroZ+2)^(0+128),w
  2252  0255  00F8               	movwf	___aldiv@dividend+2
  2253  0256  0849               	movf	(_AccGyroZ+1)^(0+128),w
  2254  0257  00F7               	movwf	___aldiv@dividend+1
  2255  0258  0848               	movf	_AccGyroZ^(0+128),w
  2256  0259  00F6               	movwf	___aldiv@dividend
  2257  025A  318F  277E  3180   	fcall	___aldiv
  2258  025D  0875               	movf	?___aldiv+3,w
  2259  025E  0021               	movlb	1	; select bank1
  2260  025F  00CB               	movwf	(_AccGyroZ+3)^(0+128)
  2261  0260  0874               	movf	?___aldiv+2,w
  2262  0261  00CA               	movwf	(_AccGyroZ+2)^(0+128)
  2263  0262  0873               	movf	?___aldiv+1,w
  2264  0263  00C9               	movwf	(_AccGyroZ+1)^(0+128)
  2265  0264  0872               	movf	?___aldiv,w
  2266  0265  00C8               	movwf	_AccGyroZ^(0+128)
  2267                           
  2268                           ;blueGyro.c: 777: Setting.GyroX=AccGyroX;
  2269  0266  0841               	movf	(_AccGyroX+1)^(0+128),w
  2270  0267  0020               	movlb	0	; select bank0
  2271  0268  00E8               	movwf	_Setting+1
  2272  0269  0021               	movlb	1	; select bank1
  2273  026A  0840               	movf	_AccGyroX^(0+128),w
  2274  026B  0020               	movlb	0	; select bank0
  2275  026C  00E7               	movwf	_Setting
  2276                           
  2277                           ;blueGyro.c: 778: Setting.GyroY=AccGyroY;
  2278  026D  0021               	movlb	1	; select bank1
  2279  026E  0845               	movf	(_AccGyroY+1)^(0+128),w
  2280  026F  0020               	movlb	0	; select bank0
  2281  0270  00EA               	movwf	_Setting+3
  2282  0271  0021               	movlb	1	; select bank1
  2283  0272  0844               	movf	_AccGyroY^(0+128),w
  2284  0273  0020               	movlb	0	; select bank0
  2285  0274  00E9               	movwf	_Setting+2
  2286                           
  2287                           ;blueGyro.c: 779: Setting.GyroZ=AccGyroZ;
  2288  0275  0021               	movlb	1	; select bank1
  2289  0276  0849               	movf	(_AccGyroZ+1)^(0+128),w
  2290  0277  0020               	movlb	0	; select bank0
  2291  0278  00EC               	movwf	_Setting+5
  2292  0279  0021               	movlb	1	; select bank1
  2293  027A  0848               	movf	_AccGyroZ^(0+128),w
  2294  027B  0020               	movlb	0	; select bank0
  2295  027C  00EB               	movwf	_Setting+4
  2296                           
  2297                           ;blueGyro.c: 781: SaveSetting();
  2298  027D  3189  21E9  3180   	fcall	_SaveSetting
  2299  0280  2AB7               	goto	l3740
  2300  0281                     l3726:	
  2301                           ;blueGyro.c: 784: }
  2302                           ;blueGyro.c: 785: continue;
  2303                           
  2304                           ;blueGyro.c: 783: NewMode=0;
  2305                           
  2306                           
  2307                           ;blueGyro.c: 786: }
  2308                           ;blueGyro.c: 788: if(Mode == 5)
  2309  0281  3005               	movlw	5
  2310  0282  066D               	xorwf	_Mode,w	;volatile
  2311  0283  1D03               	btfss	3,2
  2312  0284  2ABA               	goto	l3742
  2313                           
  2314                           ;blueGyro.c: 789: {
  2315                           ;blueGyro.c: 790: AT24CM02_ReadBlock(AT24CM02_BlockIdx++);
  2316  0285  085E               	movf	_AT24CM02_BlockIdx+1,w
  2317  0286  00A7               	movwf	AT24CM02_ReadBlock@block+1
  2318  0287  085D               	movf	_AT24CM02_BlockIdx,w
  2319  0288  00A6               	movwf	AT24CM02_ReadBlock@block
  2320  0289  318A  22B5  3180   	fcall	_AT24CM02_ReadBlock
  2321  028C  3001               	movlw	1
  2322  028D  0020               	movlb	0	; select bank0
  2323  028E  07DD               	addwf	_AT24CM02_BlockIdx,f
  2324  028F  3000               	movlw	0
  2325  0290  3DDE               	addwfc	_AT24CM02_BlockIdx+1,f
  2326                           
  2327                           ;blueGyro.c: 791: if(CurrentData.BlockID!= AT24CM02_BlockID)
  2328  0291  085C               	movf	_AT24CM02_BlockID+3,w
  2329  0292  0021               	movlb	1	; select bank1
  2330  0293  066D               	xorwf	((_CurrentData+3)^(0+128)+26),w
  2331  0294  1D03               	skipz
  2332  0295  2AA6               	goto	u3245
  2333  0296  0020               	movlb	0	; select bank0
  2334  0297  085B               	movf	_AT24CM02_BlockID+2,w
  2335  0298  0021               	movlb	1	; select bank1
  2336  0299  066C               	xorwf	((_CurrentData+2)^(0+128)+26),w
  2337  029A  1D03               	skipz
  2338  029B  2AA6               	goto	u3245
  2339  029C  0020               	movlb	0	; select bank0
  2340  029D  085A               	movf	_AT24CM02_BlockID+1,w
  2341  029E  0021               	movlb	1	; select bank1
  2342  029F  066B               	xorwf	((_CurrentData+1)^(0+128)+26),w
  2343  02A0  1D03               	skipz
  2344  02A1  2AA6               	goto	u3245
  2345  02A2  0020               	movlb	0	; select bank0
  2346  02A3  0859               	movf	_AT24CM02_BlockID,w
  2347  02A4  0021               	movlb	1	; select bank1
  2348  02A5  066A               	xorwf	(_CurrentData^(0+128)+26),w
  2349  02A6                     u3245:	
  2350  02A6  1D03               	btfss	3,2
  2351  02A7  2AB7               	goto	l3740
  2352                           
  2353                           ;blueGyro.c: 795: }
  2354                           ;blueGyro.c: 796: DisplayData();
  2355                           
  2356                           ;blueGyro.c: 794: continue;
  2357                           
  2358                           ;blueGyro.c: 792: {
  2359                           ;blueGyro.c: 793: NewMode= 0;
  2360  02A8  3186  267F  3180   	fcall	_DisplayData
  2361                           
  2362                           ;blueGyro.c: 797: if(AT24CM02_BlockIdx >= 8192)
  2363  02AB  0020               	movlb	0	; select bank0
  2364  02AC  085E               	movf	_AT24CM02_BlockIdx+1,w
  2365  02AD  3A80               	xorlw	128
  2366  02AE  00D4               	movwf	??_main
  2367  02AF  30A0               	movlw	160
  2368  02B0  0254               	subwf	??_main,w
  2369  02B1  1D03               	skipz
  2370  02B2  2AB5               	goto	u3255
  2371  02B3  3000               	movlw	0
  2372  02B4  025D               	subwf	_AT24CM02_BlockIdx,w
  2373  02B5                     u3255:	
  2374  02B5  1C03               	skipc
  2375  02B6  28CD               	goto	l3620
  2376  02B7                     l3740:	
  2377                           
  2378                           ;blueGyro.c: 798: NewMode= 0;
  2379  02B7  0020               	movlb	0	; select bank0
  2380  02B8  01E5               	clrf	_NewMode	;volatile
  2381                           
  2382                           ;blueGyro.c: 799: continue;
  2383  02B9  28CD               	goto	l3620
  2384  02BA                     l3742:	
  2385                           
  2386                           ;blueGyro.c: 800: }
  2387                           ;blueGyro.c: 802: if(Mode == 3)
  2388  02BA  3003               	movlw	3
  2389  02BB  066D               	xorwf	_Mode,w	;volatile
  2390  02BC  1D03               	btfss	3,2
  2391  02BD  2ADE               	goto	l3758
  2392  02BE                     l3746:	
  2393                           ;blueGyro.c: 803: {
  2394                           ;blueGyro.c: 804: while(GotInt_MPU6050()==0);
  2395                           
  2396  02BE  3189  2151  3180   	fcall	_GotInt_MPU6050
  2397  02C1  3A00               	xorlw	0
  2398  02C2  1903               	skipnz
  2399  02C3  2ABE               	goto	l3746
  2400                           
  2401                           ;blueGyro.c: 805: Get_Accel_Values();
  2402  02C4  3185  25E1  3180   	fcall	_Get_Accel_Values
  2403                           
  2404                           ;blueGyro.c: 807: Get_HMC5883L_Values();
  2405  02C7  318D  2572  3180   	fcall	_Get_HMC5883L_Values
  2406                           
  2407                           ;blueGyro.c: 809: CalculateSumOfSquares();
  2408  02CA  3184  2453  3180   	fcall	_CalculateSumOfSquares
  2409                           
  2410                           ;blueGyro.c: 810: DisplayData();
  2411  02CD  3186  267F  3180   	fcall	_DisplayData
  2412                           
  2413                           ;blueGyro.c: 812: AT24CM02_WriteBlock(AT24CM02_BlockIdx++);
  2414  02D0  0020               	movlb	0	; select bank0
  2415  02D1  085E               	movf	_AT24CM02_BlockIdx+1,w
  2416  02D2  00A7               	movwf	AT24CM02_WriteBlock@block+1
  2417  02D3  085D               	movf	_AT24CM02_BlockIdx,w
  2418  02D4  00A6               	movwf	AT24CM02_WriteBlock@block
  2419  02D5  318B  23A0  3180   	fcall	_AT24CM02_WriteBlock
  2420  02D8  3001               	movlw	1
  2421  02D9  0020               	movlb	0	; select bank0
  2422  02DA  07DD               	addwf	_AT24CM02_BlockIdx,f
  2423  02DB  3000               	movlw	0
  2424  02DC  3DDE               	addwfc	_AT24CM02_BlockIdx+1,f
  2425                           
  2426                           ;blueGyro.c: 815: continue;
  2427  02DD  28CD               	goto	l3620
  2428  02DE                     l3758:	
  2429                           
  2430                           ;blueGyro.c: 816: }
  2431                           ;blueGyro.c: 817: if(Mode == 1)
  2432  02DE  036D               	decf	_Mode,w	;volatile
  2433  02DF  1D03               	btfss	3,2
  2434  02E0  2B13               	goto	l3786
  2435                           
  2436                           ;blueGyro.c: 818: {
  2437                           ;blueGyro.c: 819: (GIE = 0);
  2438  02E1  138B               	bcf	11,7	;volatile
  2439                           
  2440                           ;blueGyro.c: 820: Timerms=0;
  2441  02E2  01FA               	clrf	_Timerms	;volatile
  2442  02E3  01FB               	clrf	_Timerms+1	;volatile
  2443                           
  2444                           ;blueGyro.c: 821: (GIE = 1);
  2445  02E4  178B               	bsf	11,7	;volatile
  2446                           
  2447                           ;blueGyro.c: 822: Get_Accel_Values();
  2448  02E5  3185  25E1  3180   	fcall	_Get_Accel_Values
  2449                           
  2450                           ;blueGyro.c: 824: Get_HMC5883L_Values();
  2451  02E8  318D  2572  3180   	fcall	_Get_HMC5883L_Values
  2452                           
  2453                           ;blueGyro.c: 826: CalculateSumOfSquares();
  2454  02EB  3184  2453  3180   	fcall	_CalculateSumOfSquares
  2455                           
  2456                           ;blueGyro.c: 827: if(FindDeltaG())
  2457  02EE  318C  2416  3180   	fcall	_FindDeltaG
  2458  02F1  3A00               	xorlw	0
  2459  02F2  1903               	skipnz
  2460  02F3  2B13               	goto	l3786
  2461                           
  2462                           ;blueGyro.c: 828: {
  2463                           ;blueGyro.c: 829: DisplayData();
  2464  02F4  3186  267F  3180   	fcall	_DisplayData
  2465                           
  2466                           ;blueGyro.c: 831: AT24CM02_BlockIdx=0;
  2467  02F7  0020               	movlb	0	; select bank0
  2468  02F8  01DD               	clrf	_AT24CM02_BlockIdx
  2469  02F9  01DE               	clrf	_AT24CM02_BlockIdx+1
  2470                           
  2471                           ;blueGyro.c: 832: AT24CM02_BlockID++;
  2472  02FA  3001               	movlw	1
  2473  02FB  07D9               	addwf	_AT24CM02_BlockID,f
  2474  02FC  3000               	movlw	0
  2475  02FD  3DDA               	addwfc	_AT24CM02_BlockID+1,f
  2476  02FE  3000               	movlw	0
  2477  02FF  3DDB               	addwfc	_AT24CM02_BlockID+2,f
  2478  0300  3000               	movlw	0
  2479  0301  3DDC               	addwfc	_AT24CM02_BlockID+3,f
  2480                           
  2481                           ;blueGyro.c: 833: AT24CM02_WriteBlock(AT24CM02_BlockIdx++);
  2482  0302  085E               	movf	_AT24CM02_BlockIdx+1,w
  2483  0303  00A7               	movwf	AT24CM02_WriteBlock@block+1
  2484  0304  085D               	movf	_AT24CM02_BlockIdx,w
  2485  0305  00A6               	movwf	AT24CM02_WriteBlock@block
  2486  0306  318B  23A0  3180   	fcall	_AT24CM02_WriteBlock
  2487  0309  3001               	movlw	1
  2488  030A  0020               	movlb	0	; select bank0
  2489  030B  07DD               	addwf	_AT24CM02_BlockIdx,f
  2490  030C  3000               	movlw	0
  2491  030D  3DDE               	addwfc	_AT24CM02_BlockIdx+1,f
  2492                           
  2493                           ;blueGyro.c: 835: NewMode= 3;
  2494  030E  3003               	movlw	3
  2495  030F  00D4               	movwf	??_main
  2496  0310  0854               	movf	??_main,w
  2497  0311  00E5               	movwf	_NewMode	;volatile
  2498                           
  2499                           ;blueGyro.c: 836: continue;
  2500  0312  28CD               	goto	l3620
  2501  0313                     l3786:	
  2502                           
  2503                           ;blueGyro.c: 837: }
  2504                           ;blueGyro.c: 838: }
  2505                           ;blueGyro.c: 841: if(Mode == 100)
  2506  0313  3064               	movlw	100
  2507  0314  0020               	movlb	0	; select bank0
  2508  0315  066D               	xorwf	_Mode,w	;volatile
  2509  0316  1D03               	btfss	3,2
  2510  0317  28CD               	goto	l3620
  2511                           
  2512                           ;blueGyro.c: 842: {
  2513                           ;blueGyro.c: 843: Get_Accel_Values();
  2514  0318  3185  25E1  3180   	fcall	_Get_Accel_Values
  2515                           
  2516                           ;blueGyro.c: 845: Get_HMC5883L_Values();
  2517  031B  318D  2572  3180   	fcall	_Get_HMC5883L_Values
  2518                           
  2519                           ;blueGyro.c: 847: DisplayInfo();
  2520  031E  3183  2325  3180   	fcall	_DisplayInfo
  2521                           
  2522                           ;blueGyro.c: 848: NewMode = 0;
  2523  0321  0020               	movlb	0	; select bank0
  2524  0322  01E5               	clrf	_NewMode	;volatile
  2525                           
  2526                           ;blueGyro.c: 849: Mode = 0;
  2527  0323  01ED               	clrf	_Mode	;volatile
  2528  0324  28CD               	goto	l3620
  2529  0325                     __end_of_main:	
  2530                           
  2531                           	psect	text1
  2532  079A                     __ptext1:	
  2533 ;; *************** function _printVoltage *****************
  2534 ;; Defined at:
  2535 ;;		line 574 in file "blueGyro.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  VDDValue        4   45[BANK0 ] long 
  2540 ;;  value           2   49[BANK0 ] unsigned short 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;		None               void
  2543 ;; Registers used:
  2544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2550 ;;      Params:         0       0       0       0
  2551 ;;      Locals:         0       6       0       0
  2552 ;;      Temps:          0       3       0       0
  2553 ;;      Totals:         0       9       0       0
  2554 ;;Total ram usage:        9 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    5
  2557 ;; This function calls:
  2558 ;;		___aldiv
  2559 ;;		_cputs
  2560 ;;		_printCentiValue
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _printVoltage
  2568  079A                     _printVoltage:	
  2569                           
  2570                           ;blueGyro.c: 587: unsigned short value;
  2571                           ;blueGyro.c: 588: long VDDValue;
  2572                           ;blueGyro.c: 591: ADCON1= 0b11100000;
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _printVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2576  079A  30E0               	movlw	224
  2577  079B  0021               	movlb	1	; select bank1
  2578  079C  009E               	movwf	30	;volatile
  2579                           
  2580                           ;blueGyro.c: 593: FVRCON= 0b11000010;
  2581  079D  30C2               	movlw	194
  2582  079E  0022               	movlb	2	; select bank2
  2583  079F  0097               	movwf	23	;volatile
  2584                           
  2585                           ;blueGyro.c: 595: ADCON0= 0b01111101;
  2586  07A0  307D               	movlw	125
  2587  07A1  0021               	movlb	1	; select bank1
  2588  07A2  009D               	movwf	29	;volatile
  2589                           
  2590                           ;blueGyro.c: 597: _delay((unsigned long)((100)*(32000000/4000.0)));
  2591  07A3  3005               	movlw	5
  2592  07A4  0020               	movlb	0	; select bank0
  2593  07A5  00CC               	movwf	??_printVoltage+2
  2594  07A6  300F               	movlw	15
  2595  07A7  00CB               	movwf	??_printVoltage+1
  2596  07A8  30F4               	movlw	244
  2597  07A9  00CA               	movwf	??_printVoltage
  2598  07AA                     u3347:	
  2599  07AA  0BCA               	decfsz	??_printVoltage,f
  2600  07AB  2FAA               	goto	u3347
  2601  07AC  0BCB               	decfsz	??_printVoltage+1,f
  2602  07AD  2FAA               	goto	u3347
  2603  07AE  0BCC               	decfsz	??_printVoltage+2,f
  2604  07AF  2FAA               	goto	u3347
  2605                           
  2606                           ;blueGyro.c: 599: ADGO=1;
  2607  07B0  0021               	movlb	1	; select bank1
  2608  07B1  149D               	bsf	29,1	;volatile
  2609  07B2                     l362:	
  2610                           ;blueGyro.c: 601: while(ADGO);
  2611                           
  2612  07B2  189D               	btfsc	29,1	;volatile
  2613  07B3  2FB2               	goto	l362
  2614                           
  2615                           ;blueGyro.c: 602: value = ADRES;
  2616  07B4  081C               	movf	28,w	;volatile
  2617  07B5  0020               	movlb	0	; select bank0
  2618  07B6  00D2               	movwf	printVoltage@value+1
  2619  07B7  0021               	movlb	1	; select bank1
  2620  07B8  081B               	movf	27,w	;volatile
  2621  07B9  0020               	movlb	0	; select bank0
  2622  07BA  00D1               	movwf	printVoltage@value
  2623                           
  2624                           ;blueGyro.c: 603: cputs("VDD = ");
  2625  07BB  30BF               	movlw	low (STR_12| (0+32768))
  2626  07BC  00F5               	movwf	cputs@s
  2627  07BD  3085               	movlw	high (STR_12| (0+32768))
  2628  07BE  00F6               	movwf	cputs@s+1
  2629  07BF  3189  2115  3187   	fcall	_cputs
  2630                           
  2631                           ;blueGyro.c: 604: if(value ==0)
  2632  07C2  0020               	movlb	0	; select bank0
  2633  07C3  0851               	movf	printVoltage@value,w
  2634  07C4  0452               	iorwf	printVoltage@value+1,w
  2635  07C5  1D03               	btfss	3,2
  2636  07C6  2FCF               	goto	l3504
  2637                           
  2638                           ;blueGyro.c: 605: cputs("---");
  2639  07C7  30D5               	movlw	low (STR_13| (0+32768))
  2640  07C8  00F5               	movwf	cputs@s
  2641  07C9  3085               	movlw	high (STR_13| (0+32768))
  2642  07CA  00F6               	movwf	cputs@s+1
  2643  07CB  3189  2115  3187   	fcall	_cputs
  2644  07CE  2FF5               	goto	l3508
  2645  07CF                     l3504:	
  2646                           
  2647                           ;blueGyro.c: 606: else
  2648                           ;blueGyro.c: 607: {
  2649                           ;blueGyro.c: 609: VDDValue = (long)209715 / ((long)value);
  2650  07CF  0020               	movlb	0	; select bank0
  2651  07D0  0851               	movf	printVoltage@value,w
  2652  07D1  00F2               	movwf	___aldiv@divisor
  2653  07D2  0852               	movf	printVoltage@value+1,w
  2654  07D3  00F3               	movwf	___aldiv@divisor+1
  2655  07D4  01F4               	clrf	___aldiv@divisor+2
  2656  07D5  01F5               	clrf	___aldiv@divisor+3
  2657  07D6  3000               	movlw	0
  2658  07D7  00F9               	movwf	___aldiv@dividend+3
  2659  07D8  3003               	movlw	3
  2660  07D9  00F8               	movwf	___aldiv@dividend+2
  2661  07DA  3033               	movlw	51
  2662  07DB  00F7               	movwf	___aldiv@dividend+1
  2663  07DC  3033               	movlw	51
  2664  07DD  00F6               	movwf	___aldiv@dividend
  2665  07DE  318F  277E  3187   	fcall	___aldiv
  2666  07E1  0875               	movf	?___aldiv+3,w
  2667  07E2  0020               	movlb	0	; select bank0
  2668  07E3  00D0               	movwf	printVoltage@VDDValue+3
  2669  07E4  0874               	movf	?___aldiv+2,w
  2670  07E5  00CF               	movwf	printVoltage@VDDValue+2
  2671  07E6  0873               	movf	?___aldiv+1,w
  2672  07E7  00CE               	movwf	printVoltage@VDDValue+1
  2673  07E8  0872               	movf	?___aldiv,w
  2674  07E9  00CD               	movwf	printVoltage@VDDValue
  2675                           
  2676                           ;blueGyro.c: 610: printCentiValue(VDDValue);
  2677  07EA  0850               	movf	printVoltage@VDDValue+3,w
  2678  07EB  00B3               	movwf	printCentiValue@value+3
  2679  07EC  084F               	movf	printVoltage@VDDValue+2,w
  2680  07ED  00B2               	movwf	printCentiValue@value+2
  2681  07EE  084E               	movf	printVoltage@VDDValue+1,w
  2682  07EF  00B1               	movwf	printCentiValue@value+1
  2683  07F0  084D               	movf	printVoltage@VDDValue,w
  2684  07F1  00B0               	movwf	printCentiValue@value
  2685  07F2  318F  2703  3187   	fcall	_printCentiValue
  2686  07F5                     l3508:	
  2687                           
  2688                           ;blueGyro.c: 611: }
  2689                           ;blueGyro.c: 612: cputs("V\r\n");
  2690  07F5  30D1               	movlw	low (STR_14| (0+32768))
  2691  07F6  00F5               	movwf	cputs@s
  2692  07F7  3085               	movlw	high (STR_14| (0+32768))
  2693  07F8  00F6               	movwf	cputs@s+1
  2694  07F9  3189  2115         	fcall	_cputs
  2695                           
  2696                           ;blueGyro.c: 616: ADCON0=0;
  2697  07FB  0021               	movlb	1	; select bank1
  2698  07FC  019D               	clrf	29	;volatile
  2699                           
  2700                           ;blueGyro.c: 617: FVRCON=0;
  2701  07FD  0022               	movlb	2	; select bank2
  2702  07FE  0197               	clrf	23	;volatile
  2703  07FF  0008               	return
  2704  0800                     __end_of_printVoltage:	
  2705                           
  2706                           	psect	text2
  2707  0898                     __ptext2:	
  2708 ;; *************** function _printVersion *****************
  2709 ;; Defined at:
  2710 ;;		line 568 in file "blueGyro.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;		None               void
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2724 ;;      Params:         0       0       0       0
  2725 ;;      Locals:         0       0       0       0
  2726 ;;      Temps:          0       0       0       0
  2727 ;;      Totals:         0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    3
  2731 ;; This function calls:
  2732 ;;		_cputs
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _printVersion
  2740  0898                     _printVersion:	
  2741                           
  2742                           ;blueGyro.c: 570: cputs("Catapult V1.02\r\n");
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _printVersion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2746  0898  306C               	movlw	low (STR_11| (0+32768))
  2747  0899  00F5               	movwf	cputs@s
  2748  089A  3085               	movlw	high (STR_11| (0+32768))
  2749  089B  00F6               	movwf	cputs@s+1
  2750  089C  3189  2115         	fcall	_cputs
  2751  089E  0008               	return
  2752  089F                     __end_of_printVersion:	
  2753                           
  2754                           	psect	text3
  2755  08A7                     __ptext3:	
  2756 ;; *************** function _i2c_Init *****************
  2757 ;; Defined at:
  2758 ;;		line 12 in file "i2cMaster.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;		None               void
  2765 ;; Registers used:
  2766 ;;		wreg, status,2
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2772 ;;      Params:         0       0       0       0
  2773 ;;      Locals:         0       0       0       0
  2774 ;;      Temps:          0       0       0       0
  2775 ;;      Totals:         0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _i2c_Init
  2788  08A7                     _i2c_Init:	
  2789                           
  2790                           ;i2cMaster.c: 16: TRISA1=1;
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _i2c_Init: [wreg+status,2]
  2794  08A7  0021               	movlb	1	; select bank1
  2795  08A8  148C               	bsf	12,1	;volatile
  2796                           
  2797                           ;i2cMaster.c: 17: TRISA2=1;
  2798  08A9  150C               	bsf	12,2	;volatile
  2799                           
  2800                           ;i2cMaster.c: 19: SSPCON1 = 0b00101000;
  2801  08AA  3028               	movlw	40
  2802  08AB  0024               	movlb	4	; select bank4
  2803  08AC  0095               	movwf	21	;volatile
  2804                           
  2805                           ;i2cMaster.c: 20: SSPCON2 = 0x00;
  2806  08AD  0196               	clrf	22	;volatile
  2807                           
  2808                           ;i2cMaster.c: 22: SSPADD = 19;
  2809  08AE  3013               	movlw	19
  2810  08AF  0092               	movwf	18	;volatile
  2811                           
  2812                           ;i2cMaster.c: 24: SSPSTAT = 0b11000000;
  2813  08B0  30C0               	movlw	192
  2814  08B1  0094               	movwf	20	;volatile
  2815  08B2  0008               	return
  2816  08B3                     __end_of_i2c_Init:	
  2817                           
  2818                           	psect	text4
  2819  0E2A                     __ptext4:	
  2820 ;; *************** function _Setup_MPU6050 *****************
  2821 ;; Defined at:
  2822 ;;		line 27 in file "MPU6050.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  loop            2    6[BANK0 ] int 
  2827 ;;  TheReg          1    8[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;		None               void
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2837 ;;      Params:         0       0       0       0
  2838 ;;      Locals:         0       3       0       0
  2839 ;;      Temps:          0       2       0       0
  2840 ;;      Totals:         0       5       0       0
  2841 ;;Total ram usage:        5 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    5
  2844 ;; This function calls:
  2845 ;;		_LDByteWriteI2C
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _Setup_MPU6050
  2853  0E2A                     _Setup_MPU6050:	
  2854                           
  2855                           ;MPU6050.c: 29: int loop;
  2856                           ;MPU6050.c: 30: unsigned char TheReg;
  2857                           ;MPU6050.c: 33: const unsigned char MPU6050RegTable[]= {
  2858                           ;MPU6050.c: 34: 0x1D,
  2859                           ;MPU6050.c: 35: 0x1E,
  2860                           ;MPU6050.c: 36: 0x1F,
  2861                           ;MPU6050.c: 37: 0x20,
  2862                           ;MPU6050.c: 38: 0x21,
  2863                           ;MPU6050.c: 39: 0x22,
  2864                           ;MPU6050.c: 40: 0x23,
  2865                           ;MPU6050.c: 41: 0x24,
  2866                           ;MPU6050.c: 42: 0x25,
  2867                           ;MPU6050.c: 43: 0x26,
  2868                           ;MPU6050.c: 44: 0x27,
  2869                           ;MPU6050.c: 45: 0x28,
  2870                           ;MPU6050.c: 46: 0x29,
  2871                           ;MPU6050.c: 47: 0x2A,
  2872                           ;MPU6050.c: 48: 0x2B,
  2873                           ;MPU6050.c: 49: 0x2C,
  2874                           ;MPU6050.c: 50: 0x2D,
  2875                           ;MPU6050.c: 51: 0x2E,
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _Setup_MPU6050: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2879  0E2A  3019               	movlw	25
  2880  0E2B  0020               	movlb	0	; select bank0
  2881  0E2C  00A4               	movwf	??_Setup_MPU6050
  2882  0E2D  0824               	movf	??_Setup_MPU6050,w
  2883  0E2E  00F8               	movwf	LDByteWriteI2C@LowAdd
  2884  0E2F  303F               	movlw	63
  2885  0E30  00A5               	movwf	??_Setup_MPU6050+1
  2886  0E31  0825               	movf	??_Setup_MPU6050+1,w
  2887  0E32  00F9               	movwf	LDByteWriteI2C@data
  2888  0E33  3068               	movlw	104
  2889  0E34  3189  2102  318E   	fcall	_LDByteWriteI2C
  2890                           
  2891                           ;MPU6050.c: 115: LDByteWriteI2C(0x68, 0x1B, 0b00011000);
  2892  0E37  301B               	movlw	27
  2893  0E38  0020               	movlb	0	; select bank0
  2894  0E39  00A4               	movwf	??_Setup_MPU6050
  2895  0E3A  0824               	movf	??_Setup_MPU6050,w
  2896  0E3B  00F8               	movwf	LDByteWriteI2C@LowAdd
  2897  0E3C  3018               	movlw	24
  2898  0E3D  00A5               	movwf	??_Setup_MPU6050+1
  2899  0E3E  0825               	movf	??_Setup_MPU6050+1,w
  2900  0E3F  00F9               	movwf	LDByteWriteI2C@data
  2901  0E40  3068               	movlw	104
  2902  0E41  3189  2102  318E   	fcall	_LDByteWriteI2C
  2903                           
  2904                           ;MPU6050.c: 117: LDByteWriteI2C(0x68, 0x1C, 0x18);
  2905  0E44  301C               	movlw	28
  2906  0E45  0020               	movlb	0	; select bank0
  2907  0E46  00A4               	movwf	??_Setup_MPU6050
  2908  0E47  0824               	movf	??_Setup_MPU6050,w
  2909  0E48  00F8               	movwf	LDByteWriteI2C@LowAdd
  2910  0E49  3018               	movlw	24
  2911  0E4A  00A5               	movwf	??_Setup_MPU6050+1
  2912  0E4B  0825               	movf	??_Setup_MPU6050+1,w
  2913  0E4C  00F9               	movwf	LDByteWriteI2C@data
  2914  0E4D  3068               	movlw	104
  2915  0E4E  3189  2102  318E   	fcall	_LDByteWriteI2C
  2916                           
  2917                           ;MPU6050.c: 119: loop=0;
  2918  0E51  0020               	movlb	0	; select bank0
  2919  0E52  01A6               	clrf	Setup_MPU6050@loop
  2920  0E53  01A7               	clrf	Setup_MPU6050@loop+1
  2921  0E54                     l3330:	
  2922                           ;MPU6050.c: 120: do
  2923                           
  2924                           
  2925                           ;MPU6050.c: 121: {
  2926                           ;MPU6050.c: 122: TheReg = MPU6050RegTable[loop++];
  2927  0E54  0020               	movlb	0	; select bank0
  2928  0E55  0827               	movf	Setup_MPU6050@loop+1,w
  2929  0E56  0085               	movwf	5
  2930  0E57  0826               	movf	Setup_MPU6050@loop,w
  2931  0E58  0084               	movwf	4
  2932  0E59  303C               	movlw	low (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2933  0E5A  0784               	addwf	4,f
  2934  0E5B  3085               	movlw	high (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2935  0E5C  3D85               	addwfc	5,f
  2936  0E5D  0800               	movf	0,w	;code access
  2937  0E5E  00A4               	movwf	??_Setup_MPU6050
  2938  0E5F  0824               	movf	??_Setup_MPU6050,w
  2939  0E60  00A8               	movwf	Setup_MPU6050@TheReg
  2940  0E61  3001               	movlw	1
  2941  0E62  07A6               	addwf	Setup_MPU6050@loop,f
  2942  0E63  3000               	movlw	0
  2943  0E64  3DA7               	addwfc	Setup_MPU6050@loop+1,f
  2944                           
  2945                           ;MPU6050.c: 123: if(TheReg==0xff) break;
  2946  0E65  0A28               	incf	Setup_MPU6050@TheReg,w
  2947  0E66  1903               	btfsc	3,2
  2948  0E67  2E72               	goto	l3340
  2949                           
  2950                           ;MPU6050.c: 124: LDByteWriteI2C(0x68,TheReg,0);
  2951  0E68  0828               	movf	Setup_MPU6050@TheReg,w
  2952  0E69  00A4               	movwf	??_Setup_MPU6050
  2953  0E6A  0824               	movf	??_Setup_MPU6050,w
  2954  0E6B  00F8               	movwf	LDByteWriteI2C@LowAdd
  2955  0E6C  01F9               	clrf	LDByteWriteI2C@data
  2956  0E6D  3068               	movlw	104
  2957  0E6E  3189  2102  318E   	fcall	_LDByteWriteI2C
  2958                           
  2959                           ;MPU6050.c: 125: }while(1);
  2960  0E71  2E54               	goto	l3330
  2961  0E72                     l3340:	
  2962                           
  2963                           ;MPU6050.c: 130: LDByteWriteI2C(0x68, 0x6B, 0b00000010);
  2964  0E72  306B               	movlw	107
  2965  0E73  0020               	movlb	0	; select bank0
  2966  0E74  00A4               	movwf	??_Setup_MPU6050
  2967  0E75  0824               	movf	??_Setup_MPU6050,w
  2968  0E76  00F8               	movwf	LDByteWriteI2C@LowAdd
  2969  0E77  3002               	movlw	2
  2970  0E78  00A5               	movwf	??_Setup_MPU6050+1
  2971  0E79  0825               	movf	??_Setup_MPU6050+1,w
  2972  0E7A  00F9               	movwf	LDByteWriteI2C@data
  2973  0E7B  3068               	movlw	104
  2974  0E7C  3189  2102  318E   	fcall	_LDByteWriteI2C
  2975                           
  2976                           ;MPU6050.c: 132: LDByteWriteI2C(0x68, 0x6C, 0x00);
  2977  0E7F  306C               	movlw	108
  2978  0E80  0020               	movlb	0	; select bank0
  2979  0E81  00A4               	movwf	??_Setup_MPU6050
  2980  0E82  0824               	movf	??_Setup_MPU6050,w
  2981  0E83  00F8               	movwf	LDByteWriteI2C@LowAdd
  2982  0E84  01F9               	clrf	LDByteWriteI2C@data
  2983  0E85  3068               	movlw	104
  2984  0E86  3189  2102  318E   	fcall	_LDByteWriteI2C
  2985                           
  2986                           ;MPU6050.c: 135: LDByteWriteI2C(0x68, 0x38, 0x01);
  2987  0E89  3038               	movlw	56
  2988  0E8A  0020               	movlb	0	; select bank0
  2989  0E8B  00A4               	movwf	??_Setup_MPU6050
  2990  0E8C  0824               	movf	??_Setup_MPU6050,w
  2991  0E8D  00F8               	movwf	LDByteWriteI2C@LowAdd
  2992  0E8E  01F9               	clrf	LDByteWriteI2C@data
  2993  0E8F  0AF9               	incf	LDByteWriteI2C@data,f
  2994  0E90  3068               	movlw	104
  2995  0E91  3189  2102         	fcall	_LDByteWriteI2C
  2996  0E93  0008               	return
  2997  0E94                     __end_of_Setup_MPU6050:	
  2998                           
  2999                           	psect	text5
  3000  0967                     __ptext5:	
  3001 ;; *************** function _Setup_HMC5883L *****************
  3002 ;; Defined at:
  3003 ;;		line 9 in file "HMC5883L.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         0       0       0       0
  3018 ;;      Locals:         0       0       0       0
  3019 ;;      Temps:          0       1       0       0
  3020 ;;      Totals:         0       1       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    5
  3024 ;; This function calls:
  3025 ;;		_LDByteWriteI2C
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _Setup_HMC5883L
  3033  0967                     _Setup_HMC5883L:	
  3034                           
  3035                           ;HMC5883L.c: 13: LDByteWriteI2C(0x1e, 1, 0x20);
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _Setup_HMC5883L: [wreg+status,2+status,0+pclath+cstack]
  3039  0967  01F8               	clrf	LDByteWriteI2C@LowAdd
  3040  0968  0AF8               	incf	LDByteWriteI2C@LowAdd,f
  3041  0969  3020               	movlw	32
  3042  096A  0020               	movlb	0	; select bank0
  3043  096B  00A4               	movwf	??_Setup_HMC5883L
  3044  096C  0824               	movf	??_Setup_HMC5883L,w
  3045  096D  00F9               	movwf	LDByteWriteI2C@data
  3046  096E  301E               	movlw	30
  3047  096F  3189  2102  3189   	fcall	_LDByteWriteI2C
  3048                           
  3049                           ;HMC5883L.c: 15: LDByteWriteI2C(0x1e, 2, 0x01);
  3050  0972  3002               	movlw	2
  3051  0973  0020               	movlb	0	; select bank0
  3052  0974  00A4               	movwf	??_Setup_HMC5883L
  3053  0975  0824               	movf	??_Setup_HMC5883L,w
  3054  0976  00F8               	movwf	LDByteWriteI2C@LowAdd
  3055  0977  01F9               	clrf	LDByteWriteI2C@data
  3056  0978  0AF9               	incf	LDByteWriteI2C@data,f
  3057  0979  301E               	movlw	30
  3058  097A  3189  2102         	fcall	_LDByteWriteI2C
  3059  097C  0008               	return
  3060  097D                     __end_of_Setup_HMC5883L:	
  3061                           
  3062                           	psect	text6
  3063  09E9                     __ptext6:	
  3064 ;; *************** function _SaveSetting *****************
  3065 ;; Defined at:
  3066 ;;		line 212 in file "blueGyro.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  idx             1    8[COMMON] unsigned char 
  3071 ;;  pointer         1    7[COMMON] PTR unsigned char 
  3072 ;;		 -> Setting(6), 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;		None               void
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3082 ;;      Params:         0       0       0       0
  3083 ;;      Locals:         2       0       0       0
  3084 ;;      Temps:          1       0       0       0
  3085 ;;      Totals:         3       0       0       0
  3086 ;;Total ram usage:        3 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    2
  3089 ;; This function calls:
  3090 ;;		_eeprom_write
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _SaveSetting
  3098  09E9                     _SaveSetting:	
  3099                           
  3100                           ;blueGyro.c: 214: unsigned char idx;
  3101                           ;blueGyro.c: 215: unsigned char * pointer = (unsigned char *) &Setting;
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _SaveSetting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3105  09E9  3067               	movlw	(low (_Setting| 0))& (0+255)
  3106  09EA  00F6               	movwf	??_SaveSetting
  3107  09EB  0876               	movf	??_SaveSetting,w
  3108  09EC  00F7               	movwf	SaveSetting@pointer
  3109                           
  3110                           ;blueGyro.c: 217: for(idx=0; idx < sizeof(Setting);idx++)
  3111  09ED  01F8               	clrf	SaveSetting@idx
  3112  09EE                     L3:	
  3113  09EE  3006               	movlw	6
  3114  09EF  0278               	subwf	SaveSetting@idx,w
  3115  09F0  1803               	btfsc	3,0
  3116  09F1  0008               	return
  3117                           
  3118                           ;blueGyro.c: 218: eeprom_write(idx, *(pointer++));
  3119  09F2  0877               	movf	SaveSetting@pointer,w
  3120  09F3  0086               	movwf	6
  3121  09F4  0187               	clrf	7
  3122  09F5  0801               	movf	1,w
  3123  09F6  00F6               	movwf	??_SaveSetting
  3124  09F7  0876               	movf	??_SaveSetting,w
  3125  09F8  00F2               	movwf	eeprom_write@value
  3126  09F9  0878               	movf	SaveSetting@idx,w
  3127  09FA  318A  2224  3189   	fcall	_eeprom_write
  3128  09FD  3001               	movlw	1
  3129  09FE  00F6               	movwf	??_SaveSetting
  3130  09FF  0876               	movf	??_SaveSetting,w
  3131  0A00  07F7               	addwf	SaveSetting@pointer,f
  3132  0A01  3001               	movlw	1
  3133  0A02  00F6               	movwf	??_SaveSetting
  3134  0A03  0876               	movf	??_SaveSetting,w
  3135  0A04  07F8               	addwf	SaveSetting@idx,f
  3136  0A05  29EE               	goto	L3
  3137  0A06                     __end_of_SaveSetting:	
  3138                           
  3139                           	psect	text7
  3140  0A24                     __ptext7:	
  3141 ;; *************** function _eeprom_write *****************
  3142 ;; Defined at:
  3143 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/pic/eewrite.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  addr            1    wreg     unsigned char 
  3146 ;;  value           1    2[COMMON] unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  addr            1    5[COMMON] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3158 ;;      Params:         1       0       0       0
  3159 ;;      Locals:         1       0       0       0
  3160 ;;      Temps:          2       0       0       0
  3161 ;;      Totals:         4       0       0       0
  3162 ;;Total ram usage:        4 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_SaveSetting
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _eeprom_write
  3174  0A24                     _eeprom_write:	
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3178                           ;eeprom_write@addr stored from wreg
  3179  0A24  00F5               	movwf	eeprom_write@addr
  3180  0A25                     l498:	
  3181  0A25  0023               	movlb	3	; select bank3
  3182  0A26  1895               	btfsc	21,1	;volsfr
  3183  0A27  2A25               	goto	l498
  3184  0A28  0875               	movf	eeprom_write@addr,w
  3185  0A29  00F3               	movwf	??_eeprom_write
  3186  0A2A  01F4               	clrf	??_eeprom_write+1
  3187  0A2B  0873               	movf	??_eeprom_write,w
  3188  0A2C  0091               	movwf	17	;volatile
  3189  0A2D  0874               	movf	??_eeprom_write+1,w
  3190  0A2E  0092               	movwf	18	;volatile
  3191  0A2F  0872               	movf	eeprom_write@value,w
  3192  0A30  0093               	movwf	19	;volatile
  3193  0A31  303F               	movlw	63
  3194  0A32  00F3               	movwf	??_eeprom_write
  3195  0A33  0873               	movf	??_eeprom_write,w
  3196  0A34  0595               	andwf	21,f	;volsfr
  3197  0A35  0020               	movlb	0	; select bank0
  3198  0A36  1003               	bcf	3,0	;volatile
  3199  0A37  1B8B               	btfsc	11,7	;volatile
  3200  0A38  1403               	bsf	3,0	;volatile
  3201  0A39  138B               	bcf	11,7	;volatile
  3202  0A3A  0023               	movlb	3	; select bank3
  3203  0A3B  1515               	bsf	21,2	;volsfr
  3204  0A3C  3055               	movlw	85
  3205  0A3D  0096               	movwf	22	;volsfr
  3206  0A3E  30AA               	movlw	170
  3207  0A3F  0096               	movwf	22	;volsfr
  3208  0A40  1495               	bsf	21,1	;volsfr
  3209  0A41  1115               	bcf	21,2	;volsfr
  3210  0A42  0020               	movlb	0	; select bank0
  3211  0A43  1C03               	btfss	3,0	;volatile
  3212  0A44  0008               	return
  3213  0A45  178B               	bsf	11,7	;volatile
  3214  0A46  0008               	return
  3215  0A47                     __end_of_eeprom_write:	
  3216                           
  3217                           	psect	text8
  3218  09CD                     __ptext8:	
  3219 ;; *************** function _MPU6050_Test_I2C *****************
  3220 ;; Defined at:
  3221 ;;		line 9 in file "MPU6050.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  Data            1    5[BANK0 ] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2   96[None  ] int 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3235 ;;      Params:         0       0       0       0
  3236 ;;      Locals:         0       1       0       0
  3237 ;;      Temps:          0       2       0       0
  3238 ;;      Totals:         0       3       0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    5
  3242 ;; This function calls:
  3243 ;;		_LDByteReadI2C
  3244 ;;		_cputs
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _MPU6050_Test_I2C
  3252  09CD                     _MPU6050_Test_I2C:	
  3253                           
  3254                           ;MPU6050.c: 11: unsigned char Data = 0x00;
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _MPU6050_Test_I2C: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3258  09CD  0020               	movlb	0	; select bank0
  3259  09CE  01A5               	clrf	MPU6050_Test_I2C@Data
  3260                           
  3261                           ;MPU6050.c: 12: LDByteReadI2C(0x68, 0x75, &Data, 1);
  3262  09CF  3075               	movlw	117
  3263  09D0  00A3               	movwf	??_MPU6050_Test_I2C
  3264  09D1  0823               	movf	??_MPU6050_Test_I2C,w
  3265  09D2  00A0               	movwf	LDByteReadI2C@Address
  3266  09D3  3025               	movlw	(low (MPU6050_Test_I2C@Data| 0))& (0+255)
  3267  09D4  00A4               	movwf	??_MPU6050_Test_I2C+1
  3268  09D5  0824               	movf	??_MPU6050_Test_I2C+1,w
  3269  09D6  00A1               	movwf	LDByteReadI2C@Data
  3270  09D7  01A2               	clrf	LDByteReadI2C@Length
  3271  09D8  0AA2               	incf	LDByteReadI2C@Length,f
  3272  09D9  3068               	movlw	104
  3273  09DA  318B  23D9  3189   	fcall	_LDByteReadI2C
  3274                           
  3275                           ;MPU6050.c: 14: if(Data == 0x68)
  3276  09DD  3068               	movlw	104
  3277  09DE  0020               	movlb	0	; select bank0
  3278  09DF  0625               	xorwf	MPU6050_Test_I2C@Data,w
  3279  09E0  1903               	btfsc	3,2
  3280  09E1  0008               	return
  3281                           
  3282                           ;MPU6050.c: 18: }
  3283                           ;MPU6050.c: 21: cputs("ERROR: I2C\r\n");
  3284                           
  3285                           ;MPU6050.c: 15: {
  3286                           ;MPU6050.c: 17: return(1);
  3287                           ;	Return value of _MPU6050_Test_I2C is never used
  3288  09E2  308A               	movlw	low (STR_1| (0+32768))
  3289  09E3  00F5               	movwf	cputs@s
  3290  09E4  3085               	movlw	high (STR_1| (0+32768))
  3291  09E5  00F6               	movwf	cputs@s+1
  3292  09E6  3189  2115         	fcall	_cputs
  3293  09E8  0008               	return
  3294  09E9                     __end_of_MPU6050_Test_I2C:	
  3295                           ;MPU6050.c: 22: return(0);
  3296                           ;	Return value of _MPU6050_Test_I2C is never used
  3297                           
  3298                           
  3299                           	psect	text9
  3300  09B1                     __ptext9:	
  3301 ;; *************** function _LoadSetting *****************
  3302 ;; Defined at:
  3303 ;;		line 203 in file "blueGyro.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  idx             1    8[COMMON] unsigned char 
  3308 ;;  pointer         1    7[COMMON] PTR unsigned char 
  3309 ;;		 -> Setting(6), 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3319 ;;      Params:         0       0       0       0
  3320 ;;      Locals:         2       0       0       0
  3321 ;;      Temps:          1       0       0       0
  3322 ;;      Totals:         3       0       0       0
  3323 ;;Total ram usage:        3 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    2
  3326 ;; This function calls:
  3327 ;;		_eeprom_read
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _LoadSetting
  3335  09B1                     _LoadSetting:	
  3336                           
  3337                           ;blueGyro.c: 205: unsigned char idx;
  3338                           ;blueGyro.c: 206: unsigned char * pointer = (unsigned char *) &Setting;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _LoadSetting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3342  09B1  3067               	movlw	(low (_Setting| 0))& (0+255)
  3343  09B2  00F6               	movwf	??_LoadSetting
  3344  09B3  0876               	movf	??_LoadSetting,w
  3345  09B4  00F7               	movwf	LoadSetting@pointer
  3346                           
  3347                           ;blueGyro.c: 208: for(idx=0; idx < sizeof(Setting);idx++)
  3348  09B5  01F8               	clrf	LoadSetting@idx
  3349  09B6                     L4:	
  3350  09B6  3006               	movlw	6
  3351  09B7  0278               	subwf	LoadSetting@idx,w
  3352  09B8  1803               	btfsc	3,0
  3353  09B9  0008               	return
  3354                           
  3355                           ;blueGyro.c: 209: *(pointer++) = eeprom_read(idx);
  3356  09BA  0878               	movf	LoadSetting@idx,w
  3357  09BB  3189  217D  3189   	fcall	_eeprom_read
  3358  09BE  00F6               	movwf	??_LoadSetting
  3359  09BF  0877               	movf	LoadSetting@pointer,w
  3360  09C0  0086               	movwf	6
  3361  09C1  0187               	clrf	7
  3362  09C2  0876               	movf	??_LoadSetting,w
  3363  09C3  0081               	movwf	1
  3364  09C4  3001               	movlw	1
  3365  09C5  00F6               	movwf	??_LoadSetting
  3366  09C6  0876               	movf	??_LoadSetting,w
  3367  09C7  07F7               	addwf	LoadSetting@pointer,f
  3368  09C8  3001               	movlw	1
  3369  09C9  00F6               	movwf	??_LoadSetting
  3370  09CA  0876               	movf	??_LoadSetting,w
  3371  09CB  07F8               	addwf	LoadSetting@idx,f
  3372  09CC  29B6               	goto	L4
  3373  09CD                     __end_of_LoadSetting:	
  3374                           
  3375                           	psect	text10
  3376  097D                     __ptext10:	
  3377 ;; *************** function _eeprom_read *****************
  3378 ;; Defined at:
  3379 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/pic/eeread.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  addr            1    wreg     unsigned char 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  addr            1    5[COMMON] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      unsigned char 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3393 ;;      Params:         0       0       0       0
  3394 ;;      Locals:         1       0       0       0
  3395 ;;      Temps:          3       0       0       0
  3396 ;;      Totals:         4       0       0       0
  3397 ;;Total ram usage:        4 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_LoadSetting
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _eeprom_read
  3409  097D                     _eeprom_read:	
  3410                           
  3411                           ;incstack = 0
  3412                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3413                           ;eeprom_read@addr stored from wreg
  3414  097D  00F5               	movwf	eeprom_read@addr
  3415  097E                     l476:	
  3416  097E  0064               	clrwdt	;# 
  3417  097F  0023               	movlb	3	; select bank3
  3418  0980  1895               	btfsc	21,1	;volsfr
  3419  0981  297E               	goto	l476
  3420  0982  0875               	movf	eeprom_read@addr,w
  3421  0983  00F2               	movwf	??_eeprom_read
  3422  0984  01F3               	clrf	??_eeprom_read+1
  3423  0985  0872               	movf	??_eeprom_read,w
  3424  0986  0091               	movwf	17	;volatile
  3425  0987  0873               	movf	??_eeprom_read+1,w
  3426  0988  0092               	movwf	18	;volatile
  3427  0989  303F               	movlw	63
  3428  098A  00F4               	movwf	??_eeprom_read+2
  3429  098B  0874               	movf	??_eeprom_read+2,w
  3430  098C  0595               	andwf	21,f	;volsfr
  3431  098D  1415               	bsf	21,0	;volsfr
  3432  098E  1003               	clrc
  3433  098F  1815               	btfsc	21,0	;volsfr
  3434  0990  1403               	setc
  3435  0991  3000               	movlw	0
  3436  0992  3D09               	addwfc	9,w
  3437  0993  0813               	movf	19,w	;volatile
  3438  0994  0008               	return
  3439  0995                     __end_of_eeprom_read:	
  3440                           
  3441                           	psect	text11
  3442  08CF                     __ptext11:	
  3443 ;; *************** function _Init1msTimer *****************
  3444 ;; Defined at:
  3445 ;;		line 249 in file "blueGyro.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;		None               void
  3452 ;; Registers used:
  3453 ;;		wreg, status,2
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3459 ;;      Params:         0       0       0       0
  3460 ;;      Locals:         0       0       0       0
  3461 ;;      Temps:          0       0       0       0
  3462 ;;      Totals:         0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _Init1msTimer
  3475  08CF                     _Init1msTimer:	
  3476                           
  3477                           ;blueGyro.c: 256: T2CON=0;
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in _Init1msTimer: [wreg+status,2]
  3481  08CF  0020               	movlb	0	; select bank0
  3482  08D0  019C               	clrf	28	;volatile
  3483                           
  3484                           ;blueGyro.c: 257: PR2 = 125;
  3485  08D1  307D               	movlw	125
  3486  08D2  009B               	movwf	27	;volatile
  3487                           
  3488                           ;blueGyro.c: 258: TMR2=0;
  3489  08D3  019A               	clrf	26	;volatile
  3490                           
  3491                           ;blueGyro.c: 259: T2CON= 0b00000111;
  3492  08D4  3007               	movlw	7
  3493  08D5  009C               	movwf	28	;volatile
  3494                           
  3495                           ;blueGyro.c: 261: TMR2IF=0;
  3496  08D6  1091               	bcf	17,1	;volatile
  3497                           
  3498                           ;blueGyro.c: 262: Timerms=0;
  3499  08D7  01FA               	clrf	_Timerms	;volatile
  3500  08D8  01FB               	clrf	_Timerms+1	;volatile
  3501                           
  3502                           ;blueGyro.c: 263: TMR2IE=1;
  3503  08D9  0021               	movlb	1	; select bank1
  3504  08DA  1491               	bsf	17,1	;volatile
  3505                           
  3506                           ;blueGyro.c: 264: PEIE = 1;
  3507  08DB  170B               	bsf	11,6	;volatile
  3508                           
  3509                           ;blueGyro.c: 265: GIE=1;
  3510  08DC  178B               	bsf	11,7	;volatile
  3511  08DD  0008               	return
  3512  08DE                     __end_of_Init1msTimer:	
  3513                           
  3514                           	psect	text12
  3515  0951                     __ptext12:	
  3516 ;; *************** function _GotInt_MPU6050 *****************
  3517 ;; Defined at:
  3518 ;;		line 164 in file "MPU6050.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  uc_temp         1    5[BANK0 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      unsigned char 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3532 ;;      Params:         0       0       0       0
  3533 ;;      Locals:         0       1       0       0
  3534 ;;      Temps:          0       2       0       0
  3535 ;;      Totals:         0       3       0       0
  3536 ;;Total ram usage:        3 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    5
  3539 ;; This function calls:
  3540 ;;		_LDByteReadI2C
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _GotInt_MPU6050
  3548  0951                     _GotInt_MPU6050:	
  3549                           
  3550                           ;MPU6050.c: 166: unsigned char uc_temp;
  3551                           ;MPU6050.c: 170: LDByteReadI2C(0x68,0x3A, &uc_temp, 1);
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _GotInt_MPU6050: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3555  0951  303A               	movlw	58
  3556  0952  0020               	movlb	0	; select bank0
  3557  0953  00A3               	movwf	??_GotInt_MPU6050
  3558  0954  0823               	movf	??_GotInt_MPU6050,w
  3559  0955  00A0               	movwf	LDByteReadI2C@Address
  3560  0956  3025               	movlw	(low (GotInt_MPU6050@uc_temp| 0))& (0+255)
  3561  0957  00A4               	movwf	??_GotInt_MPU6050+1
  3562  0958  0824               	movf	??_GotInt_MPU6050+1,w
  3563  0959  00A1               	movwf	LDByteReadI2C@Data
  3564  095A  01A2               	clrf	LDByteReadI2C@Length
  3565  095B  0AA2               	incf	LDByteReadI2C@Length,f
  3566  095C  3068               	movlw	104
  3567  095D  318B  23D9  3189   	fcall	_LDByteReadI2C
  3568                           
  3569                           ;MPU6050.c: 172: return ((uc_temp & 1) == 1 ? 1 : 0);
  3570  0960  0020               	movlb	0	; select bank0
  3571  0961  1C25               	btfss	GotInt_MPU6050@uc_temp,0
  3572  0962  2965               	goto	u2910
  3573  0963  3001               	movlw	1
  3574  0964  0008               	return
  3575  0965                     u2910:	
  3576  0965  3000               	movlw	0
  3577  0966  0008               	return
  3578  0967                     __end_of_GotInt_MPU6050:	
  3579                           
  3580                           	psect	text13
  3581  0D72                     __ptext13:	
  3582 ;; *************** function _Get_HMC5883L_Values *****************
  3583 ;; Defined at:
  3584 ;;		line 18 in file "HMC5883L.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  cval            6    9[BANK0 ] unsigned char [6]
  3589 ;;  loop            1    0        unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3599 ;;      Params:         0       0       0       0
  3600 ;;      Locals:         0       6       0       0
  3601 ;;      Temps:          0       5       0       0
  3602 ;;      Totals:         0      11       0       0
  3603 ;;Total ram usage:       11 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		_LDByteReadI2C
  3608 ;;		_LDByteWriteI2C
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _Get_HMC5883L_Values
  3616  0D72                     _Get_HMC5883L_Values:	
  3617                           
  3618                           ;HMC5883L.c: 20: char cval[6];
  3619                           ;HMC5883L.c: 21: unsigned char loop;
  3620                           ;HMC5883L.c: 25: LDByteWriteI2C(0x1e, 2, 0x01);
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in _Get_HMC5883L_Values: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3624  0D72  3002               	movlw	2
  3625  0D73  0020               	movlb	0	; select bank0
  3626  0D74  00A4               	movwf	??_Get_HMC5883L_Values
  3627  0D75  0824               	movf	??_Get_HMC5883L_Values,w
  3628  0D76  00F8               	movwf	LDByteWriteI2C@LowAdd
  3629  0D77  01F9               	clrf	LDByteWriteI2C@data
  3630  0D78  0AF9               	incf	LDByteWriteI2C@data,f
  3631  0D79  301E               	movlw	30
  3632  0D7A  3189  2102  318D   	fcall	_LDByteWriteI2C
  3633                           
  3634                           ;HMC5883L.c: 26: LDByteReadI2C(0x1e, 3, cval,6);
  3635  0D7D  3003               	movlw	3
  3636  0D7E  0020               	movlb	0	; select bank0
  3637  0D7F  00A4               	movwf	??_Get_HMC5883L_Values
  3638  0D80  0824               	movf	??_Get_HMC5883L_Values,w
  3639  0D81  00A0               	movwf	LDByteReadI2C@Address
  3640  0D82  3029               	movlw	(low (Get_HMC5883L_Values@cval| 0))& (0+255)
  3641  0D83  00A5               	movwf	??_Get_HMC5883L_Values+1
  3642  0D84  0825               	movf	??_Get_HMC5883L_Values+1,w
  3643  0D85  00A1               	movwf	LDByteReadI2C@Data
  3644  0D86  3006               	movlw	6
  3645  0D87  00A6               	movwf	??_Get_HMC5883L_Values+2
  3646  0D88  0826               	movf	??_Get_HMC5883L_Values+2,w
  3647  0D89  00A2               	movwf	LDByteReadI2C@Length
  3648  0D8A  301E               	movlw	30
  3649  0D8B  318B  23D9  318D   	fcall	_LDByteReadI2C
  3650                           
  3651                           ;HMC5883L.c: 27: CurrentData.MagX = ((cval[0]<<8)|cval[1]);
  3652  0D8E  0020               	movlb	0	; select bank0
  3653  0D8F  082A               	movf	Get_HMC5883L_Values@cval+1,w
  3654  0D90  00A4               	movwf	??_Get_HMC5883L_Values
  3655  0D91  01A5               	clrf	??_Get_HMC5883L_Values+1
  3656  0D92  0829               	movf	Get_HMC5883L_Values@cval,w
  3657  0D93  00A6               	movwf	??_Get_HMC5883L_Values+2
  3658  0D94  01A7               	clrf	??_Get_HMC5883L_Values+3
  3659  0D95  0826               	movf	??_Get_HMC5883L_Values+2,w
  3660  0D96  00A7               	movwf	??_Get_HMC5883L_Values+3
  3661  0D97  01A6               	clrf	??_Get_HMC5883L_Values+2
  3662  0D98  0824               	movf	??_Get_HMC5883L_Values,w
  3663  0D99  0426               	iorwf	??_Get_HMC5883L_Values+2,w
  3664  0D9A  0021               	movlb	1	; select bank1
  3665  0D9B  00E0               	movwf	(_CurrentData^(0+128)+16)
  3666  0D9C  0020               	movlb	0	; select bank0
  3667  0D9D  0825               	movf	??_Get_HMC5883L_Values+1,w
  3668  0D9E  0427               	iorwf	??_Get_HMC5883L_Values+3,w
  3669  0D9F  0021               	movlb	1	; select bank1
  3670  0DA0  00E1               	movwf	((_CurrentData+1)^(0+128)+16)
  3671                           
  3672                           ;HMC5883L.c: 28: CurrentData.MagZ = ((cval[2]<<8)|cval[3]);
  3673  0DA1  0020               	movlb	0	; select bank0
  3674  0DA2  082C               	movf	Get_HMC5883L_Values@cval+3,w
  3675  0DA3  00A4               	movwf	??_Get_HMC5883L_Values
  3676  0DA4  01A5               	clrf	??_Get_HMC5883L_Values+1
  3677  0DA5  082B               	movf	Get_HMC5883L_Values@cval+2,w
  3678  0DA6  00A6               	movwf	??_Get_HMC5883L_Values+2
  3679  0DA7  01A7               	clrf	??_Get_HMC5883L_Values+3
  3680  0DA8  0826               	movf	??_Get_HMC5883L_Values+2,w
  3681  0DA9  00A7               	movwf	??_Get_HMC5883L_Values+3
  3682  0DAA  01A6               	clrf	??_Get_HMC5883L_Values+2
  3683  0DAB  0824               	movf	??_Get_HMC5883L_Values,w
  3684  0DAC  0426               	iorwf	??_Get_HMC5883L_Values+2,w
  3685  0DAD  0021               	movlb	1	; select bank1
  3686  0DAE  00E4               	movwf	(_CurrentData^(0+128)+20)
  3687  0DAF  0020               	movlb	0	; select bank0
  3688  0DB0  0825               	movf	??_Get_HMC5883L_Values+1,w
  3689  0DB1  0427               	iorwf	??_Get_HMC5883L_Values+3,w
  3690  0DB2  0021               	movlb	1	; select bank1
  3691  0DB3  00E5               	movwf	((_CurrentData+1)^(0+128)+20)
  3692                           
  3693                           ;HMC5883L.c: 29: CurrentData.MagY = ((cval[4]<<8)|cval[5]);
  3694  0DB4  0020               	movlb	0	; select bank0
  3695  0DB5  082E               	movf	Get_HMC5883L_Values@cval+5,w
  3696  0DB6  00A4               	movwf	??_Get_HMC5883L_Values
  3697  0DB7  01A5               	clrf	??_Get_HMC5883L_Values+1
  3698  0DB8  082D               	movf	Get_HMC5883L_Values@cval+4,w
  3699  0DB9  00A6               	movwf	??_Get_HMC5883L_Values+2
  3700  0DBA  01A7               	clrf	??_Get_HMC5883L_Values+3
  3701  0DBB  0826               	movf	??_Get_HMC5883L_Values+2,w
  3702  0DBC  00A7               	movwf	??_Get_HMC5883L_Values+3
  3703  0DBD  01A6               	clrf	??_Get_HMC5883L_Values+2
  3704  0DBE  0824               	movf	??_Get_HMC5883L_Values,w
  3705  0DBF  0426               	iorwf	??_Get_HMC5883L_Values+2,w
  3706  0DC0  0021               	movlb	1	; select bank1
  3707  0DC1  00E2               	movwf	(_CurrentData^(0+128)+18)
  3708  0DC2  0020               	movlb	0	; select bank0
  3709  0DC3  0825               	movf	??_Get_HMC5883L_Values+1,w
  3710  0DC4  0427               	iorwf	??_Get_HMC5883L_Values+3,w
  3711  0DC5  0021               	movlb	1	; select bank1
  3712  0DC6  00E3               	movwf	((_CurrentData+1)^(0+128)+18)
  3713  0DC7  0008               	return
  3714  0DC8                     __end_of_Get_HMC5883L_Values:	
  3715                           
  3716                           	psect	text14
  3717  0902                     __ptext14:	
  3718 ;; *************** function _LDByteWriteI2C *****************
  3719 ;; Defined at:
  3720 ;;		line 107 in file "i2cMaster.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  3723 ;;  LowAdd          1    8[COMMON] unsigned char 
  3724 ;;  data            1    9[COMMON] unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  i2cSlaveAddr    1    3[BANK0 ] unsigned char 
  3727 ;;  ErrorCode       2    1[BANK0 ] unsigned int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;		None               void
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3737 ;;      Params:         2       0       0       0
  3738 ;;      Locals:         0       3       0       0
  3739 ;;      Temps:          0       1       0       0
  3740 ;;      Totals:         2       4       0       0
  3741 ;;Total ram usage:        6 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    4
  3744 ;; This function calls:
  3745 ;;		_LDByteSetAddress
  3746 ;;		_i2c_Stop
  3747 ;;		_i2c_Write
  3748 ;; This function is called by:
  3749 ;;		_Setup_MPU6050
  3750 ;;		_Setup_HMC5883L
  3751 ;;		_Get_HMC5883L_Values
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _LDByteWriteI2C
  3757  0902                     _LDByteWriteI2C:	
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _LDByteWriteI2C: [wreg+status,2+status,0+pclath+cstack]
  3761                           ;LDByteWriteI2C@i2cSlaveAddress stored from wreg
  3762  0902  0020               	movlb	0	; select bank0
  3763  0903  00A3               	movwf	LDByteWriteI2C@i2cSlaveAddress
  3764                           
  3765                           ;i2cMaster.c: 109: unsigned int ErrorCode=0;
  3766  0904  01A1               	clrf	LDByteWriteI2C@ErrorCode
  3767  0905  01A2               	clrf	LDByteWriteI2C@ErrorCode+1
  3768                           
  3769                           ;i2cMaster.c: 110: LDByteSetAddress(i2cSlaveAddress,LowAdd);
  3770  0906  0878               	movf	LDByteWriteI2C@LowAdd,w
  3771  0907  00A0               	movwf	??_LDByteWriteI2C
  3772  0908  0820               	movf	??_LDByteWriteI2C,w
  3773  0909  00F6               	movwf	LDByteSetAddress@LowAdd
  3774  090A  0823               	movf	LDByteWriteI2C@i2cSlaveAddress,w
  3775  090B  3188  20B3  3189   	fcall	_LDByteSetAddress
  3776                           
  3777                           ;i2cMaster.c: 111: i2c_Write(data);
  3778  090E  0879               	movf	LDByteWriteI2C@data,w
  3779  090F  3188  2091  3189   	fcall	_i2c_Write
  3780                           
  3781                           ;i2cMaster.c: 112: i2c_Stop();
  3782  0912  3188  2086         	fcall	_i2c_Stop
  3783  0914  0008               	return
  3784  0915                     __end_of_LDByteWriteI2C:	
  3785                           
  3786                           	psect	text15
  3787  05E1                     __ptext15:	
  3788 ;; *************** function _Get_Accel_Values *****************
  3789 ;; Defined at:
  3790 ;;		line 145 in file "MPU6050.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  cval           14    8[BANK0 ] unsigned char [14]
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3804 ;;      Params:         0       0       0       0
  3805 ;;      Locals:         0      14       0       0
  3806 ;;      Temps:          0       5       0       0
  3807 ;;      Totals:         0      19       0       0
  3808 ;;Total ram usage:       19 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    5
  3811 ;; This function calls:
  3812 ;;		_LDByteReadI2C
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _Get_Accel_Values
  3820  05E1                     _Get_Accel_Values:	
  3821                           
  3822                           ;MPU6050.c: 147: char cval[14];
  3823                           ;MPU6050.c: 148: LDByteReadI2C(0x68, 0x3B, cval, 14);
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _Get_Accel_Values: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3827  05E1  303B               	movlw	59
  3828  05E2  0020               	movlb	0	; select bank0
  3829  05E3  00A3               	movwf	??_Get_Accel_Values
  3830  05E4  0823               	movf	??_Get_Accel_Values,w
  3831  05E5  00A0               	movwf	LDByteReadI2C@Address
  3832  05E6  3028               	movlw	(low (Get_Accel_Values@cval| 0))& (0+255)
  3833  05E7  00A4               	movwf	??_Get_Accel_Values+1
  3834  05E8  0824               	movf	??_Get_Accel_Values+1,w
  3835  05E9  00A1               	movwf	LDByteReadI2C@Data
  3836  05EA  300E               	movlw	14
  3837  05EB  00A5               	movwf	??_Get_Accel_Values+2
  3838  05EC  0825               	movf	??_Get_Accel_Values+2,w
  3839  05ED  00A2               	movwf	LDByteReadI2C@Length
  3840  05EE  3068               	movlw	104
  3841  05EF  318B  23D9  3185   	fcall	_LDByteReadI2C
  3842                           
  3843                           ;MPU6050.c: 149: (GIE = 0);
  3844  05F2  138B               	bcf	11,7	;volatile
  3845                           
  3846                           ;MPU6050.c: 150: CurrentData.Timer = Timerms;
  3847  05F3  087B               	movf	_Timerms+1,w	;volatile
  3848  05F4  0021               	movlb	1	; select bank1
  3849  05F5  00D1               	movwf	(_CurrentData+1)^(0+128)
  3850  05F6  087A               	movf	_Timerms,w	;volatile
  3851  05F7  00D0               	movwf	_CurrentData^(0+128)
  3852                           
  3853                           ;MPU6050.c: 151: (GIE = 1);
  3854  05F8  178B               	bsf	11,7	;volatile
  3855                           
  3856                           ;MPU6050.c: 152: CurrentData.Gx = ((cval[0]<<8)|cval[1]);
  3857  05F9  0020               	movlb	0	; select bank0
  3858  05FA  0829               	movf	Get_Accel_Values@cval+1,w
  3859  05FB  00A3               	movwf	??_Get_Accel_Values
  3860  05FC  01A4               	clrf	??_Get_Accel_Values+1
  3861  05FD  0828               	movf	Get_Accel_Values@cval,w
  3862  05FE  00A5               	movwf	??_Get_Accel_Values+2
  3863  05FF  01A6               	clrf	??_Get_Accel_Values+3
  3864  0600  0825               	movf	??_Get_Accel_Values+2,w
  3865  0601  00A6               	movwf	??_Get_Accel_Values+3
  3866  0602  01A5               	clrf	??_Get_Accel_Values+2
  3867  0603  0823               	movf	??_Get_Accel_Values,w
  3868  0604  0425               	iorwf	??_Get_Accel_Values+2,w
  3869  0605  0021               	movlb	1	; select bank1
  3870  0606  00D2               	movwf	(_CurrentData^(0+128)+2)
  3871  0607  0020               	movlb	0	; select bank0
  3872  0608  0824               	movf	??_Get_Accel_Values+1,w
  3873  0609  0426               	iorwf	??_Get_Accel_Values+3,w
  3874  060A  0021               	movlb	1	; select bank1
  3875  060B  00D3               	movwf	((_CurrentData+1)^(0+128)+2)
  3876                           
  3877                           ;MPU6050.c: 153: CurrentData.Gy = ((cval[2]<<8)|cval[3]);
  3878  060C  0020               	movlb	0	; select bank0
  3879  060D  082B               	movf	Get_Accel_Values@cval+3,w
  3880  060E  00A3               	movwf	??_Get_Accel_Values
  3881  060F  01A4               	clrf	??_Get_Accel_Values+1
  3882  0610  082A               	movf	Get_Accel_Values@cval+2,w
  3883  0611  00A5               	movwf	??_Get_Accel_Values+2
  3884  0612  01A6               	clrf	??_Get_Accel_Values+3
  3885  0613  0825               	movf	??_Get_Accel_Values+2,w
  3886  0614  00A6               	movwf	??_Get_Accel_Values+3
  3887  0615  01A5               	clrf	??_Get_Accel_Values+2
  3888  0616  0823               	movf	??_Get_Accel_Values,w
  3889  0617  0425               	iorwf	??_Get_Accel_Values+2,w
  3890  0618  0021               	movlb	1	; select bank1
  3891  0619  00D4               	movwf	(_CurrentData^(0+128)+4)
  3892  061A  0020               	movlb	0	; select bank0
  3893  061B  0824               	movf	??_Get_Accel_Values+1,w
  3894  061C  0426               	iorwf	??_Get_Accel_Values+3,w
  3895  061D  0021               	movlb	1	; select bank1
  3896  061E  00D5               	movwf	((_CurrentData+1)^(0+128)+4)
  3897                           
  3898                           ;MPU6050.c: 154: CurrentData.Gz = ((cval[4]<<8)|cval[5]);
  3899  061F  0020               	movlb	0	; select bank0
  3900  0620  082D               	movf	Get_Accel_Values@cval+5,w
  3901  0621  00A3               	movwf	??_Get_Accel_Values
  3902  0622  01A4               	clrf	??_Get_Accel_Values+1
  3903  0623  082C               	movf	Get_Accel_Values@cval+4,w
  3904  0624  00A5               	movwf	??_Get_Accel_Values+2
  3905  0625  01A6               	clrf	??_Get_Accel_Values+3
  3906  0626  0825               	movf	??_Get_Accel_Values+2,w
  3907  0627  00A6               	movwf	??_Get_Accel_Values+3
  3908  0628  01A5               	clrf	??_Get_Accel_Values+2
  3909  0629  0823               	movf	??_Get_Accel_Values,w
  3910  062A  0425               	iorwf	??_Get_Accel_Values+2,w
  3911  062B  0021               	movlb	1	; select bank1
  3912  062C  00D6               	movwf	(_CurrentData^(0+128)+6)
  3913  062D  0020               	movlb	0	; select bank0
  3914  062E  0824               	movf	??_Get_Accel_Values+1,w
  3915  062F  0426               	iorwf	??_Get_Accel_Values+3,w
  3916  0630  0021               	movlb	1	; select bank1
  3917  0631  00D7               	movwf	((_CurrentData+1)^(0+128)+6)
  3918                           
  3919                           ;MPU6050.c: 155: CurrentData.temp = ((cval[6]<<8)|cval[7]);
  3920  0632  0020               	movlb	0	; select bank0
  3921  0633  082F               	movf	Get_Accel_Values@cval+7,w
  3922  0634  00A3               	movwf	??_Get_Accel_Values
  3923  0635  01A4               	clrf	??_Get_Accel_Values+1
  3924  0636  082E               	movf	Get_Accel_Values@cval+6,w
  3925  0637  00A5               	movwf	??_Get_Accel_Values+2
  3926  0638  01A6               	clrf	??_Get_Accel_Values+3
  3927  0639  0825               	movf	??_Get_Accel_Values+2,w
  3928  063A  00A6               	movwf	??_Get_Accel_Values+3
  3929  063B  01A5               	clrf	??_Get_Accel_Values+2
  3930  063C  0823               	movf	??_Get_Accel_Values,w
  3931  063D  0425               	iorwf	??_Get_Accel_Values+2,w
  3932  063E  0021               	movlb	1	; select bank1
  3933  063F  00D8               	movwf	(_CurrentData^(0+128)+8)
  3934  0640  0020               	movlb	0	; select bank0
  3935  0641  0824               	movf	??_Get_Accel_Values+1,w
  3936  0642  0426               	iorwf	??_Get_Accel_Values+3,w
  3937  0643  0021               	movlb	1	; select bank1
  3938  0644  00D9               	movwf	((_CurrentData+1)^(0+128)+8)
  3939                           
  3940                           ;MPU6050.c: 156: CurrentData.Gyrox = ((cval[8]<<8) | cval[9]);
  3941  0645  0020               	movlb	0	; select bank0
  3942  0646  0831               	movf	Get_Accel_Values@cval+9,w
  3943  0647  00A3               	movwf	??_Get_Accel_Values
  3944  0648  01A4               	clrf	??_Get_Accel_Values+1
  3945  0649  0830               	movf	Get_Accel_Values@cval+8,w
  3946  064A  00A5               	movwf	??_Get_Accel_Values+2
  3947  064B  01A6               	clrf	??_Get_Accel_Values+3
  3948  064C  0825               	movf	??_Get_Accel_Values+2,w
  3949  064D  00A6               	movwf	??_Get_Accel_Values+3
  3950  064E  01A5               	clrf	??_Get_Accel_Values+2
  3951  064F  0823               	movf	??_Get_Accel_Values,w
  3952  0650  0425               	iorwf	??_Get_Accel_Values+2,w
  3953  0651  0021               	movlb	1	; select bank1
  3954  0652  00DA               	movwf	(_CurrentData^(0+128)+10)
  3955  0653  0020               	movlb	0	; select bank0
  3956  0654  0824               	movf	??_Get_Accel_Values+1,w
  3957  0655  0426               	iorwf	??_Get_Accel_Values+3,w
  3958  0656  0021               	movlb	1	; select bank1
  3959  0657  00DB               	movwf	((_CurrentData+1)^(0+128)+10)
  3960                           
  3961                           ;MPU6050.c: 157: CurrentData.Gyroy = ((cval[10]<<8) | cval[11]);
  3962  0658  0020               	movlb	0	; select bank0
  3963  0659  0833               	movf	Get_Accel_Values@cval+11,w
  3964  065A  00A3               	movwf	??_Get_Accel_Values
  3965  065B  01A4               	clrf	??_Get_Accel_Values+1
  3966  065C  0832               	movf	Get_Accel_Values@cval+10,w
  3967  065D  00A5               	movwf	??_Get_Accel_Values+2
  3968  065E  01A6               	clrf	??_Get_Accel_Values+3
  3969  065F  0825               	movf	??_Get_Accel_Values+2,w
  3970  0660  00A6               	movwf	??_Get_Accel_Values+3
  3971  0661  01A5               	clrf	??_Get_Accel_Values+2
  3972  0662  0823               	movf	??_Get_Accel_Values,w
  3973  0663  0425               	iorwf	??_Get_Accel_Values+2,w
  3974  0664  0021               	movlb	1	; select bank1
  3975  0665  00DC               	movwf	(_CurrentData^(0+128)+12)
  3976  0666  0020               	movlb	0	; select bank0
  3977  0667  0824               	movf	??_Get_Accel_Values+1,w
  3978  0668  0426               	iorwf	??_Get_Accel_Values+3,w
  3979  0669  0021               	movlb	1	; select bank1
  3980  066A  00DD               	movwf	((_CurrentData+1)^(0+128)+12)
  3981                           
  3982                           ;MPU6050.c: 158: CurrentData.Gyroz = ((cval[12]<<8) | cval[13]);
  3983  066B  0020               	movlb	0	; select bank0
  3984  066C  0835               	movf	Get_Accel_Values@cval+13,w
  3985  066D  00A3               	movwf	??_Get_Accel_Values
  3986  066E  01A4               	clrf	??_Get_Accel_Values+1
  3987  066F  0834               	movf	Get_Accel_Values@cval+12,w
  3988  0670  00A5               	movwf	??_Get_Accel_Values+2
  3989  0671  01A6               	clrf	??_Get_Accel_Values+3
  3990  0672  0825               	movf	??_Get_Accel_Values+2,w
  3991  0673  00A6               	movwf	??_Get_Accel_Values+3
  3992  0674  01A5               	clrf	??_Get_Accel_Values+2
  3993  0675  0823               	movf	??_Get_Accel_Values,w
  3994  0676  0425               	iorwf	??_Get_Accel_Values+2,w
  3995  0677  0021               	movlb	1	; select bank1
  3996  0678  00DE               	movwf	(_CurrentData^(0+128)+14)
  3997  0679  0020               	movlb	0	; select bank0
  3998  067A  0824               	movf	??_Get_Accel_Values+1,w
  3999  067B  0426               	iorwf	??_Get_Accel_Values+3,w
  4000  067C  0021               	movlb	1	; select bank1
  4001  067D  00DF               	movwf	((_CurrentData+1)^(0+128)+14)
  4002  067E  0008               	return
  4003  067F                     __end_of_Get_Accel_Values:	
  4004                           
  4005                           	psect	text16
  4006  0BD9                     __ptext16:	
  4007 ;; *************** function _LDByteReadI2C *****************
  4008 ;; Defined at:
  4009 ;;		line 123 in file "i2cMaster.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  4012 ;;  Address         1    0[BANK0 ] unsigned char 
  4013 ;;  Data            1    1[BANK0 ] PTR unsigned char 
  4014 ;;		 -> Get_HMC5883L_Values@cval(6), GotInt_MPU6050@uc_temp(1), Get_Accel_Values@cval(14), MPU6050_Test_I2C@Data(1), 
  4015 ;;  Length          1    2[BANK0 ] unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  i2cSlaveAddr    1    9[COMMON] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;		None               void
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       3       0       0
  4028 ;;      Locals:         1       0       0       0
  4029 ;;      Temps:          1       0       0       0
  4030 ;;      Totals:         2       3       0       0
  4031 ;;Total ram usage:        5 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    4
  4034 ;; This function calls:
  4035 ;;		_LDByteSetAddress
  4036 ;;		_i2c_Address
  4037 ;;		_i2c_Read
  4038 ;;		_i2c_Restart
  4039 ;;		_i2c_Stop
  4040 ;; This function is called by:
  4041 ;;		_MPU6050_Test_I2C
  4042 ;;		_Get_Accel_Values
  4043 ;;		_GotInt_MPU6050
  4044 ;;		_Get_HMC5883L_Values
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           
  4049                           ;psect for function _LDByteReadI2C
  4050  0BD9                     _LDByteReadI2C:	
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _LDByteReadI2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4054                           ;LDByteReadI2C@i2cSlaveAddress stored from wreg
  4055  0BD9  00F9               	movwf	LDByteReadI2C@i2cSlaveAddress
  4056                           
  4057                           ;i2cMaster.c: 125: LDByteSetAddress(i2cSlaveAddress,Address);
  4058  0BDA  0020               	movlb	0	; select bank0
  4059  0BDB  0820               	movf	LDByteReadI2C@Address,w
  4060  0BDC  00F8               	movwf	??_LDByteReadI2C
  4061  0BDD  0878               	movf	??_LDByteReadI2C,w
  4062  0BDE  00F6               	movwf	LDByteSetAddress@LowAdd
  4063  0BDF  0879               	movf	LDByteReadI2C@i2cSlaveAddress,w
  4064  0BE0  3188  20B3  318B   	fcall	_LDByteSetAddress
  4065                           
  4066                           ;i2cMaster.c: 126: i2c_Restart();
  4067  0BE3  3188  2081  318B   	fcall	_i2c_Restart
  4068                           
  4069                           ;i2cMaster.c: 127: i2c_Address(i2cSlaveAddress, 0x01);
  4070  0BE6  01F2               	clrf	i2c_Address@mode
  4071  0BE7  0AF2               	incf	i2c_Address@mode,f
  4072  0BE8  0879               	movf	LDByteReadI2C@i2cSlaveAddress,w
  4073  0BE9  3188  20C0  318B   	fcall	_i2c_Address
  4074  0BEC                     l3154:	
  4075                           ;i2cMaster.c: 129: while(Length-- > 1)
  4076                           
  4077  0BEC  0020               	movlb	0	; select bank0
  4078  0BED  0822               	movf	LDByteReadI2C@Length,w
  4079  0BEE  03A2               	decf	LDByteReadI2C@Length,f
  4080  0BEF  00F8               	movwf	??_LDByteReadI2C
  4081  0BF0  3002               	movlw	2
  4082  0BF1  0278               	subwf	??_LDByteReadI2C,w
  4083  0BF2  1C03               	btfss	3,0
  4084  0BF3  2C04               	goto	l3156
  4085                           
  4086                           ;i2cMaster.c: 130: *(Data++) = i2c_Read(1);
  4087  0BF4  3001               	movlw	1
  4088  0BF5  3189  2195  318B   	fcall	_i2c_Read
  4089  0BF8  00F8               	movwf	??_LDByteReadI2C
  4090  0BF9  0020               	movlb	0	; select bank0
  4091  0BFA  0821               	movf	LDByteReadI2C@Data,w
  4092  0BFB  0086               	movwf	6
  4093  0BFC  0187               	clrf	7
  4094  0BFD  0878               	movf	??_LDByteReadI2C,w
  4095  0BFE  0081               	movwf	1
  4096  0BFF  3001               	movlw	1
  4097  0C00  00F8               	movwf	??_LDByteReadI2C
  4098  0C01  0878               	movf	??_LDByteReadI2C,w
  4099  0C02  07A1               	addwf	LDByteReadI2C@Data,f
  4100  0C03  2BEC               	goto	l3154
  4101  0C04                     l3156:	
  4102                           
  4103                           ;i2cMaster.c: 131: *(Data++) = i2c_Read(0);
  4104  0C04  3000               	movlw	0
  4105  0C05  3189  2195  318B   	fcall	_i2c_Read
  4106  0C08  00F8               	movwf	??_LDByteReadI2C
  4107  0C09  0020               	movlb	0	; select bank0
  4108  0C0A  0821               	movf	LDByteReadI2C@Data,w
  4109  0C0B  0086               	movwf	6
  4110  0C0C  0187               	clrf	7
  4111  0C0D  0878               	movf	??_LDByteReadI2C,w
  4112  0C0E  0081               	movwf	1
  4113  0C0F  3001               	movlw	1
  4114  0C10  00F8               	movwf	??_LDByteReadI2C
  4115  0C11  0878               	movf	??_LDByteReadI2C,w
  4116  0C12  07A1               	addwf	LDByteReadI2C@Data,f
  4117                           
  4118                           ;i2cMaster.c: 132: i2c_Stop();
  4119  0C13  3188  2086         	fcall	_i2c_Stop
  4120  0C15  0008               	return
  4121  0C16                     __end_of_LDByteReadI2C:	
  4122                           
  4123                           	psect	text17
  4124  08B3                     __ptext17:	
  4125 ;; *************** function _LDByteSetAddress *****************
  4126 ;; Defined at:
  4127 ;;		line 100 in file "i2cMaster.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  4130 ;;  LowAdd          1    6[COMMON] unsigned char 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  i2cSlaveAddr    1    7[COMMON] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;		None               void
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4142 ;;      Params:         1       0       0       0
  4143 ;;      Locals:         1       0       0       0
  4144 ;;      Temps:          0       0       0       0
  4145 ;;      Totals:         2       0       0       0
  4146 ;;Total ram usage:        2 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    3
  4149 ;; This function calls:
  4150 ;;		_i2c_Address
  4151 ;;		_i2c_Start
  4152 ;;		_i2c_Write
  4153 ;; This function is called by:
  4154 ;;		_LDByteWriteI2C
  4155 ;;		_LDByteReadI2C
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _LDByteSetAddress
  4161  08B3                     _LDByteSetAddress:	
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in _LDByteSetAddress: [wreg+status,2+status,0+pclath+cstack]
  4165                           ;LDByteSetAddress@i2cSlaveAddress stored from wreg
  4166  08B3  00F7               	movwf	LDByteSetAddress@i2cSlaveAddress
  4167                           
  4168                           ;i2cMaster.c: 102: i2c_Start();
  4169  08B4  3188  207C  3188   	fcall	_i2c_Start
  4170                           
  4171                           ;i2cMaster.c: 103: i2c_Address(i2cSlaveAddress,0x00);
  4172  08B7  01F2               	clrf	i2c_Address@mode
  4173  08B8  0877               	movf	LDByteSetAddress@i2cSlaveAddress,w
  4174  08B9  3188  20C0  3188   	fcall	_i2c_Address
  4175                           
  4176                           ;i2cMaster.c: 104: i2c_Write(LowAdd);
  4177  08BC  0876               	movf	LDByteSetAddress@LowAdd,w
  4178  08BD  3188  2091         	fcall	_i2c_Write
  4179  08BF  0008               	return
  4180  08C0                     __end_of_LDByteSetAddress:	
  4181                           
  4182                           	psect	text18
  4183  0C16                     __ptext18:	
  4184 ;; *************** function _FindDeltaG *****************
  4185 ;; Defined at:
  4186 ;;		line 456 in file "blueGyro.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      unsigned char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, pclath
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4200 ;;      Params:         0       0       0       0
  4201 ;;      Locals:         0       0       0       0
  4202 ;;      Temps:          4       0       0       0
  4203 ;;      Totals:         4       0       0       0
  4204 ;;Total ram usage:        4 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_main
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _FindDeltaG
  4216  0C16                     _FindDeltaG:	
  4217                           
  4218                           ;blueGyro.c: 460: const long HG = 3072L * 3072L;
  4219                           ;blueGyro.c: 461: const long LG = 1638L * 1638L;
  4220                           ;blueGyro.c: 463: if(CurrentData.SumSquare > HG)
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _FindDeltaG: [wreg-fsr0h+pclath]
  4224  0C16  3064               	movlw	low (FindDeltaG@HG| (0+32768))
  4225  0C17  0084               	movwf	4
  4226  0C18  3085               	movlw	high (FindDeltaG@HG| (0+32768))
  4227  0C19  0085               	movwf	5
  4228  0C1A  3F00               	moviw [0]fsr0
  4229  0C1B  00F2               	movwf	??_FindDeltaG
  4230  0C1C  3F01               	moviw [1]fsr0
  4231  0C1D  00F3               	movwf	??_FindDeltaG+1
  4232  0C1E  3F02               	moviw [2]fsr0
  4233  0C1F  00F4               	movwf	??_FindDeltaG+2
  4234  0C20  3F03               	moviw [3]fsr0
  4235  0C21  00F5               	movwf	??_FindDeltaG+3
  4236  0C22  0021               	movlb	1	; select bank1
  4237  0C23  0869               	movf	((_CurrentData+3)^(0+128)+22),w
  4238  0C24  0275               	subwf	??_FindDeltaG+3,w
  4239  0C25  1D03               	skipz
  4240  0C26  2C31               	goto	u2975
  4241  0C27  0868               	movf	((_CurrentData+2)^(0+128)+22),w
  4242  0C28  0274               	subwf	??_FindDeltaG+2,w
  4243  0C29  1D03               	skipz
  4244  0C2A  2C31               	goto	u2975
  4245  0C2B  0867               	movf	((_CurrentData+1)^(0+128)+22),w
  4246  0C2C  0273               	subwf	??_FindDeltaG+1,w
  4247  0C2D  1D03               	skipz
  4248  0C2E  2C31               	goto	u2975
  4249  0C2F  0866               	movf	(_CurrentData^(0+128)+22),w
  4250  0C30  0272               	subwf	??_FindDeltaG,w
  4251  0C31                     u2975:	
  4252  0C31  1803               	skipnc
  4253  0C32  2C35               	goto	l3424
  4254                           
  4255                           ;blueGyro.c: 464: return 1;
  4256  0C33  3001               	movlw	1
  4257  0C34  0008               	return
  4258  0C35                     l3424:	
  4259                           
  4260                           ;blueGyro.c: 465: if(CurrentData.SumSquare < LG)
  4261  0C35  3068               	movlw	low (FindDeltaG@LG| (0+32768))
  4262  0C36  0084               	movwf	4
  4263  0C37  3085               	movlw	high (FindDeltaG@LG| (0+32768))
  4264  0C38  0085               	movwf	5
  4265  0C39  3F00               	moviw [0]fsr0
  4266  0C3A  00F2               	movwf	??_FindDeltaG
  4267  0C3B  3F01               	moviw [1]fsr0
  4268  0C3C  00F3               	movwf	??_FindDeltaG+1
  4269  0C3D  3F02               	moviw [2]fsr0
  4270  0C3E  00F4               	movwf	??_FindDeltaG+2
  4271  0C3F  3F03               	moviw [3]fsr0
  4272  0C40  00F5               	movwf	??_FindDeltaG+3
  4273  0C41  0875               	movf	??_FindDeltaG+3,w
  4274  0C42  0269               	subwf	((_CurrentData+3)^(0+128)+22),w
  4275  0C43  1D03               	skipz
  4276  0C44  2C4F               	goto	u2985
  4277  0C45  0874               	movf	??_FindDeltaG+2,w
  4278  0C46  0268               	subwf	((_CurrentData+2)^(0+128)+22),w
  4279  0C47  1D03               	skipz
  4280  0C48  2C4F               	goto	u2985
  4281  0C49  0873               	movf	??_FindDeltaG+1,w
  4282  0C4A  0267               	subwf	((_CurrentData+1)^(0+128)+22),w
  4283  0C4B  1D03               	skipz
  4284  0C4C  2C4F               	goto	u2985
  4285  0C4D  0872               	movf	??_FindDeltaG,w
  4286  0C4E  0266               	subwf	(_CurrentData^(0+128)+22),w
  4287  0C4F                     u2985:	
  4288  0C4F  1803               	skipnc
  4289  0C50  2C53               	goto	l3430
  4290                           
  4291                           ;blueGyro.c: 466: return 1;
  4292  0C51  3001               	movlw	1
  4293  0C52  0008               	return
  4294  0C53                     l3430:	
  4295                           
  4296                           ;blueGyro.c: 467: return 0;
  4297  0C53  3000               	movlw	0
  4298  0C54  0008               	return
  4299  0C55                     __end_of_FindDeltaG:	
  4300                           
  4301                           	psect	text19
  4302  0325                     __ptext19:	
  4303 ;; *************** function _DisplayInfo *****************
  4304 ;; Defined at:
  4305 ;;		line 473 in file "blueGyro.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  cz              2   50[BANK0 ] PTR const unsigned char 
  4310 ;;		 -> STR_3(4), 
  4311 ;;  cy              2   48[BANK0 ] PTR const unsigned char 
  4312 ;;		 -> STR_2(4), 
  4313 ;;  Gt              2   46[BANK0 ] unsigned short 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;		None               void
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4323 ;;      Params:         0       0       0       0
  4324 ;;      Locals:         0       6       0       0
  4325 ;;      Temps:          0       0       0       0
  4326 ;;      Totals:         0       6       0       0
  4327 ;;Total ram usage:        6 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    6
  4330 ;; This function calls:
  4331 ;;		_CalculateSumOfSquares
  4332 ;;		_GetGyroWithOffset
  4333 ;;		_cputs
  4334 ;;		_isqrt
  4335 ;;		_printGForce
  4336 ;;		_printGyro
  4337 ;;		_printUShort
  4338 ;;		_printValue
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _DisplayInfo
  4346  0325                     _DisplayInfo:	
  4347                           
  4348                           ;blueGyro.c: 475: unsigned short Gt;
  4349                           ;blueGyro.c: 477: const char * cy=" y=";
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _DisplayInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4353  0325  30D9               	movlw	low (STR_2| (0+32768))
  4354  0326  0020               	movlb	0	; select bank0
  4355  0327  00D0               	movwf	DisplayInfo@cy
  4356  0328  3085               	movlw	high (STR_2| (0+32768))
  4357  0329  00D1               	movwf	DisplayInfo@cy+1
  4358                           
  4359                           ;blueGyro.c: 478: const char * cz=" z=";
  4360  032A  30DD               	movlw	low (STR_3| (0+32768))
  4361  032B  00D2               	movwf	DisplayInfo@cz
  4362  032C  3085               	movlw	high (STR_3| (0+32768))
  4363  032D  00D3               	movwf	DisplayInfo@cz+1
  4364                           
  4365                           ;blueGyro.c: 481: CalculateSumOfSquares();
  4366  032E  3184  2453  3183   	fcall	_CalculateSumOfSquares
  4367                           
  4368                           ;blueGyro.c: 483: cputs(" T(ms)=");
  4369  0331  30A8               	movlw	low (STR_4| (0+32768))
  4370  0332  00F5               	movwf	cputs@s
  4371  0333  3085               	movlw	high (STR_4| (0+32768))
  4372  0334  00F6               	movwf	cputs@s+1
  4373  0335  3189  2115  3183   	fcall	_cputs
  4374                           
  4375                           ;blueGyro.c: 484: printUShort(CurrentData.Timer);
  4376  0338  0021               	movlb	1	; select bank1
  4377  0339  0851               	movf	(_CurrentData+1)^(0+128),w
  4378  033A  0020               	movlb	0	; select bank0
  4379  033B  00AA               	movwf	printUShort@value+1
  4380  033C  0021               	movlb	1	; select bank1
  4381  033D  0850               	movf	_CurrentData^(0+128),w
  4382  033E  0020               	movlb	0	; select bank0
  4383  033F  00A9               	movwf	printUShort@value
  4384  0340  3189  2129  3183   	fcall	_printUShort
  4385                           
  4386                           ;blueGyro.c: 485: cputs(" G x=");
  4387  0343  30C6               	movlw	low (STR_5| (0+32768))
  4388  0344  00F5               	movwf	cputs@s
  4389  0345  3085               	movlw	high (STR_5| (0+32768))
  4390  0346  00F6               	movwf	cputs@s+1
  4391  0347  3189  2115  3183   	fcall	_cputs
  4392                           
  4393                           ;blueGyro.c: 486: printGForce(CurrentData.Gx);
  4394  034A  0021               	movlb	1	; select bank1
  4395  034B  0852               	movf	(_CurrentData^(0+128)+2),w
  4396  034C  0020               	movlb	0	; select bank0
  4397  034D  00CA               	movwf	printGForce@RawG
  4398  034E  0021               	movlb	1	; select bank1
  4399  034F  0853               	movf	((_CurrentData+1)^(0+128)+2),w
  4400  0350  0020               	movlb	0	; select bank0
  4401  0351  00CB               	movwf	printGForce@RawG+1
  4402  0352  0D89               	rlf	9,f
  4403  0353  3B89               	subwfb	9,f
  4404  0354  0989               	comf	9,f
  4405  0355  00CC               	movwf	printGForce@RawG+2
  4406  0356  00CD               	movwf	printGForce@RawG+3
  4407  0357  318C  2496  3183   	fcall	_printGForce
  4408                           
  4409                           ;blueGyro.c: 487: cputs(cy);
  4410  035A  0020               	movlb	0	; select bank0
  4411  035B  0851               	movf	DisplayInfo@cy+1,w
  4412  035C  00F6               	movwf	cputs@s+1
  4413  035D  0850               	movf	DisplayInfo@cy,w
  4414  035E  00F5               	movwf	cputs@s
  4415  035F  3189  2115  3183   	fcall	_cputs
  4416                           
  4417                           ;blueGyro.c: 488: printGForce(CurrentData.Gy);
  4418  0362  0021               	movlb	1	; select bank1
  4419  0363  0854               	movf	(_CurrentData^(0+128)+4),w
  4420  0364  0020               	movlb	0	; select bank0
  4421  0365  00CA               	movwf	printGForce@RawG
  4422  0366  0021               	movlb	1	; select bank1
  4423  0367  0855               	movf	((_CurrentData+1)^(0+128)+4),w
  4424  0368  0020               	movlb	0	; select bank0
  4425  0369  00CB               	movwf	printGForce@RawG+1
  4426  036A  0D89               	rlf	9,f
  4427  036B  3B89               	subwfb	9,f
  4428  036C  0989               	comf	9,f
  4429  036D  00CC               	movwf	printGForce@RawG+2
  4430  036E  00CD               	movwf	printGForce@RawG+3
  4431  036F  318C  2496  3183   	fcall	_printGForce
  4432                           
  4433                           ;blueGyro.c: 489: cputs(cz);
  4434  0372  0020               	movlb	0	; select bank0
  4435  0373  0853               	movf	DisplayInfo@cz+1,w
  4436  0374  00F6               	movwf	cputs@s+1
  4437  0375  0852               	movf	DisplayInfo@cz,w
  4438  0376  00F5               	movwf	cputs@s
  4439  0377  3189  2115  3183   	fcall	_cputs
  4440                           
  4441                           ;blueGyro.c: 490: printGForce(CurrentData.Gz);
  4442  037A  0021               	movlb	1	; select bank1
  4443  037B  0856               	movf	(_CurrentData^(0+128)+6),w
  4444  037C  0020               	movlb	0	; select bank0
  4445  037D  00CA               	movwf	printGForce@RawG
  4446  037E  0021               	movlb	1	; select bank1
  4447  037F  0857               	movf	((_CurrentData+1)^(0+128)+6),w
  4448  0380  0020               	movlb	0	; select bank0
  4449  0381  00CB               	movwf	printGForce@RawG+1
  4450  0382  0D89               	rlf	9,f
  4451  0383  3B89               	subwfb	9,f
  4452  0384  0989               	comf	9,f
  4453  0385  00CC               	movwf	printGForce@RawG+2
  4454  0386  00CD               	movwf	printGForce@RawG+3
  4455  0387  318C  2496  3183   	fcall	_printGForce
  4456                           
  4457                           ;blueGyro.c: 492: Gt = isqrt(CurrentData.SumSquare);
  4458  038A  3016               	movlw	22
  4459  038B  3ED0               	addlw	(low (_CurrentData| 0))& (0+255)
  4460  038C  0086               	movwf	6
  4461  038D  0187               	clrf	7
  4462  038E  3F40               	moviw [0]fsr1
  4463  038F  00F2               	movwf	isqrt@val
  4464  0390  3F41               	moviw [1]fsr1
  4465  0391  00F3               	movwf	isqrt@val+1
  4466  0392  3F42               	moviw [2]fsr1
  4467  0393  00F4               	movwf	isqrt@val+2
  4468  0394  3F43               	moviw [3]fsr1
  4469  0395  00F5               	movwf	isqrt@val+3
  4470  0396  3187  2712  3183   	fcall	_isqrt
  4471  0399  0873               	movf	?_isqrt+1,w
  4472  039A  0020               	movlb	0	; select bank0
  4473  039B  00CF               	movwf	DisplayInfo@Gt+1
  4474  039C  0872               	movf	?_isqrt,w
  4475  039D  00CE               	movwf	DisplayInfo@Gt
  4476                           
  4477                           ;blueGyro.c: 493: cputs(" Gt=");
  4478  039E  30CC               	movlw	low (STR_6| (0+32768))
  4479  039F  00F5               	movwf	cputs@s
  4480  03A0  3085               	movlw	high (STR_6| (0+32768))
  4481  03A1  00F6               	movwf	cputs@s+1
  4482  03A2  3189  2115  3183   	fcall	_cputs
  4483                           
  4484                           ;blueGyro.c: 494: printGForce(Gt);
  4485  03A5  0020               	movlb	0	; select bank0
  4486  03A6  084E               	movf	DisplayInfo@Gt,w
  4487  03A7  00CA               	movwf	printGForce@RawG
  4488  03A8  084F               	movf	DisplayInfo@Gt+1,w
  4489  03A9  00CB               	movwf	printGForce@RawG+1
  4490  03AA  01CC               	clrf	printGForce@RawG+2
  4491  03AB  01CD               	clrf	printGForce@RawG+3
  4492  03AC  318C  2496  3183   	fcall	_printGForce
  4493                           
  4494                           ;blueGyro.c: 496: cputs(" Gyro x=");
  4495  03AF  3097               	movlw	low (STR_7| (0+32768))
  4496  03B0  00F5               	movwf	cputs@s
  4497  03B1  3085               	movlw	high (STR_7| (0+32768))
  4498  03B2  00F6               	movwf	cputs@s+1
  4499  03B3  3189  2115  3183   	fcall	_cputs
  4500                           
  4501                           ;blueGyro.c: 497: printGyro(GetGyroWithOffset(CurrentData.Gyrox,Setting.GyroX));
  4502  03B6  0021               	movlb	1	; select bank1
  4503  03B7  085B               	movf	((_CurrentData+1)^(0+128)+10),w
  4504  03B8  00F3               	movwf	GetGyroWithOffset@value+1
  4505  03B9  085A               	movf	(_CurrentData^(0+128)+10),w
  4506  03BA  00F2               	movwf	GetGyroWithOffset@value
  4507  03BB  0020               	movlb	0	; select bank0
  4508  03BC  0868               	movf	_Setting+1,w
  4509  03BD  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4510  03BE  0867               	movf	_Setting,w
  4511  03BF  00F4               	movwf	GetGyroWithOffset@Goffset
  4512  03C0  318D  251E  3183   	fcall	_GetGyroWithOffset
  4513  03C3  0872               	movf	?_GetGyroWithOffset,w
  4514  03C4  0020               	movlb	0	; select bank0
  4515  03C5  00CA               	movwf	printGyro@RawG
  4516  03C6  0873               	movf	?_GetGyroWithOffset+1,w
  4517  03C7  00CB               	movwf	printGyro@RawG+1
  4518  03C8  0D89               	rlf	9,f
  4519  03C9  3B89               	subwfb	9,f
  4520  03CA  0989               	comf	9,f
  4521  03CB  00CC               	movwf	printGyro@RawG+2
  4522  03CC  00CD               	movwf	printGyro@RawG+3
  4523  03CD  318C  24DA  3183   	fcall	_printGyro
  4524                           
  4525                           ;blueGyro.c: 498: cputs(cy);
  4526  03D0  0020               	movlb	0	; select bank0
  4527  03D1  0851               	movf	DisplayInfo@cy+1,w
  4528  03D2  00F6               	movwf	cputs@s+1
  4529  03D3  0850               	movf	DisplayInfo@cy,w
  4530  03D4  00F5               	movwf	cputs@s
  4531  03D5  3189  2115  3183   	fcall	_cputs
  4532                           
  4533                           ;blueGyro.c: 499: printGyro(GetGyroWithOffset(CurrentData.Gyroy,Setting.GyroY));
  4534  03D8  0021               	movlb	1	; select bank1
  4535  03D9  085D               	movf	((_CurrentData+1)^(0+128)+12),w
  4536  03DA  00F3               	movwf	GetGyroWithOffset@value+1
  4537  03DB  085C               	movf	(_CurrentData^(0+128)+12),w
  4538  03DC  00F2               	movwf	GetGyroWithOffset@value
  4539  03DD  0020               	movlb	0	; select bank0
  4540  03DE  086A               	movf	_Setting+3,w
  4541  03DF  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4542  03E0  0869               	movf	_Setting+2,w
  4543  03E1  00F4               	movwf	GetGyroWithOffset@Goffset
  4544  03E2  318D  251E  3183   	fcall	_GetGyroWithOffset
  4545  03E5  0872               	movf	?_GetGyroWithOffset,w
  4546  03E6  0020               	movlb	0	; select bank0
  4547  03E7  00CA               	movwf	printGyro@RawG
  4548  03E8  0873               	movf	?_GetGyroWithOffset+1,w
  4549  03E9  00CB               	movwf	printGyro@RawG+1
  4550  03EA  0D89               	rlf	9,f
  4551  03EB  3B89               	subwfb	9,f
  4552  03EC  0989               	comf	9,f
  4553  03ED  00CC               	movwf	printGyro@RawG+2
  4554  03EE  00CD               	movwf	printGyro@RawG+3
  4555  03EF  318C  24DA  3183   	fcall	_printGyro
  4556                           
  4557                           ;blueGyro.c: 500: cputs(cz);
  4558  03F2  0020               	movlb	0	; select bank0
  4559  03F3  0853               	movf	DisplayInfo@cz+1,w
  4560  03F4  00F6               	movwf	cputs@s+1
  4561  03F5  0852               	movf	DisplayInfo@cz,w
  4562  03F6  00F5               	movwf	cputs@s
  4563  03F7  3189  2115  3183   	fcall	_cputs
  4564                           
  4565                           ;blueGyro.c: 501: printGyro(GetGyroWithOffset(CurrentData.Gyroz,Setting.GyroZ));
  4566  03FA  0021               	movlb	1	; select bank1
  4567  03FB  085F               	movf	((_CurrentData+1)^(0+128)+14),w
  4568  03FC  00F3               	movwf	GetGyroWithOffset@value+1
  4569  03FD  085E               	movf	(_CurrentData^(0+128)+14),w
  4570  03FE  00F2               	movwf	GetGyroWithOffset@value
  4571  03FF  0020               	movlb	0	; select bank0
  4572  0400  086C               	movf	_Setting+5,w
  4573  0401  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4574  0402  086B               	movf	_Setting+4,w
  4575  0403  00F4               	movwf	GetGyroWithOffset@Goffset
  4576  0404  318D  251E  3183   	fcall	_GetGyroWithOffset
  4577  0407  0872               	movf	?_GetGyroWithOffset,w
  4578  0408  0020               	movlb	0	; select bank0
  4579  0409  00CA               	movwf	printGyro@RawG
  4580  040A  0873               	movf	?_GetGyroWithOffset+1,w
  4581  040B  00CB               	movwf	printGyro@RawG+1
  4582  040C  0D89               	rlf	9,f
  4583  040D  3B89               	subwfb	9,f
  4584  040E  0989               	comf	9,f
  4585  040F  00CC               	movwf	printGyro@RawG+2
  4586  0410  00CD               	movwf	printGyro@RawG+3
  4587  0411  318C  24DA  3183   	fcall	_printGyro
  4588                           
  4589                           ;blueGyro.c: 504: cputs(" Mag x=");
  4590  0414  30B0               	movlw	low (STR_8| (0+32768))
  4591  0415  00F5               	movwf	cputs@s
  4592  0416  3085               	movlw	high (STR_8| (0+32768))
  4593  0417  00F6               	movwf	cputs@s+1
  4594  0418  3189  2115  3183   	fcall	_cputs
  4595                           
  4596                           ;blueGyro.c: 505: printValue(CurrentData.MagX);
  4597  041B  0021               	movlb	1	; select bank1
  4598  041C  0861               	movf	((_CurrentData+1)^(0+128)+16),w
  4599  041D  0020               	movlb	0	; select bank0
  4600  041E  00B1               	movwf	printValue@value+1
  4601  041F  0021               	movlb	1	; select bank1
  4602  0420  0860               	movf	(_CurrentData^(0+128)+16),w
  4603  0421  0020               	movlb	0	; select bank0
  4604  0422  00B0               	movwf	printValue@value
  4605  0423  3189  213D  3183   	fcall	_printValue
  4606                           
  4607                           ;blueGyro.c: 506: cputs(cy);
  4608  0426  0020               	movlb	0	; select bank0
  4609  0427  0851               	movf	DisplayInfo@cy+1,w
  4610  0428  00F6               	movwf	cputs@s+1
  4611  0429  0850               	movf	DisplayInfo@cy,w
  4612  042A  00F5               	movwf	cputs@s
  4613  042B  3189  2115  3183   	fcall	_cputs
  4614                           
  4615                           ;blueGyro.c: 507: printValue(CurrentData.MagY);
  4616  042E  0021               	movlb	1	; select bank1
  4617  042F  0863               	movf	((_CurrentData+1)^(0+128)+18),w
  4618  0430  0020               	movlb	0	; select bank0
  4619  0431  00B1               	movwf	printValue@value+1
  4620  0432  0021               	movlb	1	; select bank1
  4621  0433  0862               	movf	(_CurrentData^(0+128)+18),w
  4622  0434  0020               	movlb	0	; select bank0
  4623  0435  00B0               	movwf	printValue@value
  4624  0436  3189  213D  3183   	fcall	_printValue
  4625                           
  4626                           ;blueGyro.c: 508: cputs(cz);
  4627  0439  0020               	movlb	0	; select bank0
  4628  043A  0853               	movf	DisplayInfo@cz+1,w
  4629  043B  00F6               	movwf	cputs@s+1
  4630  043C  0852               	movf	DisplayInfo@cz,w
  4631  043D  00F5               	movwf	cputs@s
  4632  043E  3189  2115  3183   	fcall	_cputs
  4633                           
  4634                           ;blueGyro.c: 509: printValue(CurrentData.MagZ);
  4635  0441  0021               	movlb	1	; select bank1
  4636  0442  0865               	movf	((_CurrentData+1)^(0+128)+20),w
  4637  0443  0020               	movlb	0	; select bank0
  4638  0444  00B1               	movwf	printValue@value+1
  4639  0445  0021               	movlb	1	; select bank1
  4640  0446  0864               	movf	(_CurrentData^(0+128)+20),w
  4641  0447  0020               	movlb	0	; select bank0
  4642  0448  00B0               	movwf	printValue@value
  4643  0449  3189  213D  3183   	fcall	_printValue
  4644                           
  4645                           ;blueGyro.c: 511: cputs("\r\n");
  4646  044C  3087               	movlw	low ((STR_15+10)| (0+32768))
  4647  044D  00F5               	movwf	cputs@s
  4648  044E  3085               	movlw	high ((STR_15+10)| (0+32768))
  4649  044F  00F6               	movwf	cputs@s+1
  4650  0450  3189  2115         	fcall	_cputs
  4651  0452  0008               	return
  4652  0453                     __end_of_DisplayInfo:	
  4653                           
  4654                           	psect	text20
  4655  093D                     __ptext20:	
  4656 ;; *************** function _printValue *****************
  4657 ;; Defined at:
  4658 ;;		line 342 in file "blueGyro.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  value           2   16[BANK0 ] short 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  buffer         16   18[BANK0 ] unsigned char [16]
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4672 ;;      Params:         0       2       0       0
  4673 ;;      Locals:         0      16       0       0
  4674 ;;      Temps:          0       0       0       0
  4675 ;;      Totals:         0      18       0       0
  4676 ;;Total ram usage:       18 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    4
  4679 ;; This function calls:
  4680 ;;		_cputs
  4681 ;;		_itoa
  4682 ;; This function is called by:
  4683 ;;		_DisplayInfo
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _printValue
  4689  093D                     _printValue:	
  4690                           
  4691                           ;blueGyro.c: 344: char buffer[16];
  4692                           ;blueGyro.c: 345: itoa(buffer,value,10);
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _printValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4696  093D  0020               	movlb	0	; select bank0
  4697  093E  0831               	movf	printValue@value+1,w
  4698  093F  00AA               	movwf	itoa@val+1
  4699  0940  0830               	movf	printValue@value,w
  4700  0941  00A9               	movwf	itoa@val
  4701  0942  300A               	movlw	10
  4702  0943  00AB               	movwf	itoa@base
  4703  0944  3000               	movlw	0
  4704  0945  00AC               	movwf	itoa@base+1
  4705  0946  3032               	movlw	(low (printValue@buffer| 0))& (0+255)
  4706  0947  318A  2247  3189   	fcall	_itoa
  4707                           
  4708                           ;blueGyro.c: 346: cputs(buffer);
  4709  094A  3032               	movlw	low printValue@buffer
  4710  094B  00F5               	movwf	cputs@s
  4711  094C  3000               	movlw	high printValue@buffer
  4712  094D  00F6               	movwf	cputs@s+1
  4713  094E  3189  2115         	fcall	_cputs
  4714  0950  0008               	return
  4715  0951                     __end_of_printValue:	
  4716                           
  4717                           	psect	text21
  4718  0929                     __ptext21:	
  4719 ;; *************** function _printUShort *****************
  4720 ;; Defined at:
  4721 ;;		line 421 in file "blueGyro.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  value           2    9[BANK0 ] unsigned short 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  buffer         16   11[BANK0 ] unsigned char [16]
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4735 ;;      Params:         0       2       0       0
  4736 ;;      Locals:         0      16       0       0
  4737 ;;      Temps:          0       0       0       0
  4738 ;;      Totals:         0      18       0       0
  4739 ;;Total ram usage:       18 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    3
  4742 ;; This function calls:
  4743 ;;		_cputs
  4744 ;;		_utoa
  4745 ;; This function is called by:
  4746 ;;		_DisplayInfo
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _printUShort
  4752  0929                     _printUShort:	
  4753                           
  4754                           ;blueGyro.c: 423: char buffer[16];
  4755                           ;blueGyro.c: 424: utoa(buffer,value,10); cputs(buffer);
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _printUShort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4759  0929  0020               	movlb	0	; select bank0
  4760  092A  082A               	movf	printUShort@value+1,w
  4761  092B  00A1               	movwf	utoa@val+1
  4762  092C  0829               	movf	printUShort@value,w
  4763  092D  00A0               	movwf	utoa@val
  4764  092E  300A               	movlw	10
  4765  092F  00A2               	movwf	utoa@base
  4766  0930  3000               	movlw	0
  4767  0931  00A3               	movwf	utoa@base+1
  4768  0932  302B               	movlw	(low (printUShort@buffer| 0))& (0+255)
  4769  0933  318D  25C8  3189   	fcall	_utoa
  4770  0936  302B               	movlw	low printUShort@buffer
  4771  0937  00F5               	movwf	cputs@s
  4772  0938  3000               	movlw	high printUShort@buffer
  4773  0939  00F6               	movwf	cputs@s+1
  4774  093A  3189  2115         	fcall	_cputs
  4775  093C  0008               	return
  4776  093D                     __end_of_printUShort:	
  4777                           
  4778                           	psect	text22
  4779  0CDA                     __ptext22:	
  4780 ;; *************** function _printGyro *****************
  4781 ;; Defined at:
  4782 ;;		line 410 in file "blueGyro.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  RawG            4   42[BANK0 ] long 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;		None               void
  4789 ;; Registers used:
  4790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4796 ;;      Params:         0       4       0       0
  4797 ;;      Locals:         0       0       0       0
  4798 ;;      Temps:          0       0       0       0
  4799 ;;      Totals:         0       4       0       0
  4800 ;;Total ram usage:        4 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    5
  4803 ;; This function calls:
  4804 ;;		___aldiv
  4805 ;;		___lmul
  4806 ;;		_printDeciValue
  4807 ;; This function is called by:
  4808 ;;		_DisplayInfo
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _printGyro
  4814  0CDA                     _printGyro:	
  4815                           
  4816                           ;blueGyro.c: 416: RawG *= 625L;
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in _printGyro: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4820  0CDA  3000               	movlw	0
  4821  0CDB  00F5               	movwf	___lmul@multiplier+3
  4822  0CDC  3000               	movlw	0
  4823  0CDD  00F4               	movwf	___lmul@multiplier+2
  4824  0CDE  3002               	movlw	2
  4825  0CDF  00F3               	movwf	___lmul@multiplier+1
  4826  0CE0  3071               	movlw	113
  4827  0CE1  00F2               	movwf	___lmul@multiplier
  4828  0CE2  0020               	movlb	0	; select bank0
  4829  0CE3  084D               	movf	printGyro@RawG+3,w
  4830  0CE4  00F9               	movwf	___lmul@multiplicand+3
  4831  0CE5  084C               	movf	printGyro@RawG+2,w
  4832  0CE6  00F8               	movwf	___lmul@multiplicand+2
  4833  0CE7  084B               	movf	printGyro@RawG+1,w
  4834  0CE8  00F7               	movwf	___lmul@multiplicand+1
  4835  0CE9  084A               	movf	printGyro@RawG,w
  4836  0CEA  00F6               	movwf	___lmul@multiplicand
  4837  0CEB  318B  233A  318C   	fcall	___lmul
  4838  0CEE  0875               	movf	?___lmul+3,w
  4839  0CEF  0020               	movlb	0	; select bank0
  4840  0CF0  00CD               	movwf	printGyro@RawG+3
  4841  0CF1  0874               	movf	?___lmul+2,w
  4842  0CF2  00CC               	movwf	printGyro@RawG+2
  4843  0CF3  0873               	movf	?___lmul+1,w
  4844  0CF4  00CB               	movwf	printGyro@RawG+1
  4845  0CF5  0872               	movf	?___lmul,w
  4846  0CF6  00CA               	movwf	printGyro@RawG
  4847                           
  4848                           ;blueGyro.c: 417: RawG /= 1024L;
  4849  0CF7  3000               	movlw	0
  4850  0CF8  00F5               	movwf	___aldiv@divisor+3
  4851  0CF9  3000               	movlw	0
  4852  0CFA  00F4               	movwf	___aldiv@divisor+2
  4853  0CFB  3004               	movlw	4
  4854  0CFC  00F3               	movwf	___aldiv@divisor+1
  4855  0CFD  3000               	movlw	0
  4856  0CFE  00F2               	movwf	___aldiv@divisor
  4857  0CFF  084D               	movf	printGyro@RawG+3,w
  4858  0D00  00F9               	movwf	___aldiv@dividend+3
  4859  0D01  084C               	movf	printGyro@RawG+2,w
  4860  0D02  00F8               	movwf	___aldiv@dividend+2
  4861  0D03  084B               	movf	printGyro@RawG+1,w
  4862  0D04  00F7               	movwf	___aldiv@dividend+1
  4863  0D05  084A               	movf	printGyro@RawG,w
  4864  0D06  00F6               	movwf	___aldiv@dividend
  4865  0D07  318F  277E  318C   	fcall	___aldiv
  4866  0D0A  0875               	movf	?___aldiv+3,w
  4867  0D0B  0020               	movlb	0	; select bank0
  4868  0D0C  00CD               	movwf	printGyro@RawG+3
  4869  0D0D  0874               	movf	?___aldiv+2,w
  4870  0D0E  00CC               	movwf	printGyro@RawG+2
  4871  0D0F  0873               	movf	?___aldiv+1,w
  4872  0D10  00CB               	movwf	printGyro@RawG+1
  4873  0D11  0872               	movf	?___aldiv,w
  4874  0D12  00CA               	movwf	printGyro@RawG
  4875                           
  4876                           ;blueGyro.c: 418: printDeciValue(RawG);
  4877  0D13  084D               	movf	printGyro@RawG+3,w
  4878  0D14  00B3               	movwf	printDeciValue@value+3
  4879  0D15  084C               	movf	printGyro@RawG+2,w
  4880  0D16  00B2               	movwf	printDeciValue@value+2
  4881  0D17  084B               	movf	printGyro@RawG+1,w
  4882  0D18  00B1               	movwf	printDeciValue@value+1
  4883  0D19  084A               	movf	printGyro@RawG,w
  4884  0D1A  00B0               	movwf	printDeciValue@value
  4885  0D1B  318E  2694         	fcall	_printDeciValue
  4886  0D1D  0008               	return
  4887  0D1E                     __end_of_printGyro:	
  4888                           
  4889                           	psect	text23
  4890  0E94                     __ptext23:	
  4891 ;; *************** function _printDeciValue *****************
  4892 ;; Defined at:
  4893 ;;		line 375 in file "blueGyro.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  value           4   16[BANK0 ] long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  buffer         16   20[BANK0 ] unsigned char [16]
  4898 ;;  _lvalue         4   38[BANK0 ] long 
  4899 ;;  T               2   36[BANK0 ] unsigned short 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;		None               void
  4902 ;; Registers used:
  4903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4909 ;;      Params:         0       4       0       0
  4910 ;;      Locals:         0      22       0       0
  4911 ;;      Temps:          0       0       0       0
  4912 ;;      Totals:         0      26       0       0
  4913 ;;Total ram usage:       26 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    4
  4916 ;; This function calls:
  4917 ;;		___aldiv
  4918 ;;		___lwmod
  4919 ;;		_cputs
  4920 ;;		_itoa
  4921 ;;		_putch
  4922 ;;		_utoa
  4923 ;; This function is called by:
  4924 ;;		_printGyro
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _printDeciValue
  4930  0E94                     _printDeciValue:	
  4931                           
  4932                           ;blueGyro.c: 377: char buffer[16];
  4933                           ;blueGyro.c: 378: long _lvalue;
  4934                           ;blueGyro.c: 379: unsigned short T;
  4935                           ;blueGyro.c: 381: if(value <0)
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _printDeciValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4939  0E94  0020               	movlb	0	; select bank0
  4940  0E95  1FB3               	btfss	printDeciValue@value+3,7
  4941  0E96  2EAC               	goto	l3104
  4942                           
  4943                           ;blueGyro.c: 382: {
  4944                           ;blueGyro.c: 383: putch('-');
  4945  0E97  302D               	movlw	45
  4946  0E98  318A  2206  318E   	fcall	_putch
  4947                           
  4948                           ;blueGyro.c: 384: _lvalue = (-value);
  4949  0E9B  0020               	movlb	0	; select bank0
  4950  0E9C  0930               	comf	printDeciValue@value,w
  4951  0E9D  00C6               	movwf	printDeciValue@_lvalue
  4952  0E9E  0931               	comf	printDeciValue@value+1,w
  4953  0E9F  00C7               	movwf	printDeciValue@_lvalue+1
  4954  0EA0  0932               	comf	printDeciValue@value+2,w
  4955  0EA1  00C8               	movwf	printDeciValue@_lvalue+2
  4956  0EA2  0933               	comf	printDeciValue@value+3,w
  4957  0EA3  00C9               	movwf	printDeciValue@_lvalue+3
  4958  0EA4  0AC6               	incf	printDeciValue@_lvalue,f
  4959  0EA5  1903               	skipnz
  4960  0EA6  0AC7               	incf	printDeciValue@_lvalue+1,f
  4961  0EA7  1903               	skipnz
  4962  0EA8  0AC8               	incf	printDeciValue@_lvalue+2,f
  4963  0EA9  1903               	skipnz
  4964  0EAA  0AC9               	incf	printDeciValue@_lvalue+3,f
  4965                           
  4966                           ;blueGyro.c: 385: }
  4967  0EAB  2EB4               	goto	l3106
  4968  0EAC                     l3104:	
  4969                           
  4970                           ;blueGyro.c: 386: else
  4971                           ;blueGyro.c: 387: _lvalue = value;
  4972  0EAC  0833               	movf	printDeciValue@value+3,w
  4973  0EAD  00C9               	movwf	printDeciValue@_lvalue+3
  4974  0EAE  0832               	movf	printDeciValue@value+2,w
  4975  0EAF  00C8               	movwf	printDeciValue@_lvalue+2
  4976  0EB0  0831               	movf	printDeciValue@value+1,w
  4977  0EB1  00C7               	movwf	printDeciValue@_lvalue+1
  4978  0EB2  0830               	movf	printDeciValue@value,w
  4979  0EB3  00C6               	movwf	printDeciValue@_lvalue
  4980  0EB4                     l3106:	
  4981                           
  4982                           ;blueGyro.c: 389: itoa(buffer,(short) (_lvalue /10),10);cputs(buffer);
  4983  0EB4  3000               	movlw	0
  4984  0EB5  00F5               	movwf	___aldiv@divisor+3
  4985  0EB6  3000               	movlw	0
  4986  0EB7  00F4               	movwf	___aldiv@divisor+2
  4987  0EB8  3000               	movlw	0
  4988  0EB9  00F3               	movwf	___aldiv@divisor+1
  4989  0EBA  300A               	movlw	10
  4990  0EBB  00F2               	movwf	___aldiv@divisor
  4991  0EBC  0849               	movf	printDeciValue@_lvalue+3,w
  4992  0EBD  00F9               	movwf	___aldiv@dividend+3
  4993  0EBE  0848               	movf	printDeciValue@_lvalue+2,w
  4994  0EBF  00F8               	movwf	___aldiv@dividend+2
  4995  0EC0  0847               	movf	printDeciValue@_lvalue+1,w
  4996  0EC1  00F7               	movwf	___aldiv@dividend+1
  4997  0EC2  0846               	movf	printDeciValue@_lvalue,w
  4998  0EC3  00F6               	movwf	___aldiv@dividend
  4999  0EC4  318F  277E  318E   	fcall	___aldiv
  5000  0EC7  0873               	movf	?___aldiv+1,w
  5001  0EC8  0020               	movlb	0	; select bank0
  5002  0EC9  00AA               	movwf	itoa@val+1
  5003  0ECA  0872               	movf	?___aldiv,w
  5004  0ECB  00A9               	movwf	itoa@val
  5005  0ECC  300A               	movlw	10
  5006  0ECD  00AB               	movwf	itoa@base
  5007  0ECE  3000               	movlw	0
  5008  0ECF  00AC               	movwf	itoa@base+1
  5009  0ED0  3034               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  5010  0ED1  318A  2247  318E   	fcall	_itoa
  5011  0ED4  3034               	movlw	low printDeciValue@buffer
  5012  0ED5  00F5               	movwf	cputs@s
  5013  0ED6  3000               	movlw	high printDeciValue@buffer
  5014  0ED7  00F6               	movwf	cputs@s+1
  5015  0ED8  3189  2115  318E   	fcall	_cputs
  5016                           
  5017                           ;blueGyro.c: 390: putch('.');
  5018  0EDB  302E               	movlw	46
  5019  0EDC  318A  2206  318E   	fcall	_putch
  5020                           
  5021                           ;blueGyro.c: 392: T = (unsigned short) _lvalue % 10;
  5022  0EDF  300A               	movlw	10
  5023  0EE0  00F2               	movwf	___lwmod@divisor
  5024  0EE1  3000               	movlw	0
  5025  0EE2  00F3               	movwf	___lwmod@divisor+1
  5026  0EE3  0020               	movlb	0	; select bank0
  5027  0EE4  0847               	movf	printDeciValue@_lvalue+1,w
  5028  0EE5  00F5               	movwf	___lwmod@dividend+1
  5029  0EE6  0846               	movf	printDeciValue@_lvalue,w
  5030  0EE7  00F4               	movwf	___lwmod@dividend
  5031  0EE8  318A  22DE  318E   	fcall	___lwmod
  5032  0EEB  0873               	movf	?___lwmod+1,w
  5033  0EEC  0020               	movlb	0	; select bank0
  5034  0EED  00C5               	movwf	printDeciValue@T+1
  5035  0EEE  0872               	movf	?___lwmod,w
  5036  0EEF  00C4               	movwf	printDeciValue@T
  5037                           
  5038                           ;blueGyro.c: 394: utoa(buffer,T,10);cputs(buffer);
  5039  0EF0  0845               	movf	printDeciValue@T+1,w
  5040  0EF1  00A1               	movwf	utoa@val+1
  5041  0EF2  0844               	movf	printDeciValue@T,w
  5042  0EF3  00A0               	movwf	utoa@val
  5043  0EF4  300A               	movlw	10
  5044  0EF5  00A2               	movwf	utoa@base
  5045  0EF6  3000               	movlw	0
  5046  0EF7  00A3               	movwf	utoa@base+1
  5047  0EF8  3034               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  5048  0EF9  318D  25C8  318E   	fcall	_utoa
  5049  0EFC  3034               	movlw	low printDeciValue@buffer
  5050  0EFD  00F5               	movwf	cputs@s
  5051  0EFE  3000               	movlw	high printDeciValue@buffer
  5052  0EFF  00F6               	movwf	cputs@s+1
  5053  0F00  3189  2115         	fcall	_cputs
  5054  0F02  0008               	return
  5055  0F03                     __end_of_printDeciValue:	
  5056                           
  5057                           	psect	text24
  5058  0C96                     __ptext24:	
  5059 ;; *************** function _printGForce *****************
  5060 ;; Defined at:
  5061 ;;		line 400 in file "blueGyro.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  RawG            4   42[BANK0 ] long 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5075 ;;      Params:         0       4       0       0
  5076 ;;      Locals:         0       0       0       0
  5077 ;;      Temps:          0       0       0       0
  5078 ;;      Totals:         0       4       0       0
  5079 ;;Total ram usage:        4 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    5
  5082 ;; This function calls:
  5083 ;;		___aldiv
  5084 ;;		___lmul
  5085 ;;		_printCentiValue
  5086 ;; This function is called by:
  5087 ;;		_DisplayInfo
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function _printGForce
  5093  0C96                     _printGForce:	
  5094                           
  5095                           ;blueGyro.c: 405: RawG *= 50L;
  5096                           
  5097                           ;incstack = 0
  5098                           ; Regs used in _printGForce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5099  0C96  3000               	movlw	0
  5100  0C97  00F5               	movwf	___lmul@multiplier+3
  5101  0C98  3000               	movlw	0
  5102  0C99  00F4               	movwf	___lmul@multiplier+2
  5103  0C9A  3000               	movlw	0
  5104  0C9B  00F3               	movwf	___lmul@multiplier+1
  5105  0C9C  3032               	movlw	50
  5106  0C9D  00F2               	movwf	___lmul@multiplier
  5107  0C9E  0020               	movlb	0	; select bank0
  5108  0C9F  084D               	movf	printGForce@RawG+3,w
  5109  0CA0  00F9               	movwf	___lmul@multiplicand+3
  5110  0CA1  084C               	movf	printGForce@RawG+2,w
  5111  0CA2  00F8               	movwf	___lmul@multiplicand+2
  5112  0CA3  084B               	movf	printGForce@RawG+1,w
  5113  0CA4  00F7               	movwf	___lmul@multiplicand+1
  5114  0CA5  084A               	movf	printGForce@RawG,w
  5115  0CA6  00F6               	movwf	___lmul@multiplicand
  5116  0CA7  318B  233A  318C   	fcall	___lmul
  5117  0CAA  0875               	movf	?___lmul+3,w
  5118  0CAB  0020               	movlb	0	; select bank0
  5119  0CAC  00CD               	movwf	printGForce@RawG+3
  5120  0CAD  0874               	movf	?___lmul+2,w
  5121  0CAE  00CC               	movwf	printGForce@RawG+2
  5122  0CAF  0873               	movf	?___lmul+1,w
  5123  0CB0  00CB               	movwf	printGForce@RawG+1
  5124  0CB1  0872               	movf	?___lmul,w
  5125  0CB2  00CA               	movwf	printGForce@RawG
  5126                           
  5127                           ;blueGyro.c: 406: RawG /= 1024L;
  5128  0CB3  3000               	movlw	0
  5129  0CB4  00F5               	movwf	___aldiv@divisor+3
  5130  0CB5  3000               	movlw	0
  5131  0CB6  00F4               	movwf	___aldiv@divisor+2
  5132  0CB7  3004               	movlw	4
  5133  0CB8  00F3               	movwf	___aldiv@divisor+1
  5134  0CB9  3000               	movlw	0
  5135  0CBA  00F2               	movwf	___aldiv@divisor
  5136  0CBB  084D               	movf	printGForce@RawG+3,w
  5137  0CBC  00F9               	movwf	___aldiv@dividend+3
  5138  0CBD  084C               	movf	printGForce@RawG+2,w
  5139  0CBE  00F8               	movwf	___aldiv@dividend+2
  5140  0CBF  084B               	movf	printGForce@RawG+1,w
  5141  0CC0  00F7               	movwf	___aldiv@dividend+1
  5142  0CC1  084A               	movf	printGForce@RawG,w
  5143  0CC2  00F6               	movwf	___aldiv@dividend
  5144  0CC3  318F  277E  318C   	fcall	___aldiv
  5145  0CC6  0875               	movf	?___aldiv+3,w
  5146  0CC7  0020               	movlb	0	; select bank0
  5147  0CC8  00CD               	movwf	printGForce@RawG+3
  5148  0CC9  0874               	movf	?___aldiv+2,w
  5149  0CCA  00CC               	movwf	printGForce@RawG+2
  5150  0CCB  0873               	movf	?___aldiv+1,w
  5151  0CCC  00CB               	movwf	printGForce@RawG+1
  5152  0CCD  0872               	movf	?___aldiv,w
  5153  0CCE  00CA               	movwf	printGForce@RawG
  5154                           
  5155                           ;blueGyro.c: 407: printCentiValue(RawG);
  5156  0CCF  084D               	movf	printGForce@RawG+3,w
  5157  0CD0  00B3               	movwf	printCentiValue@value+3
  5158  0CD1  084C               	movf	printGForce@RawG+2,w
  5159  0CD2  00B2               	movwf	printCentiValue@value+2
  5160  0CD3  084B               	movf	printGForce@RawG+1,w
  5161  0CD4  00B1               	movwf	printCentiValue@value+1
  5162  0CD5  084A               	movf	printGForce@RawG,w
  5163  0CD6  00B0               	movwf	printCentiValue@value
  5164  0CD7  318F  2703         	fcall	_printCentiValue
  5165  0CD9  0008               	return
  5166  0CDA                     __end_of_printGForce:	
  5167                           
  5168                           	psect	text25
  5169  0F03                     __ptext25:	
  5170 ;; *************** function _printCentiValue *****************
  5171 ;; Defined at:
  5172 ;;		line 350 in file "blueGyro.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  value           4   16[BANK0 ] long 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  buffer         16   20[BANK0 ] unsigned char [16]
  5177 ;;  _lvalue         4   38[BANK0 ] long 
  5178 ;;  T               2   36[BANK0 ] unsigned short 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5188 ;;      Params:         0       4       0       0
  5189 ;;      Locals:         0      22       0       0
  5190 ;;      Temps:          0       0       0       0
  5191 ;;      Totals:         0      26       0       0
  5192 ;;Total ram usage:       26 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    4
  5195 ;; This function calls:
  5196 ;;		___aldiv
  5197 ;;		___lwmod
  5198 ;;		_cputs
  5199 ;;		_itoa
  5200 ;;		_putch
  5201 ;;		_utoa
  5202 ;; This function is called by:
  5203 ;;		_printGForce
  5204 ;;		_printVoltage
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _printCentiValue
  5210  0F03                     _printCentiValue:	
  5211                           
  5212                           ;blueGyro.c: 352: char buffer[16];
  5213                           ;blueGyro.c: 353: long _lvalue;
  5214                           ;blueGyro.c: 354: unsigned short T;
  5215                           ;blueGyro.c: 356: if(value <0)
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _printCentiValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5219  0F03  0020               	movlb	0	; select bank0
  5220  0F04  1FB3               	btfss	printCentiValue@value+3,7
  5221  0F05  2F1B               	goto	l3082
  5222                           
  5223                           ;blueGyro.c: 357: {
  5224                           ;blueGyro.c: 358: putch('-');
  5225  0F06  302D               	movlw	45
  5226  0F07  318A  2206  318F   	fcall	_putch
  5227                           
  5228                           ;blueGyro.c: 359: _lvalue = (-value);
  5229  0F0A  0020               	movlb	0	; select bank0
  5230  0F0B  0930               	comf	printCentiValue@value,w
  5231  0F0C  00C6               	movwf	printCentiValue@_lvalue
  5232  0F0D  0931               	comf	printCentiValue@value+1,w
  5233  0F0E  00C7               	movwf	printCentiValue@_lvalue+1
  5234  0F0F  0932               	comf	printCentiValue@value+2,w
  5235  0F10  00C8               	movwf	printCentiValue@_lvalue+2
  5236  0F11  0933               	comf	printCentiValue@value+3,w
  5237  0F12  00C9               	movwf	printCentiValue@_lvalue+3
  5238  0F13  0AC6               	incf	printCentiValue@_lvalue,f
  5239  0F14  1903               	skipnz
  5240  0F15  0AC7               	incf	printCentiValue@_lvalue+1,f
  5241  0F16  1903               	skipnz
  5242  0F17  0AC8               	incf	printCentiValue@_lvalue+2,f
  5243  0F18  1903               	skipnz
  5244  0F19  0AC9               	incf	printCentiValue@_lvalue+3,f
  5245                           
  5246                           ;blueGyro.c: 360: }
  5247  0F1A  2F23               	goto	l3084
  5248  0F1B                     l3082:	
  5249                           
  5250                           ;blueGyro.c: 361: else
  5251                           ;blueGyro.c: 362: _lvalue = value;
  5252  0F1B  0833               	movf	printCentiValue@value+3,w
  5253  0F1C  00C9               	movwf	printCentiValue@_lvalue+3
  5254  0F1D  0832               	movf	printCentiValue@value+2,w
  5255  0F1E  00C8               	movwf	printCentiValue@_lvalue+2
  5256  0F1F  0831               	movf	printCentiValue@value+1,w
  5257  0F20  00C7               	movwf	printCentiValue@_lvalue+1
  5258  0F21  0830               	movf	printCentiValue@value,w
  5259  0F22  00C6               	movwf	printCentiValue@_lvalue
  5260  0F23                     l3084:	
  5261                           
  5262                           ;blueGyro.c: 364: itoa(buffer,(short) (_lvalue /100),10);cputs(buffer);
  5263  0F23  3000               	movlw	0
  5264  0F24  00F5               	movwf	___aldiv@divisor+3
  5265  0F25  3000               	movlw	0
  5266  0F26  00F4               	movwf	___aldiv@divisor+2
  5267  0F27  3000               	movlw	0
  5268  0F28  00F3               	movwf	___aldiv@divisor+1
  5269  0F29  3064               	movlw	100
  5270  0F2A  00F2               	movwf	___aldiv@divisor
  5271  0F2B  0849               	movf	printCentiValue@_lvalue+3,w
  5272  0F2C  00F9               	movwf	___aldiv@dividend+3
  5273  0F2D  0848               	movf	printCentiValue@_lvalue+2,w
  5274  0F2E  00F8               	movwf	___aldiv@dividend+2
  5275  0F2F  0847               	movf	printCentiValue@_lvalue+1,w
  5276  0F30  00F7               	movwf	___aldiv@dividend+1
  5277  0F31  0846               	movf	printCentiValue@_lvalue,w
  5278  0F32  00F6               	movwf	___aldiv@dividend
  5279  0F33  318F  277E  318F   	fcall	___aldiv
  5280  0F36  0873               	movf	?___aldiv+1,w
  5281  0F37  0020               	movlb	0	; select bank0
  5282  0F38  00AA               	movwf	itoa@val+1
  5283  0F39  0872               	movf	?___aldiv,w
  5284  0F3A  00A9               	movwf	itoa@val
  5285  0F3B  300A               	movlw	10
  5286  0F3C  00AB               	movwf	itoa@base
  5287  0F3D  3000               	movlw	0
  5288  0F3E  00AC               	movwf	itoa@base+1
  5289  0F3F  3034               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  5290  0F40  318A  2247  318F   	fcall	_itoa
  5291  0F43  3034               	movlw	low printCentiValue@buffer
  5292  0F44  00F5               	movwf	cputs@s
  5293  0F45  3000               	movlw	high printCentiValue@buffer
  5294  0F46  00F6               	movwf	cputs@s+1
  5295  0F47  3189  2115  318F   	fcall	_cputs
  5296                           
  5297                           ;blueGyro.c: 365: putch('.');
  5298  0F4A  302E               	movlw	46
  5299  0F4B  318A  2206  318F   	fcall	_putch
  5300                           
  5301                           ;blueGyro.c: 367: T = (unsigned short) _lvalue % 100;
  5302  0F4E  3064               	movlw	100
  5303  0F4F  00F2               	movwf	___lwmod@divisor
  5304  0F50  3000               	movlw	0
  5305  0F51  00F3               	movwf	___lwmod@divisor+1
  5306  0F52  0020               	movlb	0	; select bank0
  5307  0F53  0847               	movf	printCentiValue@_lvalue+1,w
  5308  0F54  00F5               	movwf	___lwmod@dividend+1
  5309  0F55  0846               	movf	printCentiValue@_lvalue,w
  5310  0F56  00F4               	movwf	___lwmod@dividend
  5311  0F57  318A  22DE  318F   	fcall	___lwmod
  5312  0F5A  0873               	movf	?___lwmod+1,w
  5313  0F5B  0020               	movlb	0	; select bank0
  5314  0F5C  00C5               	movwf	printCentiValue@T+1
  5315  0F5D  0872               	movf	?___lwmod,w
  5316  0F5E  00C4               	movwf	printCentiValue@T
  5317                           
  5318                           ;blueGyro.c: 369: if(T < 10)
  5319  0F5F  3000               	movlw	0
  5320  0F60  0245               	subwf	printCentiValue@T+1,w
  5321  0F61  300A               	movlw	10
  5322  0F62  1903               	skipnz
  5323  0F63  0244               	subwf	printCentiValue@T,w
  5324  0F64  1803               	skipnc
  5325  0F65  2F6A               	goto	l303
  5326                           
  5327                           ;blueGyro.c: 370: putch('0');
  5328  0F66  3030               	movlw	48
  5329  0F67  318A  2206  318F   	fcall	_putch
  5330  0F6A                     l303:	
  5331                           
  5332                           ;blueGyro.c: 371: utoa(buffer,T,10);cputs(buffer);
  5333  0F6A  0020               	movlb	0	; select bank0
  5334  0F6B  0845               	movf	printCentiValue@T+1,w
  5335  0F6C  00A1               	movwf	utoa@val+1
  5336  0F6D  0844               	movf	printCentiValue@T,w
  5337  0F6E  00A0               	movwf	utoa@val
  5338  0F6F  300A               	movlw	10
  5339  0F70  00A2               	movwf	utoa@base
  5340  0F71  3000               	movlw	0
  5341  0F72  00A3               	movwf	utoa@base+1
  5342  0F73  3034               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  5343  0F74  318D  25C8  318F   	fcall	_utoa
  5344  0F77  3034               	movlw	low printCentiValue@buffer
  5345  0F78  00F5               	movwf	cputs@s
  5346  0F79  3000               	movlw	high printCentiValue@buffer
  5347  0F7A  00F6               	movwf	cputs@s+1
  5348  0F7B  3189  2115         	fcall	_cputs
  5349  0F7D  0008               	return
  5350  0F7E                     __end_of_printCentiValue:	
  5351                           
  5352                           	psect	text26
  5353  0A47                     __ptext26:	
  5354 ;; *************** function _itoa *****************
  5355 ;; Defined at:
  5356 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/itoa.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  buf             1    wreg     PTR unsigned char 
  5359 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  5360 ;;  val             2    9[BANK0 ] int 
  5361 ;;  base            2   11[BANK0 ] int 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  5364 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  5365 ;;  cp              1   14[BANK0 ] PTR unsigned char 
  5366 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      PTR unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5376 ;;      Params:         0       4       0       0
  5377 ;;      Locals:         0       2       0       0
  5378 ;;      Temps:          0       1       0       0
  5379 ;;      Totals:         0       7       0       0
  5380 ;;Total ram usage:        7 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    3
  5383 ;; This function calls:
  5384 ;;		_utoa
  5385 ;; This function is called by:
  5386 ;;		_printValue
  5387 ;;		_printCentiValue
  5388 ;;		_printDeciValue
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _itoa
  5394  0A47                     _itoa:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5398                           ;itoa@buf stored from wreg
  5399  0A47  0020               	movlb	0	; select bank0
  5400  0A48  00AF               	movwf	itoa@buf
  5401  0A49  082F               	movf	itoa@buf,w
  5402  0A4A  00AD               	movwf	??_itoa
  5403  0A4B  082D               	movf	??_itoa,w
  5404  0A4C  00AE               	movwf	itoa@cp
  5405  0A4D  1FAA               	btfss	itoa@val+1,7
  5406  0A4E  2A5F               	goto	l3004
  5407  0A4F  302D               	movlw	45
  5408  0A50  00AD               	movwf	??_itoa
  5409  0A51  082F               	movf	itoa@buf,w
  5410  0A52  0086               	movwf	6
  5411  0A53  0187               	clrf	7
  5412  0A54  082D               	movf	??_itoa,w
  5413  0A55  0081               	movwf	1
  5414  0A56  3001               	movlw	1
  5415  0A57  00AD               	movwf	??_itoa
  5416  0A58  082D               	movf	??_itoa,w
  5417  0A59  07AF               	addwf	itoa@buf,f
  5418  0A5A  09A9               	comf	itoa@val,f
  5419  0A5B  09AA               	comf	itoa@val+1,f
  5420  0A5C  0AA9               	incf	itoa@val,f
  5421  0A5D  1903               	skipnz
  5422  0A5E  0AAA               	incf	itoa@val+1,f
  5423  0A5F                     l3004:	
  5424  0A5F  082A               	movf	itoa@val+1,w
  5425  0A60  00A1               	movwf	utoa@val+1
  5426  0A61  0829               	movf	itoa@val,w
  5427  0A62  00A0               	movwf	utoa@val
  5428  0A63  082C               	movf	itoa@base+1,w
  5429  0A64  00A3               	movwf	utoa@base+1
  5430  0A65  082B               	movf	itoa@base,w
  5431  0A66  00A2               	movwf	utoa@base
  5432  0A67  082F               	movf	itoa@buf,w
  5433  0A68  318D  25C8         	fcall	_utoa
  5434  0A6A  0008               	return
  5435  0A6B                     __end_of_itoa:	
  5436                           ;	Return value of _itoa is never used
  5437                           
  5438                           
  5439                           	psect	text27
  5440  0DC8                     __ptext27:	
  5441 ;; *************** function _utoa *****************
  5442 ;; Defined at:
  5443 ;;		line 17 in file "/Applications/microchip/xc8/v1.35/sources/common/itoa.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  buf             1    wreg     PTR unsigned char 
  5446 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  5447 ;;  val             2    0[BANK0 ] unsigned int 
  5448 ;;  base            2    2[BANK0 ] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  5451 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  5452 ;;  v               2    5[BANK0 ] unsigned int 
  5453 ;;  c               1    7[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      PTR unsigned char 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5463 ;;      Params:         0       4       0       0
  5464 ;;      Locals:         0       4       0       0
  5465 ;;      Temps:          0       1       0       0
  5466 ;;      Totals:         0       9       0       0
  5467 ;;Total ram usage:        9 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    2
  5470 ;; This function calls:
  5471 ;;		___lwdiv
  5472 ;;		___lwmod
  5473 ;; This function is called by:
  5474 ;;		_printCentiValue
  5475 ;;		_printDeciValue
  5476 ;;		_printUShort
  5477 ;;		_itoa
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _utoa
  5483  0DC8                     _utoa:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5487                           ;utoa@buf stored from wreg
  5488  0DC8  0020               	movlb	0	; select bank0
  5489  0DC9  00A8               	movwf	utoa@buf
  5490  0DCA  0821               	movf	utoa@val+1,w
  5491  0DCB  00A6               	movwf	utoa@v+1
  5492  0DCC  0820               	movf	utoa@val,w
  5493  0DCD  00A5               	movwf	utoa@v
  5494  0DCE                     l2944:	
  5495  0DCE  0823               	movf	utoa@base+1,w
  5496  0DCF  00F3               	movwf	___lwdiv@divisor+1
  5497  0DD0  0822               	movf	utoa@base,w
  5498  0DD1  00F2               	movwf	___lwdiv@divisor
  5499  0DD2  0826               	movf	utoa@v+1,w
  5500  0DD3  00F5               	movwf	___lwdiv@dividend+1
  5501  0DD4  0825               	movf	utoa@v,w
  5502  0DD5  00F4               	movwf	___lwdiv@dividend
  5503  0DD6  318B  236C  318D   	fcall	___lwdiv
  5504  0DD9  0873               	movf	?___lwdiv+1,w
  5505  0DDA  0020               	movlb	0	; select bank0
  5506  0DDB  00A6               	movwf	utoa@v+1
  5507  0DDC  0872               	movf	?___lwdiv,w
  5508  0DDD  00A5               	movwf	utoa@v
  5509  0DDE  3001               	movlw	1
  5510  0DDF  00A4               	movwf	??_utoa
  5511  0DE0  0824               	movf	??_utoa,w
  5512  0DE1  07A8               	addwf	utoa@buf,f
  5513  0DE2  0825               	movf	utoa@v,w
  5514  0DE3  0426               	iorwf	utoa@v+1,w
  5515  0DE4  1D03               	btfss	3,2
  5516  0DE5  2DCE               	goto	l2944
  5517  0DE6  0828               	movf	utoa@buf,w
  5518  0DE7  0086               	movwf	6
  5519  0DE8  0187               	clrf	7
  5520  0DE9  0181               	clrf	1
  5521  0DEA  3001               	movlw	1
  5522  0DEB  02A8               	subwf	utoa@buf,f
  5523  0DEC                     l2954:	
  5524  0DEC  0823               	movf	utoa@base+1,w
  5525  0DED  00F3               	movwf	___lwmod@divisor+1
  5526  0DEE  0822               	movf	utoa@base,w
  5527  0DEF  00F2               	movwf	___lwmod@divisor
  5528  0DF0  0821               	movf	utoa@val+1,w
  5529  0DF1  00F5               	movwf	___lwmod@dividend+1
  5530  0DF2  0820               	movf	utoa@val,w
  5531  0DF3  00F4               	movwf	___lwmod@dividend
  5532  0DF4  318A  22DE  318D   	fcall	___lwmod
  5533  0DF7  0872               	movf	?___lwmod,w
  5534  0DF8  0020               	movlb	0	; select bank0
  5535  0DF9  00A4               	movwf	??_utoa
  5536  0DFA  0824               	movf	??_utoa,w
  5537  0DFB  00A7               	movwf	utoa@c
  5538  0DFC  0823               	movf	utoa@base+1,w
  5539  0DFD  00F3               	movwf	___lwdiv@divisor+1
  5540  0DFE  0822               	movf	utoa@base,w
  5541  0DFF  00F2               	movwf	___lwdiv@divisor
  5542  0E00  0821               	movf	utoa@val+1,w
  5543  0E01  00F5               	movwf	___lwdiv@dividend+1
  5544  0E02  0820               	movf	utoa@val,w
  5545  0E03  00F4               	movwf	___lwdiv@dividend
  5546  0E04  318B  236C  318D   	fcall	___lwdiv
  5547  0E07  0873               	movf	?___lwdiv+1,w
  5548  0E08  0020               	movlb	0	; select bank0
  5549  0E09  00A1               	movwf	utoa@val+1
  5550  0E0A  0872               	movf	?___lwdiv,w
  5551  0E0B  00A0               	movwf	utoa@val
  5552  0E0C  300A               	movlw	10
  5553  0E0D  0227               	subwf	utoa@c,w
  5554  0E0E  1C03               	skipc
  5555  0E0F  2E14               	goto	l863
  5556  0E10  3007               	movlw	7
  5557  0E11  00A4               	movwf	??_utoa
  5558  0E12  0824               	movf	??_utoa,w
  5559  0E13  07A7               	addwf	utoa@c,f
  5560  0E14                     l863:	
  5561  0E14  3030               	movlw	48
  5562  0E15  00A4               	movwf	??_utoa
  5563  0E16  0824               	movf	??_utoa,w
  5564  0E17  07A7               	addwf	utoa@c,f
  5565  0E18  0827               	movf	utoa@c,w
  5566  0E19  00A4               	movwf	??_utoa
  5567  0E1A  0828               	movf	utoa@buf,w
  5568  0E1B  0086               	movwf	6
  5569  0E1C  0187               	clrf	7
  5570  0E1D  0824               	movf	??_utoa,w
  5571  0E1E  0081               	movwf	1
  5572  0E1F  3001               	movlw	1
  5573  0E20  02A8               	subwf	utoa@buf,f
  5574  0E21  0820               	movf	utoa@val,w
  5575  0E22  0421               	iorwf	utoa@val+1,w
  5576  0E23  1D03               	btfss	3,2
  5577  0E24  2DEC               	goto	l2954
  5578                           
  5579                           ;	Return value of _utoa is never used
  5580  0E25  3001               	movlw	1
  5581  0E26  00A4               	movwf	??_utoa
  5582  0E27  0824               	movf	??_utoa,w
  5583  0E28  07A8               	addwf	utoa@buf,f
  5584  0E29  0008               	return
  5585  0E2A                     __end_of_utoa:	
  5586                           
  5587                           	psect	text28
  5588  0ADE                     __ptext28:	
  5589 ;; *************** function ___lwmod *****************
  5590 ;; Defined at:
  5591 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwmod.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  divisor         2    2[COMMON] unsigned int 
  5594 ;;  dividend        2    4[COMMON] unsigned int 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  counter         1    7[COMMON] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  2    2[COMMON] unsigned int 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5606 ;;      Params:         4       0       0       0
  5607 ;;      Locals:         1       0       0       0
  5608 ;;      Temps:          1       0       0       0
  5609 ;;      Totals:         6       0       0       0
  5610 ;;Total ram usage:        6 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_printCentiValue
  5617 ;;		_printDeciValue
  5618 ;;		_utoa
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function ___lwmod
  5624  0ADE                     ___lwmod:	
  5625                           
  5626                           ;incstack = 0
  5627                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5628  0ADE  0872               	movf	___lwmod@divisor,w
  5629  0ADF  0473               	iorwf	___lwmod@divisor+1,w
  5630  0AE0  1903               	btfsc	3,2
  5631  0AE1  2B05               	goto	l2918
  5632  0AE2  01F7               	clrf	___lwmod@counter
  5633  0AE3  0AF7               	incf	___lwmod@counter,f
  5634  0AE4                     l2908:	
  5635  0AE4  1BF3               	btfsc	___lwmod@divisor+1,7
  5636  0AE5  2AF0               	goto	l2910
  5637  0AE6  3001               	movlw	1
  5638  0AE7                     u2335:	
  5639  0AE7  35F2               	lslf	___lwmod@divisor,f
  5640  0AE8  0DF3               	rlf	___lwmod@divisor+1,f
  5641  0AE9  0B89               	decfsz	9,f
  5642  0AEA  2AE7               	goto	u2335
  5643  0AEB  3001               	movlw	1
  5644  0AEC  00F6               	movwf	??___lwmod
  5645  0AED  0876               	movf	??___lwmod,w
  5646  0AEE  07F7               	addwf	___lwmod@counter,f
  5647  0AEF  2AE4               	goto	l2908
  5648  0AF0                     l2910:	
  5649  0AF0  0873               	movf	___lwmod@divisor+1,w
  5650  0AF1  0275               	subwf	___lwmod@dividend+1,w
  5651  0AF2  1D03               	skipz
  5652  0AF3  2AF6               	goto	u2355
  5653  0AF4  0872               	movf	___lwmod@divisor,w
  5654  0AF5  0274               	subwf	___lwmod@dividend,w
  5655  0AF6                     u2355:	
  5656  0AF6  1C03               	skipc
  5657  0AF7  2AFC               	goto	l2914
  5658  0AF8  0872               	movf	___lwmod@divisor,w
  5659  0AF9  02F4               	subwf	___lwmod@dividend,f
  5660  0AFA  0873               	movf	___lwmod@divisor+1,w
  5661  0AFB  3BF5               	subwfb	___lwmod@dividend+1,f
  5662  0AFC                     l2914:	
  5663  0AFC  3001               	movlw	1
  5664  0AFD                     u2365:	
  5665  0AFD  36F3               	lsrf	___lwmod@divisor+1,f
  5666  0AFE  0CF2               	rrf	___lwmod@divisor,f
  5667  0AFF  0B89               	decfsz	9,f
  5668  0B00  2AFD               	goto	u2365
  5669  0B01  3001               	movlw	1
  5670  0B02  02F7               	subwf	___lwmod@counter,f
  5671  0B03  1D03               	btfss	3,2
  5672  0B04  2AF0               	goto	l2910
  5673  0B05                     l2918:	
  5674  0B05  0875               	movf	___lwmod@dividend+1,w
  5675  0B06  00F3               	movwf	?___lwmod+1
  5676  0B07  0874               	movf	___lwmod@dividend,w
  5677  0B08  00F2               	movwf	?___lwmod
  5678  0B09  0008               	return
  5679  0B0A                     __end_of___lwmod:	
  5680                           
  5681                           	psect	text29
  5682  0B6C                     __ptext29:	
  5683 ;; *************** function ___lwdiv *****************
  5684 ;; Defined at:
  5685 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwdiv.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  divisor         2    2[COMMON] unsigned int 
  5688 ;;  dividend        2    4[COMMON] unsigned int 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  quotient        2    8[COMMON] unsigned int 
  5691 ;;  counter         1    7[COMMON] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2    2[COMMON] unsigned int 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5701 ;;      Params:         4       0       0       0
  5702 ;;      Locals:         3       0       0       0
  5703 ;;      Temps:          1       0       0       0
  5704 ;;      Totals:         8       0       0       0
  5705 ;;Total ram usage:        8 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_utoa
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function ___lwdiv
  5717  0B6C                     ___lwdiv:	
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5721  0B6C  01F8               	clrf	___lwdiv@quotient
  5722  0B6D  01F9               	clrf	___lwdiv@quotient+1
  5723  0B6E  0872               	movf	___lwdiv@divisor,w
  5724  0B6F  0473               	iorwf	___lwdiv@divisor+1,w
  5725  0B70  1903               	btfsc	3,2
  5726  0B71  2B9B               	goto	l2896
  5727  0B72  01F7               	clrf	___lwdiv@counter
  5728  0B73  0AF7               	incf	___lwdiv@counter,f
  5729  0B74                     l2884:	
  5730  0B74  1BF3               	btfsc	___lwdiv@divisor+1,7
  5731  0B75  2B80               	goto	l2886
  5732  0B76  3001               	movlw	1
  5733  0B77                     u2265:	
  5734  0B77  35F2               	lslf	___lwdiv@divisor,f
  5735  0B78  0DF3               	rlf	___lwdiv@divisor+1,f
  5736  0B79  0B89               	decfsz	9,f
  5737  0B7A  2B77               	goto	u2265
  5738  0B7B  3001               	movlw	1
  5739  0B7C  00F6               	movwf	??___lwdiv
  5740  0B7D  0876               	movf	??___lwdiv,w
  5741  0B7E  07F7               	addwf	___lwdiv@counter,f
  5742  0B7F  2B74               	goto	l2884
  5743  0B80                     l2886:	
  5744  0B80  3001               	movlw	1
  5745  0B81                     u2285:	
  5746  0B81  35F8               	lslf	___lwdiv@quotient,f
  5747  0B82  0DF9               	rlf	___lwdiv@quotient+1,f
  5748  0B83  0B89               	decfsz	9,f
  5749  0B84  2B81               	goto	u2285
  5750  0B85  0873               	movf	___lwdiv@divisor+1,w
  5751  0B86  0275               	subwf	___lwdiv@dividend+1,w
  5752  0B87  1D03               	skipz
  5753  0B88  2B8B               	goto	u2295
  5754  0B89  0872               	movf	___lwdiv@divisor,w
  5755  0B8A  0274               	subwf	___lwdiv@dividend,w
  5756  0B8B                     u2295:	
  5757  0B8B  1C03               	skipc
  5758  0B8C  2B92               	goto	l2892
  5759  0B8D  0872               	movf	___lwdiv@divisor,w
  5760  0B8E  02F4               	subwf	___lwdiv@dividend,f
  5761  0B8F  0873               	movf	___lwdiv@divisor+1,w
  5762  0B90  3BF5               	subwfb	___lwdiv@dividend+1,f
  5763  0B91  1478               	bsf	___lwdiv@quotient,0
  5764  0B92                     l2892:	
  5765  0B92  3001               	movlw	1
  5766  0B93                     u2305:	
  5767  0B93  36F3               	lsrf	___lwdiv@divisor+1,f
  5768  0B94  0CF2               	rrf	___lwdiv@divisor,f
  5769  0B95  0B89               	decfsz	9,f
  5770  0B96  2B93               	goto	u2305
  5771  0B97  3001               	movlw	1
  5772  0B98  02F7               	subwf	___lwdiv@counter,f
  5773  0B99  1D03               	btfss	3,2
  5774  0B9A  2B80               	goto	l2886
  5775  0B9B                     l2896:	
  5776  0B9B  0879               	movf	___lwdiv@quotient+1,w
  5777  0B9C  00F3               	movwf	?___lwdiv+1
  5778  0B9D  0878               	movf	___lwdiv@quotient,w
  5779  0B9E  00F2               	movwf	?___lwdiv
  5780  0B9F  0008               	return
  5781  0BA0                     __end_of___lwdiv:	
  5782                           
  5783                           	psect	text30
  5784  0F7E                     __ptext30:	
  5785 ;; *************** function ___aldiv *****************
  5786 ;; Defined at:
  5787 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/aldiv.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  divisor         4    2[COMMON] long 
  5790 ;;  dividend        4    6[COMMON] long 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  quotient        4    3[BANK0 ] long 
  5793 ;;  sign            1    2[BANK0 ] unsigned char 
  5794 ;;  counter         1    1[BANK0 ] unsigned char 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  4    2[COMMON] long 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5804 ;;      Params:         8       0       0       0
  5805 ;;      Locals:         0       6       0       0
  5806 ;;      Temps:          0       1       0       0
  5807 ;;      Totals:         8       7       0       0
  5808 ;;Total ram usage:       15 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    1
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_printCentiValue
  5815 ;;		_printDeciValue
  5816 ;;		_printGForce
  5817 ;;		_printGyro
  5818 ;;		_printVoltage
  5819 ;;		_main
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           
  5824                           ;psect for function ___aldiv
  5825  0F7E                     ___aldiv:	
  5826                           
  5827                           ;incstack = 0
  5828                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5829  0F7E  0020               	movlb	0	; select bank0
  5830  0F7F  01A2               	clrf	___aldiv@sign
  5831  0F80  1FF5               	btfss	___aldiv@divisor+3,7
  5832  0F81  2F8F               	goto	l643
  5833  0F82  09F2               	comf	___aldiv@divisor,f
  5834  0F83  09F3               	comf	___aldiv@divisor+1,f
  5835  0F84  09F4               	comf	___aldiv@divisor+2,f
  5836  0F85  09F5               	comf	___aldiv@divisor+3,f
  5837  0F86  0AF2               	incf	___aldiv@divisor,f
  5838  0F87  1903               	skipnz
  5839  0F88  0AF3               	incf	___aldiv@divisor+1,f
  5840  0F89  1903               	skipnz
  5841  0F8A  0AF4               	incf	___aldiv@divisor+2,f
  5842  0F8B  1903               	skipnz
  5843  0F8C  0AF5               	incf	___aldiv@divisor+3,f
  5844  0F8D  01A2               	clrf	___aldiv@sign
  5845  0F8E  0AA2               	incf	___aldiv@sign,f
  5846  0F8F                     l643:	
  5847  0F8F  1FF9               	btfss	___aldiv@dividend+3,7
  5848  0F90  2FA0               	goto	l3018
  5849  0F91  09F6               	comf	___aldiv@dividend,f
  5850  0F92  09F7               	comf	___aldiv@dividend+1,f
  5851  0F93  09F8               	comf	___aldiv@dividend+2,f
  5852  0F94  09F9               	comf	___aldiv@dividend+3,f
  5853  0F95  0AF6               	incf	___aldiv@dividend,f
  5854  0F96  1903               	skipnz
  5855  0F97  0AF7               	incf	___aldiv@dividend+1,f
  5856  0F98  1903               	skipnz
  5857  0F99  0AF8               	incf	___aldiv@dividend+2,f
  5858  0F9A  1903               	skipnz
  5859  0F9B  0AF9               	incf	___aldiv@dividend+3,f
  5860  0F9C  3001               	movlw	1
  5861  0F9D  00A0               	movwf	??___aldiv
  5862  0F9E  0820               	movf	??___aldiv,w
  5863  0F9F  06A2               	xorwf	___aldiv@sign,f
  5864  0FA0                     l3018:	
  5865  0FA0  3000               	movlw	0
  5866  0FA1  00A6               	movwf	___aldiv@quotient+3
  5867  0FA2  3000               	movlw	0
  5868  0FA3  00A5               	movwf	___aldiv@quotient+2
  5869  0FA4  3000               	movlw	0
  5870  0FA5  00A4               	movwf	___aldiv@quotient+1
  5871  0FA6  3000               	movlw	0
  5872  0FA7  00A3               	movwf	___aldiv@quotient
  5873  0FA8  0875               	movf	___aldiv@divisor+3,w
  5874  0FA9  0474               	iorwf	___aldiv@divisor+2,w
  5875  0FAA  0473               	iorwf	___aldiv@divisor+1,w
  5876  0FAB  0472               	iorwf	___aldiv@divisor,w
  5877  0FAC  1903               	skipnz
  5878  0FAD  2FE9               	goto	l3040
  5879  0FAE  01A1               	clrf	___aldiv@counter
  5880  0FAF  0AA1               	incf	___aldiv@counter,f
  5881  0FB0                     l3026:	
  5882  0FB0  1BF5               	btfsc	___aldiv@divisor+3,7
  5883  0FB1  2FBE               	goto	l3028
  5884  0FB2  3001               	movlw	1
  5885  0FB3                     u2505:	
  5886  0FB3  35F2               	lslf	___aldiv@divisor,f
  5887  0FB4  0DF3               	rlf	___aldiv@divisor+1,f
  5888  0FB5  0DF4               	rlf	___aldiv@divisor+2,f
  5889  0FB6  0DF5               	rlf	___aldiv@divisor+3,f
  5890  0FB7  0B89               	decfsz	9,f
  5891  0FB8  2FB3               	goto	u2505
  5892  0FB9  3001               	movlw	1
  5893  0FBA  00A0               	movwf	??___aldiv
  5894  0FBB  0820               	movf	??___aldiv,w
  5895  0FBC  07A1               	addwf	___aldiv@counter,f
  5896  0FBD  2FB0               	goto	l3026
  5897  0FBE                     l3028:	
  5898  0FBE  3001               	movlw	1
  5899  0FBF                     u2525:	
  5900  0FBF  35A3               	lslf	___aldiv@quotient,f
  5901  0FC0  0DA4               	rlf	___aldiv@quotient+1,f
  5902  0FC1  0DA5               	rlf	___aldiv@quotient+2,f
  5903  0FC2  0DA6               	rlf	___aldiv@quotient+3,f
  5904  0FC3  0B89               	decfsz	9,f
  5905  0FC4  2FBF               	goto	u2525
  5906  0FC5  0875               	movf	___aldiv@divisor+3,w
  5907  0FC6  0279               	subwf	___aldiv@dividend+3,w
  5908  0FC7  1D03               	skipz
  5909  0FC8  2FD3               	goto	u2535
  5910  0FC9  0874               	movf	___aldiv@divisor+2,w
  5911  0FCA  0278               	subwf	___aldiv@dividend+2,w
  5912  0FCB  1D03               	skipz
  5913  0FCC  2FD3               	goto	u2535
  5914  0FCD  0873               	movf	___aldiv@divisor+1,w
  5915  0FCE  0277               	subwf	___aldiv@dividend+1,w
  5916  0FCF  1D03               	skipz
  5917  0FD0  2FD3               	goto	u2535
  5918  0FD1  0872               	movf	___aldiv@divisor,w
  5919  0FD2  0276               	subwf	___aldiv@dividend,w
  5920  0FD3                     u2535:	
  5921  0FD3  1C03               	skipc
  5922  0FD4  2FDE               	goto	l3036
  5923  0FD5  0872               	movf	___aldiv@divisor,w
  5924  0FD6  02F6               	subwf	___aldiv@dividend,f
  5925  0FD7  0873               	movf	___aldiv@divisor+1,w
  5926  0FD8  3BF7               	subwfb	___aldiv@dividend+1,f
  5927  0FD9  0874               	movf	___aldiv@divisor+2,w
  5928  0FDA  3BF8               	subwfb	___aldiv@dividend+2,f
  5929  0FDB  0875               	movf	___aldiv@divisor+3,w
  5930  0FDC  3BF9               	subwfb	___aldiv@dividend+3,f
  5931  0FDD  1423               	bsf	___aldiv@quotient,0
  5932  0FDE                     l3036:	
  5933  0FDE  3001               	movlw	1
  5934  0FDF                     u2545:	
  5935  0FDF  36F5               	lsrf	___aldiv@divisor+3,f
  5936  0FE0  0CF4               	rrf	___aldiv@divisor+2,f
  5937  0FE1  0CF3               	rrf	___aldiv@divisor+1,f
  5938  0FE2  0CF2               	rrf	___aldiv@divisor,f
  5939  0FE3  0B89               	decfsz	9,f
  5940  0FE4  2FDF               	goto	u2545
  5941  0FE5  3001               	movlw	1
  5942  0FE6  02A1               	subwf	___aldiv@counter,f
  5943  0FE7  1D03               	btfss	3,2
  5944  0FE8  2FBE               	goto	l3028
  5945  0FE9                     l3040:	
  5946  0FE9  0822               	movf	___aldiv@sign,w
  5947  0FEA  1903               	btfsc	3,2
  5948  0FEB  2FF7               	goto	l3044
  5949  0FEC  09A3               	comf	___aldiv@quotient,f
  5950  0FED  09A4               	comf	___aldiv@quotient+1,f
  5951  0FEE  09A5               	comf	___aldiv@quotient+2,f
  5952  0FEF  09A6               	comf	___aldiv@quotient+3,f
  5953  0FF0  0AA3               	incf	___aldiv@quotient,f
  5954  0FF1  1903               	skipnz
  5955  0FF2  0AA4               	incf	___aldiv@quotient+1,f
  5956  0FF3  1903               	skipnz
  5957  0FF4  0AA5               	incf	___aldiv@quotient+2,f
  5958  0FF5  1903               	skipnz
  5959  0FF6  0AA6               	incf	___aldiv@quotient+3,f
  5960  0FF7                     l3044:	
  5961  0FF7  0826               	movf	___aldiv@quotient+3,w
  5962  0FF8  00F5               	movwf	?___aldiv+3
  5963  0FF9  0825               	movf	___aldiv@quotient+2,w
  5964  0FFA  00F4               	movwf	?___aldiv+2
  5965  0FFB  0824               	movf	___aldiv@quotient+1,w
  5966  0FFC  00F3               	movwf	?___aldiv+1
  5967  0FFD  0823               	movf	___aldiv@quotient,w
  5968  0FFE  00F2               	movwf	?___aldiv
  5969  0FFF  0008               	return
  5970  1000                     __end_of___aldiv:	
  5971                           
  5972                           	psect	text31
  5973  0712                     __ptext31:	
  5974 ;; *************** function _isqrt *****************
  5975 ;; Defined at:
  5976 ;;		line 330 in file "blueGyro.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  val             4    2[COMMON] unsigned long 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  b               4   24[BANK0 ] unsigned long 
  5981 ;;  g               4   20[BANK0 ] unsigned long 
  5982 ;;  bshft           4   16[BANK0 ] unsigned long 
  5983 ;;  temp            4   12[BANK0 ] unsigned long 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2    2[COMMON] unsigned short 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5993 ;;      Params:         4       0       0       0
  5994 ;;      Locals:         0      16       0       0
  5995 ;;      Temps:          0      12       0       0
  5996 ;;      Totals:         4      28       0       0
  5997 ;;Total ram usage:       32 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_DisplayInfo
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _isqrt
  6009  0712                     _isqrt:	
  6010                           
  6011                           ;blueGyro.c: 331: unsigned long temp, g=0, b = 0x8000, bshft = 15;
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _isqrt: [wreg+status,2+status,0]
  6015  0712  3000               	movlw	0
  6016  0713  0020               	movlb	0	; select bank0
  6017  0714  00B7               	movwf	isqrt@g+3
  6018  0715  3000               	movlw	0
  6019  0716  00B6               	movwf	isqrt@g+2
  6020  0717  3000               	movlw	0
  6021  0718  00B5               	movwf	isqrt@g+1
  6022  0719  3000               	movlw	0
  6023  071A  00B4               	movwf	isqrt@g
  6024  071B  3000               	movlw	0
  6025  071C  00BB               	movwf	isqrt@b+3
  6026  071D  3000               	movlw	0
  6027  071E  00BA               	movwf	isqrt@b+2
  6028  071F  3080               	movlw	128
  6029  0720  00B9               	movwf	isqrt@b+1
  6030  0721  3000               	movlw	0
  6031  0722  00B8               	movwf	isqrt@b
  6032  0723  3000               	movlw	0
  6033  0724  00B3               	movwf	isqrt@bshft+3
  6034  0725  3000               	movlw	0
  6035  0726  00B2               	movwf	isqrt@bshft+2
  6036  0727  3000               	movlw	0
  6037  0728  00B1               	movwf	isqrt@bshft+1
  6038  0729  300F               	movlw	15
  6039  072A  00B0               	movwf	isqrt@bshft
  6040  072B                     l3238:	
  6041                           ;blueGyro.c: 332: do {
  6042                           
  6043                           
  6044                           ;blueGyro.c: 333: if (val >= (temp = (((g << 1) + b)<<bshft--))) {
  6045  072B  0838               	movf	isqrt@b,w
  6046  072C  00A0               	movwf	??_isqrt
  6047  072D  0839               	movf	isqrt@b+1,w
  6048  072E  00A1               	movwf	??_isqrt+1
  6049  072F  083A               	movf	isqrt@b+2,w
  6050  0730  00A2               	movwf	??_isqrt+2
  6051  0731  083B               	movf	isqrt@b+3,w
  6052  0732  00A3               	movwf	??_isqrt+3
  6053  0733  0834               	movf	isqrt@g,w
  6054  0734  00A4               	movwf	??_isqrt+4
  6055  0735  0835               	movf	isqrt@g+1,w
  6056  0736  00A5               	movwf	??_isqrt+5
  6057  0737  0836               	movf	isqrt@g+2,w
  6058  0738  00A6               	movwf	??_isqrt+6
  6059  0739  0837               	movf	isqrt@g+3,w
  6060  073A  00A7               	movwf	??_isqrt+7
  6061  073B  3001               	movlw	1
  6062  073C                     u2785:	
  6063  073C  35A4               	lslf	??_isqrt+4,f
  6064  073D  0DA5               	rlf	??_isqrt+5,f
  6065  073E  0DA6               	rlf	??_isqrt+6,f
  6066  073F  0DA7               	rlf	??_isqrt+7,f
  6067  0740  0B89               	decfsz	9,f
  6068  0741  2F3C               	goto	u2785
  6069  0742  0824               	movf	??_isqrt+4,w
  6070  0743  07A0               	addwf	??_isqrt,f
  6071  0744  0825               	movf	??_isqrt+5,w
  6072  0745  3DA1               	addwfc	??_isqrt+1,f
  6073  0746  0826               	movf	??_isqrt+6,w
  6074  0747  3DA2               	addwfc	??_isqrt+2,f
  6075  0748  0827               	movf	??_isqrt+7,w
  6076  0749  3DA3               	addwfc	??_isqrt+3,f
  6077  074A  0833               	movf	isqrt@bshft+3,w
  6078  074B  00AB               	movwf	??_isqrt+11
  6079  074C  0832               	movf	isqrt@bshft+2,w
  6080  074D  00AA               	movwf	??_isqrt+10
  6081  074E  0831               	movf	isqrt@bshft+1,w
  6082  074F  00A9               	movwf	??_isqrt+9
  6083  0750  0830               	movf	isqrt@bshft,w
  6084  0751  00A8               	movwf	??_isqrt+8
  6085  0752  3001               	movlw	1
  6086  0753  02B0               	subwf	isqrt@bshft,f
  6087  0754  3000               	movlw	0
  6088  0755  3BB1               	subwfb	isqrt@bshft+1,f
  6089  0756  3BB2               	subwfb	isqrt@bshft+2,f
  6090  0757  3BB3               	subwfb	isqrt@bshft+3,f
  6091  0758  0A28               	incf	??_isqrt+8,w
  6092  0759  2F5E               	goto	u2790
  6093  075A                     u2795:	
  6094  075A  35A0               	lslf	??_isqrt,f
  6095  075B  0DA1               	rlf	??_isqrt+1,f
  6096  075C  0DA2               	rlf	??_isqrt+2,f
  6097  075D  0DA3               	rlf	??_isqrt+3,f
  6098  075E                     u2790:	
  6099  075E  0B89               	decfsz	9,f
  6100  075F  2F5A               	goto	u2795
  6101  0760  0823               	movf	??_isqrt+3,w
  6102  0761  00AF               	movwf	isqrt@temp+3
  6103  0762  0822               	movf	??_isqrt+2,w
  6104  0763  00AE               	movwf	isqrt@temp+2
  6105  0764  0821               	movf	??_isqrt+1,w
  6106  0765  00AD               	movwf	isqrt@temp+1
  6107  0766  0820               	movf	??_isqrt,w
  6108  0767  00AC               	movwf	isqrt@temp
  6109  0768  082F               	movf	isqrt@temp+3,w
  6110  0769  0275               	subwf	isqrt@val+3,w
  6111  076A  1D03               	skipz
  6112  076B  2F76               	goto	u2805
  6113  076C  082E               	movf	isqrt@temp+2,w
  6114  076D  0274               	subwf	isqrt@val+2,w
  6115  076E  1D03               	skipz
  6116  076F  2F76               	goto	u2805
  6117  0770  082D               	movf	isqrt@temp+1,w
  6118  0771  0273               	subwf	isqrt@val+1,w
  6119  0772  1D03               	skipz
  6120  0773  2F76               	goto	u2805
  6121  0774  082C               	movf	isqrt@temp,w
  6122  0775  0272               	subwf	isqrt@val,w
  6123  0776                     u2805:	
  6124  0776  1C03               	skipc
  6125  0777  2F88               	goto	l3242
  6126                           
  6127                           ;blueGyro.c: 334: g += b;
  6128  0778  0838               	movf	isqrt@b,w
  6129  0779  07B4               	addwf	isqrt@g,f
  6130  077A  0839               	movf	isqrt@b+1,w
  6131  077B  3DB5               	addwfc	isqrt@g+1,f
  6132  077C  083A               	movf	isqrt@b+2,w
  6133  077D  3DB6               	addwfc	isqrt@g+2,f
  6134  077E  083B               	movf	isqrt@b+3,w
  6135  077F  3DB7               	addwfc	isqrt@g+3,f
  6136                           
  6137                           ;blueGyro.c: 335: val -= temp;
  6138  0780  082C               	movf	isqrt@temp,w
  6139  0781  02F2               	subwf	isqrt@val,f
  6140  0782  082D               	movf	isqrt@temp+1,w
  6141  0783  3BF3               	subwfb	isqrt@val+1,f
  6142  0784  082E               	movf	isqrt@temp+2,w
  6143  0785  3BF4               	subwfb	isqrt@val+2,f
  6144  0786  082F               	movf	isqrt@temp+3,w
  6145  0787  3BF5               	subwfb	isqrt@val+3,f
  6146  0788                     l3242:	
  6147                           
  6148                           ;blueGyro.c: 336: }
  6149                           ;blueGyro.c: 337: } while (b >>= 1);
  6150  0788  3001               	movlw	1
  6151  0789                     u2815:	
  6152  0789  36BB               	lsrf	isqrt@b+3,f
  6153  078A  0CBA               	rrf	isqrt@b+2,f
  6154  078B  0CB9               	rrf	isqrt@b+1,f
  6155  078C  0CB8               	rrf	isqrt@b,f
  6156  078D  0B89               	decfsz	9,f
  6157  078E  2F89               	goto	u2815
  6158  078F  083B               	movf	isqrt@b+3,w
  6159  0790  043A               	iorwf	isqrt@b+2,w
  6160  0791  0439               	iorwf	isqrt@b+1,w
  6161  0792  0438               	iorwf	isqrt@b,w
  6162  0793  1D03               	skipz
  6163  0794  2F2B               	goto	l3238
  6164                           
  6165                           ;blueGyro.c: 338: return g;
  6166  0795  0835               	movf	isqrt@g+1,w
  6167  0796  00F3               	movwf	?_isqrt+1
  6168  0797  0834               	movf	isqrt@g,w
  6169  0798  00F2               	movwf	?_isqrt
  6170  0799  0008               	return
  6171  079A                     __end_of_isqrt:	
  6172                           
  6173                           	psect	text32
  6174  0453                     __ptext32:	
  6175 ;; *************** function _CalculateSumOfSquares *****************
  6176 ;; Defined at:
  6177 ;;		line 430 in file "blueGyro.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  GzSquare        4   26[BANK0 ] unsigned long 
  6182 ;;  GySquare        4   22[BANK0 ] unsigned long 
  6183 ;;  GxSquare        4   18[BANK0 ] unsigned long 
  6184 ;;  temp            4    0        long 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;		None               void
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6194 ;;      Params:         0       0       0       0
  6195 ;;      Locals:         0      18       0       0
  6196 ;;      Temps:          0       8       0       0
  6197 ;;      Totals:         0      26       0       0
  6198 ;;Total ram usage:       26 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    2
  6201 ;; This function calls:
  6202 ;;		___lmul
  6203 ;; This function is called by:
  6204 ;;		_DisplayInfo
  6205 ;;		_main
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _CalculateSumOfSquares
  6211  0453                     _CalculateSumOfSquares:	
  6212                           
  6213                           ;blueGyro.c: 433: unsigned long GxSquare, GySquare, GzSquare;
  6214                           ;blueGyro.c: 434: long temp;
  6215                           ;blueGyro.c: 442: GxSquare = (unsigned long) (CurrentData.Gx<0 ? (-CurrentData.Gx) : Cur
      +                          rentData.Gx);
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _CalculateSumOfSquares: [wreg+status,2+status,0+pclath+cstack]
  6219  0453  0021               	movlb	1	; select bank1
  6220  0454  1BD3               	btfsc	((_CurrentData+1)^(0+128)+2),7
  6221  0455  2C5E               	goto	l3268
  6222  0456  0853               	movf	((_CurrentData+1)^(0+128)+2),w
  6223  0457  0020               	movlb	0	; select bank0
  6224  0458  00AD               	movwf	_CalculateSumOfSquares$323+1
  6225  0459  0021               	movlb	1	; select bank1
  6226  045A  0852               	movf	(_CurrentData^(0+128)+2),w
  6227  045B  0020               	movlb	0	; select bank0
  6228  045C  00AC               	movwf	_CalculateSumOfSquares$323
  6229  045D  2C6D               	goto	l3270
  6230  045E                     l3268:	
  6231  045E  0021               	movlb	1	; select bank1
  6232  045F  0952               	comf	(_CurrentData^(0+128)+2),w
  6233  0460  0020               	movlb	0	; select bank0
  6234  0461  00A4               	movwf	??_CalculateSumOfSquares
  6235  0462  0021               	movlb	1	; select bank1
  6236  0463  0953               	comf	((_CurrentData+1)^(0+128)+2),w
  6237  0464  0020               	movlb	0	; select bank0
  6238  0465  00A5               	movwf	??_CalculateSumOfSquares+1
  6239  0466  0AA4               	incf	??_CalculateSumOfSquares,f
  6240  0467  1903               	skipnz
  6241  0468  0AA5               	incf	??_CalculateSumOfSquares+1,f
  6242  0469  0824               	movf	??_CalculateSumOfSquares,w
  6243  046A  00AC               	movwf	_CalculateSumOfSquares$323
  6244  046B  0825               	movf	??_CalculateSumOfSquares+1,w
  6245  046C  00AD               	movwf	_CalculateSumOfSquares$323+1
  6246  046D                     l3270:	
  6247  046D  082C               	movf	_CalculateSumOfSquares$323,w
  6248  046E  00B2               	movwf	CalculateSumOfSquares@GxSquare
  6249  046F  082D               	movf	_CalculateSumOfSquares$323+1,w
  6250  0470  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  6251  0471  0D89               	rlf	9,f
  6252  0472  3B89               	subwfb	9,f
  6253  0473  0989               	comf	9,f
  6254  0474  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  6255  0475  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  6256                           
  6257                           ;blueGyro.c: 443: GySquare = (unsigned long) (CurrentData.Gy<0 ? (-CurrentData.Gy) : Cur
      +                          rentData.Gy);
  6258  0476  0021               	movlb	1	; select bank1
  6259  0477  1BD5               	btfsc	((_CurrentData+1)^(0+128)+4),7
  6260  0478  2C81               	goto	l3276
  6261  0479  0855               	movf	((_CurrentData+1)^(0+128)+4),w
  6262  047A  0020               	movlb	0	; select bank0
  6263  047B  00AF               	movwf	_CalculateSumOfSquares$324+1
  6264  047C  0021               	movlb	1	; select bank1
  6265  047D  0854               	movf	(_CurrentData^(0+128)+4),w
  6266  047E  0020               	movlb	0	; select bank0
  6267  047F  00AE               	movwf	_CalculateSumOfSquares$324
  6268  0480  2C90               	goto	l3278
  6269  0481                     l3276:	
  6270  0481  0021               	movlb	1	; select bank1
  6271  0482  0954               	comf	(_CurrentData^(0+128)+4),w
  6272  0483  0020               	movlb	0	; select bank0
  6273  0484  00A4               	movwf	??_CalculateSumOfSquares
  6274  0485  0021               	movlb	1	; select bank1
  6275  0486  0955               	comf	((_CurrentData+1)^(0+128)+4),w
  6276  0487  0020               	movlb	0	; select bank0
  6277  0488  00A5               	movwf	??_CalculateSumOfSquares+1
  6278  0489  0AA4               	incf	??_CalculateSumOfSquares,f
  6279  048A  1903               	skipnz
  6280  048B  0AA5               	incf	??_CalculateSumOfSquares+1,f
  6281  048C  0824               	movf	??_CalculateSumOfSquares,w
  6282  048D  00AE               	movwf	_CalculateSumOfSquares$324
  6283  048E  0825               	movf	??_CalculateSumOfSquares+1,w
  6284  048F  00AF               	movwf	_CalculateSumOfSquares$324+1
  6285  0490                     l3278:	
  6286  0490  082E               	movf	_CalculateSumOfSquares$324,w
  6287  0491  00B6               	movwf	CalculateSumOfSquares@GySquare
  6288  0492  082F               	movf	_CalculateSumOfSquares$324+1,w
  6289  0493  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  6290  0494  0D89               	rlf	9,f
  6291  0495  3B89               	subwfb	9,f
  6292  0496  0989               	comf	9,f
  6293  0497  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  6294  0498  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  6295                           
  6296                           ;blueGyro.c: 444: GzSquare = (unsigned long) (CurrentData.Gz<0 ? (-CurrentData.Gz) : Cur
      +                          rentData.Gz);
  6297  0499  0021               	movlb	1	; select bank1
  6298  049A  1BD7               	btfsc	((_CurrentData+1)^(0+128)+6),7
  6299  049B  2CA4               	goto	l3284
  6300  049C  0857               	movf	((_CurrentData+1)^(0+128)+6),w
  6301  049D  0020               	movlb	0	; select bank0
  6302  049E  00B1               	movwf	_CalculateSumOfSquares$325+1
  6303  049F  0021               	movlb	1	; select bank1
  6304  04A0  0856               	movf	(_CurrentData^(0+128)+6),w
  6305  04A1  0020               	movlb	0	; select bank0
  6306  04A2  00B0               	movwf	_CalculateSumOfSquares$325
  6307  04A3  2CB3               	goto	l3286
  6308  04A4                     l3284:	
  6309  04A4  0021               	movlb	1	; select bank1
  6310  04A5  0956               	comf	(_CurrentData^(0+128)+6),w
  6311  04A6  0020               	movlb	0	; select bank0
  6312  04A7  00A4               	movwf	??_CalculateSumOfSquares
  6313  04A8  0021               	movlb	1	; select bank1
  6314  04A9  0957               	comf	((_CurrentData+1)^(0+128)+6),w
  6315  04AA  0020               	movlb	0	; select bank0
  6316  04AB  00A5               	movwf	??_CalculateSumOfSquares+1
  6317  04AC  0AA4               	incf	??_CalculateSumOfSquares,f
  6318  04AD  1903               	skipnz
  6319  04AE  0AA5               	incf	??_CalculateSumOfSquares+1,f
  6320  04AF  0824               	movf	??_CalculateSumOfSquares,w
  6321  04B0  00B0               	movwf	_CalculateSumOfSquares$325
  6322  04B1  0825               	movf	??_CalculateSumOfSquares+1,w
  6323  04B2  00B1               	movwf	_CalculateSumOfSquares$325+1
  6324  04B3                     l3286:	
  6325  04B3  0830               	movf	_CalculateSumOfSquares$325,w
  6326  04B4  00BA               	movwf	CalculateSumOfSquares@GzSquare
  6327  04B5  0831               	movf	_CalculateSumOfSquares$325+1,w
  6328  04B6  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  6329  04B7  0D89               	rlf	9,f
  6330  04B8  3B89               	subwfb	9,f
  6331  04B9  0989               	comf	9,f
  6332  04BA  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  6333  04BB  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  6334                           
  6335                           ;blueGyro.c: 448: GxSquare *= GxSquare;
  6336  04BC  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6337  04BD  00F5               	movwf	___lmul@multiplier+3
  6338  04BE  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6339  04BF  00F4               	movwf	___lmul@multiplier+2
  6340  04C0  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6341  04C1  00F3               	movwf	___lmul@multiplier+1
  6342  04C2  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6343  04C3  00F2               	movwf	___lmul@multiplier
  6344  04C4  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6345  04C5  00F9               	movwf	___lmul@multiplicand+3
  6346  04C6  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6347  04C7  00F8               	movwf	___lmul@multiplicand+2
  6348  04C8  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6349  04C9  00F7               	movwf	___lmul@multiplicand+1
  6350  04CA  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6351  04CB  00F6               	movwf	___lmul@multiplicand
  6352  04CC  318B  233A  3184   	fcall	___lmul
  6353  04CF  0875               	movf	?___lmul+3,w
  6354  04D0  0020               	movlb	0	; select bank0
  6355  04D1  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  6356  04D2  0874               	movf	?___lmul+2,w
  6357  04D3  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  6358  04D4  0873               	movf	?___lmul+1,w
  6359  04D5  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  6360  04D6  0872               	movf	?___lmul,w
  6361  04D7  00B2               	movwf	CalculateSumOfSquares@GxSquare
  6362                           
  6363                           ;blueGyro.c: 449: GySquare *= GySquare;
  6364  04D8  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  6365  04D9  00F5               	movwf	___lmul@multiplier+3
  6366  04DA  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  6367  04DB  00F4               	movwf	___lmul@multiplier+2
  6368  04DC  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  6369  04DD  00F3               	movwf	___lmul@multiplier+1
  6370  04DE  0836               	movf	CalculateSumOfSquares@GySquare,w
  6371  04DF  00F2               	movwf	___lmul@multiplier
  6372  04E0  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  6373  04E1  00F9               	movwf	___lmul@multiplicand+3
  6374  04E2  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  6375  04E3  00F8               	movwf	___lmul@multiplicand+2
  6376  04E4  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  6377  04E5  00F7               	movwf	___lmul@multiplicand+1
  6378  04E6  0836               	movf	CalculateSumOfSquares@GySquare,w
  6379  04E7  00F6               	movwf	___lmul@multiplicand
  6380  04E8  318B  233A  3184   	fcall	___lmul
  6381  04EB  0875               	movf	?___lmul+3,w
  6382  04EC  0020               	movlb	0	; select bank0
  6383  04ED  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  6384  04EE  0874               	movf	?___lmul+2,w
  6385  04EF  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  6386  04F0  0873               	movf	?___lmul+1,w
  6387  04F1  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  6388  04F2  0872               	movf	?___lmul,w
  6389  04F3  00B6               	movwf	CalculateSumOfSquares@GySquare
  6390                           
  6391                           ;blueGyro.c: 450: GzSquare *= GzSquare;
  6392  04F4  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6393  04F5  00F5               	movwf	___lmul@multiplier+3
  6394  04F6  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6395  04F7  00F4               	movwf	___lmul@multiplier+2
  6396  04F8  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6397  04F9  00F3               	movwf	___lmul@multiplier+1
  6398  04FA  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6399  04FB  00F2               	movwf	___lmul@multiplier
  6400  04FC  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6401  04FD  00F9               	movwf	___lmul@multiplicand+3
  6402  04FE  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6403  04FF  00F8               	movwf	___lmul@multiplicand+2
  6404  0500  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6405  0501  00F7               	movwf	___lmul@multiplicand+1
  6406  0502  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6407  0503  00F6               	movwf	___lmul@multiplicand
  6408  0504  318B  233A  3184   	fcall	___lmul
  6409  0507  0875               	movf	?___lmul+3,w
  6410  0508  0020               	movlb	0	; select bank0
  6411  0509  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  6412  050A  0874               	movf	?___lmul+2,w
  6413  050B  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  6414  050C  0873               	movf	?___lmul+1,w
  6415  050D  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  6416  050E  0872               	movf	?___lmul,w
  6417  050F  00BA               	movwf	CalculateSumOfSquares@GzSquare
  6418                           
  6419                           ;blueGyro.c: 451: CurrentData.SumSquare = GxSquare + GySquare + GzSquare;
  6420  0510  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6421  0511  00A4               	movwf	??_CalculateSumOfSquares
  6422  0512  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6423  0513  00A5               	movwf	??_CalculateSumOfSquares+1
  6424  0514  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6425  0515  00A6               	movwf	??_CalculateSumOfSquares+2
  6426  0516  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6427  0517  00A7               	movwf	??_CalculateSumOfSquares+3
  6428  0518  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6429  0519  0736               	addwf	CalculateSumOfSquares@GySquare,w
  6430  051A  00A8               	movwf	??_CalculateSumOfSquares+4
  6431  051B  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6432  051C  3D37               	addwfc	CalculateSumOfSquares@GySquare+1,w
  6433  051D  00A9               	movwf	??_CalculateSumOfSquares+5
  6434  051E  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6435  051F  3D38               	addwfc	CalculateSumOfSquares@GySquare+2,w
  6436  0520  00AA               	movwf	??_CalculateSumOfSquares+6
  6437  0521  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6438  0522  3D39               	addwfc	CalculateSumOfSquares@GySquare+3,w
  6439  0523  00AB               	movwf	??_CalculateSumOfSquares+7
  6440  0524  0828               	movf	??_CalculateSumOfSquares+4,w
  6441  0525  07A4               	addwf	??_CalculateSumOfSquares,f
  6442  0526  0829               	movf	??_CalculateSumOfSquares+5,w
  6443  0527  3DA5               	addwfc	??_CalculateSumOfSquares+1,f
  6444  0528  082A               	movf	??_CalculateSumOfSquares+6,w
  6445  0529  3DA6               	addwfc	??_CalculateSumOfSquares+2,f
  6446  052A  082B               	movf	??_CalculateSumOfSquares+7,w
  6447  052B  3DA7               	addwfc	??_CalculateSumOfSquares+3,f
  6448  052C  0827               	movf	??_CalculateSumOfSquares+3,w
  6449  052D  0021               	movlb	1	; select bank1
  6450  052E  00E9               	movwf	((_CurrentData+3)^(0+128)+22)
  6451  052F  0020               	movlb	0	; select bank0
  6452  0530  0826               	movf	??_CalculateSumOfSquares+2,w
  6453  0531  0021               	movlb	1	; select bank1
  6454  0532  00E8               	movwf	((_CurrentData+2)^(0+128)+22)
  6455  0533  0020               	movlb	0	; select bank0
  6456  0534  0825               	movf	??_CalculateSumOfSquares+1,w
  6457  0535  0021               	movlb	1	; select bank1
  6458  0536  00E7               	movwf	((_CurrentData+1)^(0+128)+22)
  6459  0537  0020               	movlb	0	; select bank0
  6460  0538  0824               	movf	??_CalculateSumOfSquares,w
  6461  0539  0021               	movlb	1	; select bank1
  6462  053A  00E6               	movwf	(_CurrentData^(0+128)+22)
  6463  053B  0008               	return
  6464  053C                     __end_of_CalculateSumOfSquares:	
  6465                           
  6466                           	psect	text33
  6467  0B3A                     __ptext33:	
  6468 ;; *************** function ___lmul *****************
  6469 ;; Defined at:
  6470 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul32.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  multiplier      4    2[COMMON] unsigned long 
  6473 ;;  multiplicand    4    6[COMMON] unsigned long 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  product         4    0[BANK0 ] unsigned long 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  4    2[COMMON] unsigned long 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6485 ;;      Params:         8       0       0       0
  6486 ;;      Locals:         0       4       0       0
  6487 ;;      Temps:          0       0       0       0
  6488 ;;      Totals:         8       4       0       0
  6489 ;;Total ram usage:       12 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    1
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_printGForce
  6496 ;;		_printGyro
  6497 ;;		_CalculateSumOfSquares
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function ___lmul
  6503  0B3A                     ___lmul:	
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6507  0B3A  3000               	movlw	0
  6508  0B3B  0020               	movlb	0	; select bank0
  6509  0B3C  00A3               	movwf	___lmul@product+3
  6510  0B3D  3000               	movlw	0
  6511  0B3E  00A2               	movwf	___lmul@product+2
  6512  0B3F  3000               	movlw	0
  6513  0B40  00A1               	movwf	___lmul@product+1
  6514  0B41  3000               	movlw	0
  6515  0B42  00A0               	movwf	___lmul@product
  6516  0B43                     l3128:	
  6517  0B43  1C72               	btfss	___lmul@multiplier,0
  6518  0B44  2B4E               	goto	l3132
  6519  0B45  0876               	movf	___lmul@multiplicand,w
  6520  0B46  0020               	movlb	0	; select bank0
  6521  0B47  07A0               	addwf	___lmul@product,f
  6522  0B48  0877               	movf	___lmul@multiplicand+1,w
  6523  0B49  3DA1               	addwfc	___lmul@product+1,f
  6524  0B4A  0878               	movf	___lmul@multiplicand+2,w
  6525  0B4B  3DA2               	addwfc	___lmul@product+2,f
  6526  0B4C  0879               	movf	___lmul@multiplicand+3,w
  6527  0B4D  3DA3               	addwfc	___lmul@product+3,f
  6528  0B4E                     l3132:	
  6529  0B4E  3001               	movlw	1
  6530  0B4F                     u2635:	
  6531  0B4F  35F6               	lslf	___lmul@multiplicand,f
  6532  0B50  0DF7               	rlf	___lmul@multiplicand+1,f
  6533  0B51  0DF8               	rlf	___lmul@multiplicand+2,f
  6534  0B52  0DF9               	rlf	___lmul@multiplicand+3,f
  6535  0B53  0B89               	decfsz	9,f
  6536  0B54  2B4F               	goto	u2635
  6537  0B55  3001               	movlw	1
  6538  0B56                     u2645:	
  6539  0B56  36F5               	lsrf	___lmul@multiplier+3,f
  6540  0B57  0CF4               	rrf	___lmul@multiplier+2,f
  6541  0B58  0CF3               	rrf	___lmul@multiplier+1,f
  6542  0B59  0CF2               	rrf	___lmul@multiplier,f
  6543  0B5A  0B89               	decfsz	9,f
  6544  0B5B  2B56               	goto	u2645
  6545  0B5C  0875               	movf	___lmul@multiplier+3,w
  6546  0B5D  0474               	iorwf	___lmul@multiplier+2,w
  6547  0B5E  0473               	iorwf	___lmul@multiplier+1,w
  6548  0B5F  0472               	iorwf	___lmul@multiplier,w
  6549  0B60  1D03               	skipz
  6550  0B61  2B43               	goto	l3128
  6551  0B62  0020               	movlb	0	; select bank0
  6552  0B63  0823               	movf	___lmul@product+3,w
  6553  0B64  00F5               	movwf	?___lmul+3
  6554  0B65  0822               	movf	___lmul@product+2,w
  6555  0B66  00F4               	movwf	?___lmul+2
  6556  0B67  0821               	movf	___lmul@product+1,w
  6557  0B68  00F3               	movwf	?___lmul+1
  6558  0B69  0820               	movf	___lmul@product,w
  6559  0B6A  00F2               	movwf	?___lmul
  6560  0B6B  0008               	return
  6561  0B6C                     __end_of___lmul:	
  6562                           
  6563                           	psect	text34
  6564  067F                     __ptext34:	
  6565 ;; *************** function _DisplayData *****************
  6566 ;; Defined at:
  6567 ;;		line 536 in file "blueGyro.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6581 ;;      Params:         0       0       0       0
  6582 ;;      Locals:         0       0       0       0
  6583 ;;      Temps:          0       0       0       0
  6584 ;;      Totals:         0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    4
  6588 ;; This function calls:
  6589 ;;		_GetGyroWithOffset
  6590 ;;		_cputs
  6591 ;;		_putHex
  6592 ;; This function is called by:
  6593 ;;		_main
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           
  6598                           ;psect for function _DisplayData
  6599  067F                     _DisplayData:	
  6600                           
  6601                           ;blueGyro.c: 547: putHex(CurrentData.Timer);
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _DisplayData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6605  067F  0021               	movlb	1	; select bank1
  6606  0680  0851               	movf	(_CurrentData+1)^(0+128),w
  6607  0681  0020               	movlb	0	; select bank0
  6608  0682  00A1               	movwf	putHex@value+1
  6609  0683  0021               	movlb	1	; select bank1
  6610  0684  0850               	movf	_CurrentData^(0+128),w
  6611  0685  0020               	movlb	0	; select bank0
  6612  0686  00A0               	movwf	putHex@value
  6613  0687  318A  2290  3186   	fcall	_putHex
  6614                           
  6615                           ;blueGyro.c: 548: putHex(CurrentData.Gx);
  6616  068A  0021               	movlb	1	; select bank1
  6617  068B  0853               	movf	((_CurrentData+1)^(0+128)+2),w
  6618  068C  0020               	movlb	0	; select bank0
  6619  068D  00A1               	movwf	putHex@value+1
  6620  068E  0021               	movlb	1	; select bank1
  6621  068F  0852               	movf	(_CurrentData^(0+128)+2),w
  6622  0690  0020               	movlb	0	; select bank0
  6623  0691  00A0               	movwf	putHex@value
  6624  0692  318A  2290  3186   	fcall	_putHex
  6625                           
  6626                           ;blueGyro.c: 549: putHex(CurrentData.Gy);
  6627  0695  0021               	movlb	1	; select bank1
  6628  0696  0855               	movf	((_CurrentData+1)^(0+128)+4),w
  6629  0697  0020               	movlb	0	; select bank0
  6630  0698  00A1               	movwf	putHex@value+1
  6631  0699  0021               	movlb	1	; select bank1
  6632  069A  0854               	movf	(_CurrentData^(0+128)+4),w
  6633  069B  0020               	movlb	0	; select bank0
  6634  069C  00A0               	movwf	putHex@value
  6635  069D  318A  2290  3186   	fcall	_putHex
  6636                           
  6637                           ;blueGyro.c: 550: putHex(CurrentData.Gz);
  6638  06A0  0021               	movlb	1	; select bank1
  6639  06A1  0857               	movf	((_CurrentData+1)^(0+128)+6),w
  6640  06A2  0020               	movlb	0	; select bank0
  6641  06A3  00A1               	movwf	putHex@value+1
  6642  06A4  0021               	movlb	1	; select bank1
  6643  06A5  0856               	movf	(_CurrentData^(0+128)+6),w
  6644  06A6  0020               	movlb	0	; select bank0
  6645  06A7  00A0               	movwf	putHex@value
  6646  06A8  318A  2290  3186   	fcall	_putHex
  6647                           
  6648                           ;blueGyro.c: 554: putHex(GetGyroWithOffset(CurrentData.Gyrox,Setting.GyroX));
  6649  06AB  0021               	movlb	1	; select bank1
  6650  06AC  085B               	movf	((_CurrentData+1)^(0+128)+10),w
  6651  06AD  00F3               	movwf	GetGyroWithOffset@value+1
  6652  06AE  085A               	movf	(_CurrentData^(0+128)+10),w
  6653  06AF  00F2               	movwf	GetGyroWithOffset@value
  6654  06B0  0020               	movlb	0	; select bank0
  6655  06B1  0868               	movf	_Setting+1,w
  6656  06B2  00F5               	movwf	GetGyroWithOffset@Goffset+1
  6657  06B3  0867               	movf	_Setting,w
  6658  06B4  00F4               	movwf	GetGyroWithOffset@Goffset
  6659  06B5  318D  251E  3186   	fcall	_GetGyroWithOffset
  6660  06B8  0873               	movf	?_GetGyroWithOffset+1,w
  6661  06B9  0020               	movlb	0	; select bank0
  6662  06BA  00A1               	movwf	putHex@value+1
  6663  06BB  0872               	movf	?_GetGyroWithOffset,w
  6664  06BC  00A0               	movwf	putHex@value
  6665  06BD  318A  2290  3186   	fcall	_putHex
  6666                           
  6667                           ;blueGyro.c: 555: putHex(GetGyroWithOffset(CurrentData.Gyroy,Setting.GyroY));
  6668  06C0  0021               	movlb	1	; select bank1
  6669  06C1  085D               	movf	((_CurrentData+1)^(0+128)+12),w
  6670  06C2  00F3               	movwf	GetGyroWithOffset@value+1
  6671  06C3  085C               	movf	(_CurrentData^(0+128)+12),w
  6672  06C4  00F2               	movwf	GetGyroWithOffset@value
  6673  06C5  0020               	movlb	0	; select bank0
  6674  06C6  086A               	movf	_Setting+3,w
  6675  06C7  00F5               	movwf	GetGyroWithOffset@Goffset+1
  6676  06C8  0869               	movf	_Setting+2,w
  6677  06C9  00F4               	movwf	GetGyroWithOffset@Goffset
  6678  06CA  318D  251E  3186   	fcall	_GetGyroWithOffset
  6679  06CD  0873               	movf	?_GetGyroWithOffset+1,w
  6680  06CE  0020               	movlb	0	; select bank0
  6681  06CF  00A1               	movwf	putHex@value+1
  6682  06D0  0872               	movf	?_GetGyroWithOffset,w
  6683  06D1  00A0               	movwf	putHex@value
  6684  06D2  318A  2290  3186   	fcall	_putHex
  6685                           
  6686                           ;blueGyro.c: 556: putHex(GetGyroWithOffset(CurrentData.Gyroz,Setting.GyroZ));
  6687  06D5  0021               	movlb	1	; select bank1
  6688  06D6  085F               	movf	((_CurrentData+1)^(0+128)+14),w
  6689  06D7  00F3               	movwf	GetGyroWithOffset@value+1
  6690  06D8  085E               	movf	(_CurrentData^(0+128)+14),w
  6691  06D9  00F2               	movwf	GetGyroWithOffset@value
  6692  06DA  0020               	movlb	0	; select bank0
  6693  06DB  086C               	movf	_Setting+5,w
  6694  06DC  00F5               	movwf	GetGyroWithOffset@Goffset+1
  6695  06DD  086B               	movf	_Setting+4,w
  6696  06DE  00F4               	movwf	GetGyroWithOffset@Goffset
  6697  06DF  318D  251E  3186   	fcall	_GetGyroWithOffset
  6698  06E2  0873               	movf	?_GetGyroWithOffset+1,w
  6699  06E3  0020               	movlb	0	; select bank0
  6700  06E4  00A1               	movwf	putHex@value+1
  6701  06E5  0872               	movf	?_GetGyroWithOffset,w
  6702  06E6  00A0               	movwf	putHex@value
  6703  06E7  318A  2290  3186   	fcall	_putHex
  6704                           
  6705                           ;blueGyro.c: 559: putHex(CurrentData.MagX);
  6706  06EA  0021               	movlb	1	; select bank1
  6707  06EB  0861               	movf	((_CurrentData+1)^(0+128)+16),w
  6708  06EC  0020               	movlb	0	; select bank0
  6709  06ED  00A1               	movwf	putHex@value+1
  6710  06EE  0021               	movlb	1	; select bank1
  6711  06EF  0860               	movf	(_CurrentData^(0+128)+16),w
  6712  06F0  0020               	movlb	0	; select bank0
  6713  06F1  00A0               	movwf	putHex@value
  6714  06F2  318A  2290  3186   	fcall	_putHex
  6715                           
  6716                           ;blueGyro.c: 560: putHex(CurrentData.MagY);
  6717  06F5  0021               	movlb	1	; select bank1
  6718  06F6  0863               	movf	((_CurrentData+1)^(0+128)+18),w
  6719  06F7  0020               	movlb	0	; select bank0
  6720  06F8  00A1               	movwf	putHex@value+1
  6721  06F9  0021               	movlb	1	; select bank1
  6722  06FA  0862               	movf	(_CurrentData^(0+128)+18),w
  6723  06FB  0020               	movlb	0	; select bank0
  6724  06FC  00A0               	movwf	putHex@value
  6725  06FD  318A  2290  3186   	fcall	_putHex
  6726                           
  6727                           ;blueGyro.c: 561: putHex(CurrentData.MagZ);
  6728  0700  0021               	movlb	1	; select bank1
  6729  0701  0865               	movf	((_CurrentData+1)^(0+128)+20),w
  6730  0702  0020               	movlb	0	; select bank0
  6731  0703  00A1               	movwf	putHex@value+1
  6732  0704  0021               	movlb	1	; select bank1
  6733  0705  0864               	movf	(_CurrentData^(0+128)+20),w
  6734  0706  0020               	movlb	0	; select bank0
  6735  0707  00A0               	movwf	putHex@value
  6736  0708  318A  2290  3186   	fcall	_putHex
  6737                           
  6738                           ;blueGyro.c: 563: cputs("\r\n");
  6739  070B  3087               	movlw	low ((STR_15+10)| (0+32768))
  6740  070C  00F5               	movwf	cputs@s
  6741  070D  3085               	movlw	high ((STR_15+10)| (0+32768))
  6742  070E  00F6               	movwf	cputs@s+1
  6743  070F  3189  2115         	fcall	_cputs
  6744  0711  0008               	return
  6745  0712                     __end_of_DisplayData:	
  6746                           
  6747                           	psect	text35
  6748  0A90                     __ptext35:	
  6749 ;; *************** function _putHex *****************
  6750 ;; Defined at:
  6751 ;;		line 527 in file "blueGyro.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  value           2    0[BANK0 ] unsigned short 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6765 ;;      Params:         0       2       0       0
  6766 ;;      Locals:         0       0       0       0
  6767 ;;      Temps:          0       2       0       0
  6768 ;;      Totals:         0       4       0       0
  6769 ;;Total ram usage:        4 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    3
  6772 ;; This function calls:
  6773 ;;		_putHexNibble
  6774 ;; This function is called by:
  6775 ;;		_DisplayData
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           
  6780                           ;psect for function _putHex
  6781  0A90                     _putHex:	
  6782                           
  6783                           ;blueGyro.c: 530: putHexNibble(value >> 12);
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in _putHex: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6787  0A90  0020               	movlb	0	; select bank0
  6788  0A91  0821               	movf	putHex@value+1,w
  6789  0A92  00A3               	movwf	??_putHex+1
  6790  0A93  0820               	movf	putHex@value,w
  6791  0A94  00A2               	movwf	??_putHex
  6792  0A95  0E23               	swapf	??_putHex+1,w
  6793  0A96  390F               	andlw	15
  6794  0A97  00A2               	movwf	??_putHex
  6795  0A98  01A3               	clrf	??_putHex+1
  6796  0A99  0822               	movf	??_putHex,w
  6797  0A9A  3188  20EF  318A   	fcall	_putHexNibble
  6798                           
  6799                           ;blueGyro.c: 531: putHexNibble(value >> 8);
  6800  0A9D  0020               	movlb	0	; select bank0
  6801  0A9E  0821               	movf	putHex@value+1,w
  6802  0A9F  3188  20EF  318A   	fcall	_putHexNibble
  6803                           
  6804                           ;blueGyro.c: 532: putHexNibble(value >> 4);
  6805  0AA2  0020               	movlb	0	; select bank0
  6806  0AA3  0821               	movf	putHex@value+1,w
  6807  0AA4  00A3               	movwf	??_putHex+1
  6808  0AA5  0820               	movf	putHex@value,w
  6809  0AA6  00A2               	movwf	??_putHex
  6810  0AA7  3004               	movlw	4
  6811  0AA8                     u2865:	
  6812  0AA8  36A3               	lsrf	??_putHex+1,f
  6813  0AA9  0CA2               	rrf	??_putHex,f
  6814  0AAA  0B89               	decfsz	9,f
  6815  0AAB  2AA8               	goto	u2865
  6816  0AAC  0822               	movf	??_putHex,w
  6817  0AAD  3188  20EF  318A   	fcall	_putHexNibble
  6818                           
  6819                           ;blueGyro.c: 533: putHexNibble(value);
  6820  0AB0  0020               	movlb	0	; select bank0
  6821  0AB1  0820               	movf	putHex@value,w
  6822  0AB2  3188  20EF         	fcall	_putHexNibble
  6823  0AB4  0008               	return
  6824  0AB5                     __end_of_putHex:	
  6825                           
  6826                           	psect	text36
  6827  08EF                     __ptext36:	
  6828 ;; *************** function _putHexNibble *****************
  6829 ;; Defined at:
  6830 ;;		line 514 in file "blueGyro.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  value           1    wreg     unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  value           1    6[COMMON] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;		None               void
  6837 ;; Registers used:
  6838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6844 ;;      Params:         0       0       0       0
  6845 ;;      Locals:         1       0       0       0
  6846 ;;      Temps:          1       0       0       0
  6847 ;;      Totals:         2       0       0       0
  6848 ;;Total ram usage:        2 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    2
  6851 ;; This function calls:
  6852 ;;		_putch
  6853 ;; This function is called by:
  6854 ;;		_putHex
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           
  6859                           ;psect for function _putHexNibble
  6860  08EF                     _putHexNibble:	
  6861                           
  6862                           ;incstack = 0
  6863                           ; Regs used in _putHexNibble: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6864                           ;putHexNibble@value stored from wreg
  6865  08EF  00F6               	movwf	putHexNibble@value
  6866                           
  6867                           ;blueGyro.c: 516: value &= 0xf;
  6868  08F0  300F               	movlw	15
  6869  08F1  00F5               	movwf	??_putHexNibble
  6870  08F2  0875               	movf	??_putHexNibble,w
  6871  08F3  05F6               	andwf	putHexNibble@value,f
  6872                           
  6873                           ;blueGyro.c: 517: if(value > 9)
  6874  08F4  300A               	movlw	10
  6875  08F5  0276               	subwf	putHexNibble@value,w
  6876  08F6  1C03               	skipc
  6877  08F7  28FA               	goto	l3122
  6878                           
  6879                           ;blueGyro.c: 518: value += 'A' - 10;
  6880  08F8  3037               	movlw	55
  6881  08F9  28FB               	goto	L5
  6882  08FA                     l3122:	
  6883                           
  6884                           ;blueGyro.c: 519: else
  6885                           ;blueGyro.c: 520: value += '0';
  6886  08FA  3030               	movlw	48
  6887  08FB                     L5:	
  6888  08FB  00F5               	movwf	??_putHexNibble
  6889  08FC  0875               	movf	??_putHexNibble,w
  6890  08FD  07F6               	addwf	putHexNibble@value,f
  6891                           
  6892                           ;blueGyro.c: 521: putch(value);
  6893  08FE  0876               	movf	putHexNibble@value,w
  6894  08FF  318A  2206         	fcall	_putch
  6895  0901  0008               	return
  6896  0902                     __end_of_putHexNibble:	
  6897                           
  6898                           	psect	text37
  6899  0915                     __ptext37:	
  6900 ;; *************** function _cputs *****************
  6901 ;; Defined at:
  6902 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/cputs.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  s               2    5[COMMON] PTR const unsigned char 
  6905 ;;		 -> STR_17(8), STR_16(7), STR_15(13), STR_14(4), 
  6906 ;;		 -> STR_13(4), STR_12(7), STR_11(17), STR_10(3), 
  6907 ;;		 -> STR_9(3), STR_8(8), STR_7(9), STR_6(5), 
  6908 ;;		 -> STR_5(6), STR_4(8), STR_3(4), STR_2(4), 
  6909 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6910 ;;		 -> STR_1(13), 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;		None               void
  6915 ;; Registers used:
  6916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6922 ;;      Params:         2       0       0       0
  6923 ;;      Locals:         0       0       0       0
  6924 ;;      Temps:          1       0       0       0
  6925 ;;      Totals:         3       0       0       0
  6926 ;;Total ram usage:        3 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    2
  6929 ;; This function calls:
  6930 ;;		_putch
  6931 ;; This function is called by:
  6932 ;;		_MPU6050_Test_I2C
  6933 ;;		_printValue
  6934 ;;		_printCentiValue
  6935 ;;		_printDeciValue
  6936 ;;		_printUShort
  6937 ;;		_DisplayInfo
  6938 ;;		_DisplayData
  6939 ;;		_printVersion
  6940 ;;		_printVoltage
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           
  6946                           ;psect for function _cputs
  6947  0915                     _cputs:	
  6948  0915                     l2992:	
  6949                           ;incstack = 0
  6950                           ; Regs used in _cputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6951                           
  6952  0915  0875               	movf	cputs@s,w
  6953  0916  0084               	movwf	4
  6954  0917  0876               	movf	cputs@s+1,w
  6955  0918  0085               	movwf	5
  6956  0919  0012               	moviw fsr0++
  6957  091A  1903               	btfsc	3,2
  6958  091B  0008               	return
  6959  091C  0875               	movf	cputs@s,w
  6960  091D  0084               	movwf	4
  6961  091E  0876               	movf	cputs@s+1,w
  6962  091F  0085               	movwf	5
  6963  0920  0800               	movf	0,w	;code access
  6964  0921  318A  2206  3189   	fcall	_putch
  6965  0924  3001               	movlw	1
  6966  0925  07F5               	addwf	cputs@s,f
  6967  0926  3000               	movlw	0
  6968  0927  3DF6               	addwfc	cputs@s+1,f
  6969  0928  2915               	goto	l2992
  6970  0929                     __end_of_cputs:	
  6971                           
  6972                           	psect	text38
  6973  0A06                     __ptext38:	
  6974 ;; *************** function _putch *****************
  6975 ;; Defined at:
  6976 ;;		line 305 in file "blueGyro.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  char_out        1    wreg     unsigned char 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  char_out        1    3[COMMON] unsigned char 
  6981 ;;  temp            1    4[COMMON] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;		None               void
  6984 ;; Registers used:
  6985 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6991 ;;      Params:         0       0       0       0
  6992 ;;      Locals:         2       0       0       0
  6993 ;;      Temps:          1       0       0       0
  6994 ;;      Totals:         3       0       0       0
  6995 ;;Total ram usage:        3 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_printCentiValue
  7002 ;;		_printDeciValue
  7003 ;;		_putHexNibble
  7004 ;;		_cputs
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function _putch
  7010  0A06                     _putch:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0]
  7014                           ;putch@char_out stored from wreg
  7015  0A06  00F3               	movwf	putch@char_out
  7016                           
  7017                           ;blueGyro.c: 307: unsigned char temp;
  7018                           ;blueGyro.c: 310: temp = InFiFo + 1;
  7019  0A07  0020               	movlb	0	; select bank0
  7020  0A08  0864               	movf	_InFiFo,w	;volatile
  7021  0A09  3E01               	addlw	1
  7022  0A0A  00F2               	movwf	??_putch
  7023  0A0B  0872               	movf	??_putch,w
  7024  0A0C  00F4               	movwf	putch@temp
  7025                           
  7026                           ;blueGyro.c: 311: if(temp >= 32)
  7027  0A0D  3020               	movlw	32
  7028  0A0E  0274               	subwf	putch@temp,w
  7029  0A0F  1803               	btfsc	3,0
  7030                           
  7031                           ;blueGyro.c: 312: temp = 0;
  7032  0A10  01F4               	clrf	putch@temp
  7033  0A11                     l2934:	
  7034                           ;blueGyro.c: 315: while(temp == OutFiFo);
  7035                           
  7036  0A11  0874               	movf	putch@temp,w
  7037  0A12  0666               	xorwf	_OutFiFo,w	;volatile
  7038  0A13  1903               	skipnz
  7039  0A14  2A11               	goto	l2934
  7040                           
  7041                           ;blueGyro.c: 318: SerialBuffer[InFiFo]=char_out;
  7042  0A15  0873               	movf	putch@char_out,w
  7043  0A16  00F2               	movwf	??_putch
  7044  0A17  0864               	movf	_InFiFo,w
  7045  0A18  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  7046  0A19  0086               	movwf	6
  7047  0A1A  0187               	clrf	7
  7048  0A1B  0872               	movf	??_putch,w
  7049  0A1C  0081               	movwf	1
  7050                           
  7051                           ;blueGyro.c: 320: InFiFo= temp;
  7052  0A1D  0874               	movf	putch@temp,w
  7053  0A1E  00F2               	movwf	??_putch
  7054  0A1F  0872               	movf	??_putch,w
  7055  0A20  00E4               	movwf	_InFiFo	;volatile
  7056                           
  7057                           ;blueGyro.c: 322: TXIE=1;
  7058  0A21  0021               	movlb	1	; select bank1
  7059  0A22  1611               	bsf	17,4	;volatile
  7060  0A23  0008               	return
  7061  0A24                     __end_of_putch:	
  7062                           
  7063                           	psect	text39
  7064  0D1E                     __ptext39:	
  7065 ;; *************** function _GetGyroWithOffset *****************
  7066 ;; Defined at:
  7067 ;;		line 222 in file "blueGyro.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  value           2    2[COMMON] short 
  7070 ;;  Goffset         2    4[COMMON] short 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  _temp           2    8[COMMON] short 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2    2[COMMON] short 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7082 ;;      Params:         4       0       0       0
  7083 ;;      Locals:         2       0       0       0
  7084 ;;      Temps:          2       0       0       0
  7085 ;;      Totals:         8       0       0       0
  7086 ;;Total ram usage:        8 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    1
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_DisplayInfo
  7093 ;;		_DisplayData
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function _GetGyroWithOffset
  7099  0D1E                     _GetGyroWithOffset:	
  7100                           
  7101                           ;blueGyro.c: 224: short _temp;
  7102                           ;blueGyro.c: 226: if(value > 0)
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in _GetGyroWithOffset: [wreg+status,2+status,0]
  7106  0D1E  0873               	movf	GetGyroWithOffset@value+1,w
  7107  0D1F  3A80               	xorlw	128
  7108  0D20  00F6               	movwf	??_GetGyroWithOffset
  7109  0D21  3080               	movlw	128
  7110  0D22  0276               	subwf	??_GetGyroWithOffset,w
  7111  0D23  1D03               	skipz
  7112  0D24  2D27               	goto	u2735
  7113  0D25  3001               	movlw	1
  7114  0D26  0272               	subwf	GetGyroWithOffset@value,w
  7115  0D27                     u2735:	
  7116  0D27  1C03               	skipc
  7117  0D28  2D42               	goto	l3222
  7118                           
  7119                           ;blueGyro.c: 227: {
  7120                           ;blueGyro.c: 228: if(Goffset <0)
  7121  0D29  1FF5               	btfss	GetGyroWithOffset@Goffset+1,7
  7122  0D2A  2D64               	goto	l3232
  7123                           
  7124                           ;blueGyro.c: 229: {
  7125                           ;blueGyro.c: 230: _temp = 32767 +Goffset;
  7126  0D2B  0874               	movf	GetGyroWithOffset@Goffset,w
  7127  0D2C  3EFF               	addlw	255
  7128  0D2D  00F8               	movwf	GetGyroWithOffset@_temp
  7129  0D2E  307F               	movlw	127
  7130  0D2F  3D75               	addwfc	GetGyroWithOffset@Goffset+1,w
  7131  0D30  00F9               	movwf	GetGyroWithOffset@_temp+1
  7132                           
  7133                           ;blueGyro.c: 231: if(value >= _temp)
  7134  0D31  0873               	movf	GetGyroWithOffset@value+1,w
  7135  0D32  3A80               	xorlw	128
  7136  0D33  00F6               	movwf	??_GetGyroWithOffset
  7137  0D34  0879               	movf	GetGyroWithOffset@_temp+1,w
  7138  0D35  3A80               	xorlw	128
  7139  0D36  0276               	subwf	??_GetGyroWithOffset,w
  7140  0D37  1D03               	skipz
  7141  0D38  2D3B               	goto	u2755
  7142  0D39  0878               	movf	GetGyroWithOffset@_temp,w
  7143  0D3A  0272               	subwf	GetGyroWithOffset@value,w
  7144  0D3B                     u2755:	
  7145  0D3B  1C03               	skipc
  7146  0D3C  2D64               	goto	l3232
  7147                           
  7148                           ;blueGyro.c: 232: return 32767;
  7149  0D3D  30FF               	movlw	255
  7150  0D3E  00F2               	movwf	?_GetGyroWithOffset
  7151  0D3F  307F               	movlw	127
  7152  0D40  00F3               	movwf	?_GetGyroWithOffset+1
  7153  0D41  0008               	return
  7154  0D42                     l3222:	
  7155                           ;blueGyro.c: 233: }
  7156                           ;blueGyro.c: 234: }
  7157                           
  7158                           
  7159                           ;blueGyro.c: 235: else
  7160                           ;blueGyro.c: 236: {
  7161                           ;blueGyro.c: 237: if(Goffset >0)
  7162  0D42  0875               	movf	GetGyroWithOffset@Goffset+1,w
  7163  0D43  3A80               	xorlw	128
  7164  0D44  00F6               	movwf	??_GetGyroWithOffset
  7165  0D45  3080               	movlw	128
  7166  0D46  0276               	subwf	??_GetGyroWithOffset,w
  7167  0D47  1D03               	skipz
  7168  0D48  2D4B               	goto	u2765
  7169  0D49  3001               	movlw	1
  7170  0D4A  0274               	subwf	GetGyroWithOffset@Goffset,w
  7171  0D4B                     u2765:	
  7172  0D4B  1C03               	skipc
  7173  0D4C  2D64               	goto	l3232
  7174                           
  7175                           ;blueGyro.c: 238: {
  7176                           ;blueGyro.c: 239: _temp = -32768 + Goffset;
  7177  0D4D  0874               	movf	GetGyroWithOffset@Goffset,w
  7178  0D4E  3E00               	addlw	0
  7179  0D4F  00F8               	movwf	GetGyroWithOffset@_temp
  7180  0D50  3080               	movlw	128
  7181  0D51  3D75               	addwfc	GetGyroWithOffset@Goffset+1,w
  7182  0D52  00F9               	movwf	GetGyroWithOffset@_temp+1
  7183                           
  7184                           ;blueGyro.c: 240: if(value <= _temp)
  7185  0D53  0879               	movf	GetGyroWithOffset@_temp+1,w
  7186  0D54  3A80               	xorlw	128
  7187  0D55  00F6               	movwf	??_GetGyroWithOffset
  7188  0D56  0873               	movf	GetGyroWithOffset@value+1,w
  7189  0D57  3A80               	xorlw	128
  7190  0D58  0276               	subwf	??_GetGyroWithOffset,w
  7191  0D59  1D03               	skipz
  7192  0D5A  2D5D               	goto	u2775
  7193  0D5B  0872               	movf	GetGyroWithOffset@value,w
  7194  0D5C  0278               	subwf	GetGyroWithOffset@_temp,w
  7195  0D5D                     u2775:	
  7196  0D5D  1C03               	skipc
  7197  0D5E  2D64               	goto	l3232
  7198                           
  7199                           ;blueGyro.c: 241: return -32768;
  7200  0D5F  3000               	movlw	0
  7201  0D60  00F2               	movwf	?_GetGyroWithOffset
  7202  0D61  3080               	movlw	128
  7203  0D62  00F3               	movwf	?_GetGyroWithOffset+1
  7204  0D63  0008               	return
  7205  0D64                     l3232:	
  7206                           
  7207                           ;blueGyro.c: 242: }
  7208                           ;blueGyro.c: 243: }
  7209                           ;blueGyro.c: 244: return(value - Goffset);
  7210  0D64  0974               	comf	GetGyroWithOffset@Goffset,w
  7211  0D65  00F6               	movwf	??_GetGyroWithOffset
  7212  0D66  0975               	comf	GetGyroWithOffset@Goffset+1,w
  7213  0D67  00F7               	movwf	??_GetGyroWithOffset+1
  7214  0D68  0AF6               	incf	??_GetGyroWithOffset,f
  7215  0D69  1903               	skipnz
  7216  0D6A  0AF7               	incf	??_GetGyroWithOffset+1,f
  7217  0D6B  0872               	movf	GetGyroWithOffset@value,w
  7218  0D6C  0776               	addwf	??_GetGyroWithOffset,w
  7219  0D6D  00F2               	movwf	?_GetGyroWithOffset
  7220  0D6E  0873               	movf	GetGyroWithOffset@value+1,w
  7221  0D6F  3D77               	addwfc	??_GetGyroWithOffset+1,w
  7222  0D70  00F3               	movwf	?_GetGyroWithOffset+1
  7223  0D71  0008               	return
  7224  0D72                     __end_of_GetGyroWithOffset:	
  7225                           
  7226                           	psect	text40
  7227  0BA0                     __ptext40:	
  7228 ;; *************** function _AT24CM02_WriteBlock *****************
  7229 ;; Defined at:
  7230 ;;		line 27 in file "AT24CM02.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  block           2    6[BANK0 ] short 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;		None               void
  7237 ;; Registers used:
  7238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7244 ;;      Params:         0       2       0       0
  7245 ;;      Locals:         0       0       0       0
  7246 ;;      Temps:          0       4       0       0
  7247 ;;      Totals:         0       6       0       0
  7248 ;;Total ram usage:        6 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    5
  7251 ;; This function calls:
  7252 ;;		_AT24CM02_GetAddress
  7253 ;;		_LDRAMWriteI2C
  7254 ;; This function is called by:
  7255 ;;		_main
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function _AT24CM02_WriteBlock
  7261  0BA0                     _AT24CM02_WriteBlock:	
  7262                           
  7263                           ;AT24CM02.c: 29: if(block >= 8192) return;
  7264                           
  7265                           ;incstack = 0
  7266                           ; Regs used in _AT24CM02_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7267  0BA0  0020               	movlb	0	; select bank0
  7268  0BA1  0827               	movf	AT24CM02_WriteBlock@block+1,w
  7269  0BA2  3A80               	xorlw	128
  7270  0BA3  00A8               	movwf	??_AT24CM02_WriteBlock
  7271  0BA4  30A0               	movlw	160
  7272  0BA5  0228               	subwf	??_AT24CM02_WriteBlock,w
  7273  0BA6  1D03               	skipz
  7274  0BA7  2BAA               	goto	u3025
  7275  0BA8  3000               	movlw	0
  7276  0BA9  0226               	subwf	AT24CM02_WriteBlock@block,w
  7277  0BAA                     u3025:	
  7278  0BAA  1803               	btfsc	3,0
  7279  0BAB  0008               	return
  7280                           
  7281                           ;AT24CM02.c: 30: CurrentData.BlockID= AT24CM02_BlockID;
  7282  0BAC  0020               	movlb	0	; select bank0
  7283  0BAD  085C               	movf	_AT24CM02_BlockID+3,w
  7284  0BAE  0021               	movlb	1	; select bank1
  7285  0BAF  00ED               	movwf	((_CurrentData+3)^(0+128)+26)
  7286  0BB0  0020               	movlb	0	; select bank0
  7287  0BB1  085B               	movf	_AT24CM02_BlockID+2,w
  7288  0BB2  0021               	movlb	1	; select bank1
  7289  0BB3  00EC               	movwf	((_CurrentData+2)^(0+128)+26)
  7290  0BB4  0020               	movlb	0	; select bank0
  7291  0BB5  085A               	movf	_AT24CM02_BlockID+1,w
  7292  0BB6  0021               	movlb	1	; select bank1
  7293  0BB7  00EB               	movwf	((_CurrentData+1)^(0+128)+26)
  7294  0BB8  0020               	movlb	0	; select bank0
  7295  0BB9  0859               	movf	_AT24CM02_BlockID,w
  7296  0BBA  0021               	movlb	1	; select bank1
  7297  0BBB  00EA               	movwf	(_CurrentData^(0+128)+26)
  7298                           
  7299                           ;AT24CM02.c: 31: AT24CM02_GetAddress(block);
  7300  0BBC  0020               	movlb	0	; select bank0
  7301  0BBD  0827               	movf	AT24CM02_WriteBlock@block+1,w
  7302  0BBE  00F3               	movwf	AT24CM02_GetAddress@block+1
  7303  0BBF  0826               	movf	AT24CM02_WriteBlock@block,w
  7304  0BC0  00F2               	movwf	AT24CM02_GetAddress@block
  7305  0BC1  318B  230A  318B   	fcall	_AT24CM02_GetAddress
  7306                           
  7307                           ;AT24CM02.c: 32: LDRAMWriteI2C(AT24CM02_A16A17,AT24CM02_A8A15,AT24CM02_A0A7,(unsigned ch
      +                          ar *)&CurrentData,32);
  7308  0BC4  0020               	movlb	0	; select bank0
  7309  0BC5  0863               	movf	_AT24CM02_A8A15,w
  7310  0BC6  00A8               	movwf	??_AT24CM02_WriteBlock
  7311  0BC7  0828               	movf	??_AT24CM02_WriteBlock,w
  7312  0BC8  00A0               	movwf	LDRAMWriteI2C@HighAddress
  7313  0BC9  0861               	movf	_AT24CM02_A0A7,w
  7314  0BCA  00A9               	movwf	??_AT24CM02_WriteBlock+1
  7315  0BCB  0829               	movf	??_AT24CM02_WriteBlock+1,w
  7316  0BCC  00A1               	movwf	LDRAMWriteI2C@LowAddress
  7317  0BCD  30D0               	movlw	(low (_CurrentData| 0))& (0+255)
  7318  0BCE  00AA               	movwf	??_AT24CM02_WriteBlock+2
  7319  0BCF  082A               	movf	??_AT24CM02_WriteBlock+2,w
  7320  0BD0  00A2               	movwf	LDRAMWriteI2C@Data
  7321  0BD1  3020               	movlw	32
  7322  0BD2  00AB               	movwf	??_AT24CM02_WriteBlock+3
  7323  0BD3  082B               	movf	??_AT24CM02_WriteBlock+3,w
  7324  0BD4  00A3               	movwf	LDRAMWriteI2C@Length
  7325  0BD5  0862               	movf	_AT24CM02_A16A17,w
  7326  0BD6  318A  226B         	fcall	_LDRAMWriteI2C
  7327  0BD8  0008               	return
  7328  0BD9                     __end_of_AT24CM02_WriteBlock:	
  7329                           
  7330                           	psect	text41
  7331  0A6B                     __ptext41:	
  7332 ;; *************** function _LDRAMWriteI2C *****************
  7333 ;; Defined at:
  7334 ;;		line 158 in file "i2cMaster.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  7337 ;;  HighAddress     1    0[BANK0 ] unsigned char 
  7338 ;;  LowAddress      1    1[BANK0 ] unsigned char 
  7339 ;;  Data            1    2[BANK0 ] PTR unsigned char 
  7340 ;;		 -> CurrentData(32), 
  7341 ;;  Length          1    3[BANK0 ] unsigned char 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  i2cSlaveAddr    1    9[COMMON] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;		None               void
  7346 ;; Registers used:
  7347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7353 ;;      Params:         0       4       0       0
  7354 ;;      Locals:         1       0       0       0
  7355 ;;      Temps:          0       2       0       0
  7356 ;;      Totals:         1       6       0       0
  7357 ;;Total ram usage:        7 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    4
  7360 ;; This function calls:
  7361 ;;		_LDRAMSetAddress
  7362 ;;		_i2c_Stop
  7363 ;;		_i2c_Write
  7364 ;; This function is called by:
  7365 ;;		_AT24CM02_WriteBlock
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           
  7370                           ;psect for function _LDRAMWriteI2C
  7371  0A6B                     _LDRAMWriteI2C:	
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _LDRAMWriteI2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7375                           ;LDRAMWriteI2C@i2cSlaveAddress stored from wreg
  7376  0A6B  00F9               	movwf	LDRAMWriteI2C@i2cSlaveAddress
  7377                           
  7378                           ;i2cMaster.c: 160: LDRAMSetAddress(i2cSlaveAddress, HighAddress,LowAddress);
  7379  0A6C  0020               	movlb	0	; select bank0
  7380  0A6D  0820               	movf	LDRAMWriteI2C@HighAddress,w
  7381  0A6E  00A4               	movwf	??_LDRAMWriteI2C
  7382  0A6F  0824               	movf	??_LDRAMWriteI2C,w
  7383  0A70  00F6               	movwf	LDRAMSetAddress@HighAddress
  7384  0A71  0821               	movf	LDRAMWriteI2C@LowAddress,w
  7385  0A72  00A5               	movwf	??_LDRAMWriteI2C+1
  7386  0A73  0825               	movf	??_LDRAMWriteI2C+1,w
  7387  0A74  00F7               	movwf	LDRAMSetAddress@LowAddress
  7388  0A75  0879               	movf	LDRAMWriteI2C@i2cSlaveAddress,w
  7389  0A76  3188  20DE  318A   	fcall	_LDRAMSetAddress
  7390  0A79                     l3168:	
  7391                           ;i2cMaster.c: 161: while(Length-- >0)
  7392                           
  7393  0A79  3001               	movlw	1
  7394  0A7A  0020               	movlb	0	; select bank0
  7395  0A7B  02A3               	subwf	LDRAMWriteI2C@Length,f
  7396  0A7C  0A23               	incf	LDRAMWriteI2C@Length,w
  7397  0A7D  1903               	btfsc	3,2
  7398  0A7E  2A8D               	goto	l3170
  7399                           
  7400                           ;i2cMaster.c: 162: i2c_Write(*(Data++));
  7401  0A7F  0020               	movlb	0	; select bank0
  7402  0A80  0822               	movf	LDRAMWriteI2C@Data,w
  7403  0A81  0086               	movwf	6
  7404  0A82  0187               	clrf	7
  7405  0A83  0801               	movf	1,w
  7406  0A84  3188  2091  318A   	fcall	_i2c_Write
  7407  0A87  3001               	movlw	1
  7408  0A88  0020               	movlb	0	; select bank0
  7409  0A89  00A4               	movwf	??_LDRAMWriteI2C
  7410  0A8A  0824               	movf	??_LDRAMWriteI2C,w
  7411  0A8B  07A2               	addwf	LDRAMWriteI2C@Data,f
  7412  0A8C  2A79               	goto	l3168
  7413  0A8D                     l3170:	
  7414                           
  7415                           ;i2cMaster.c: 163: i2c_Stop();
  7416  0A8D  3188  2086         	fcall	_i2c_Stop
  7417  0A8F  0008               	return
  7418  0A90                     __end_of_LDRAMWriteI2C:	
  7419                           
  7420                           	psect	text42
  7421  0AB5                     __ptext42:	
  7422 ;; *************** function _AT24CM02_ReadBlock *****************
  7423 ;; Defined at:
  7424 ;;		line 36 in file "AT24CM02.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  block           2    6[BANK0 ] short 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;		None               void
  7431 ;; Registers used:
  7432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7438 ;;      Params:         0       2       0       0
  7439 ;;      Locals:         0       0       0       0
  7440 ;;      Temps:          0       4       0       0
  7441 ;;      Totals:         0       6       0       0
  7442 ;;Total ram usage:        6 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    5
  7445 ;; This function calls:
  7446 ;;		_AT24CM02_GetAddress
  7447 ;;		_LDRAMReadI2C
  7448 ;; This function is called by:
  7449 ;;		_main
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           
  7454                           ;psect for function _AT24CM02_ReadBlock
  7455  0AB5                     _AT24CM02_ReadBlock:	
  7456                           
  7457                           ;AT24CM02.c: 38: if(block >= 8192) return;
  7458                           
  7459                           ;incstack = 0
  7460                           ; Regs used in _AT24CM02_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7461  0AB5  0020               	movlb	0	; select bank0
  7462  0AB6  0827               	movf	AT24CM02_ReadBlock@block+1,w
  7463  0AB7  3A80               	xorlw	128
  7464  0AB8  00A8               	movwf	??_AT24CM02_ReadBlock
  7465  0AB9  30A0               	movlw	160
  7466  0ABA  0228               	subwf	??_AT24CM02_ReadBlock,w
  7467  0ABB  1D03               	skipz
  7468  0ABC  2ABF               	goto	u3015
  7469  0ABD  3000               	movlw	0
  7470  0ABE  0226               	subwf	AT24CM02_ReadBlock@block,w
  7471  0ABF                     u3015:	
  7472  0ABF  1803               	btfsc	3,0
  7473  0AC0  0008               	return
  7474                           
  7475                           ;AT24CM02.c: 39: AT24CM02_GetAddress(block);
  7476  0AC1  0020               	movlb	0	; select bank0
  7477  0AC2  0827               	movf	AT24CM02_ReadBlock@block+1,w
  7478  0AC3  00F3               	movwf	AT24CM02_GetAddress@block+1
  7479  0AC4  0826               	movf	AT24CM02_ReadBlock@block,w
  7480  0AC5  00F2               	movwf	AT24CM02_GetAddress@block
  7481  0AC6  318B  230A  318A   	fcall	_AT24CM02_GetAddress
  7482                           
  7483                           ;AT24CM02.c: 40: LDRAMReadI2C(AT24CM02_A16A17,AT24CM02_A8A15,AT24CM02_A0A7,(unsigned cha
      +                          r *)&CurrentData,32);
  7484  0AC9  0020               	movlb	0	; select bank0
  7485  0ACA  0863               	movf	_AT24CM02_A8A15,w
  7486  0ACB  00A8               	movwf	??_AT24CM02_ReadBlock
  7487  0ACC  0828               	movf	??_AT24CM02_ReadBlock,w
  7488  0ACD  00A0               	movwf	LDRAMReadI2C@HighAddress
  7489  0ACE  0861               	movf	_AT24CM02_A0A7,w
  7490  0ACF  00A9               	movwf	??_AT24CM02_ReadBlock+1
  7491  0AD0  0829               	movf	??_AT24CM02_ReadBlock+1,w
  7492  0AD1  00A1               	movwf	LDRAMReadI2C@LowAddress
  7493  0AD2  30D0               	movlw	(low (_CurrentData| 0))& (0+255)
  7494  0AD3  00AA               	movwf	??_AT24CM02_ReadBlock+2
  7495  0AD4  082A               	movf	??_AT24CM02_ReadBlock+2,w
  7496  0AD5  00A2               	movwf	LDRAMReadI2C@Data
  7497  0AD6  3020               	movlw	32
  7498  0AD7  00AB               	movwf	??_AT24CM02_ReadBlock+3
  7499  0AD8  082B               	movf	??_AT24CM02_ReadBlock+3,w
  7500  0AD9  00A3               	movwf	LDRAMReadI2C@Length
  7501  0ADA  0862               	movf	_AT24CM02_A16A17,w
  7502  0ADB  318C  2455         	fcall	_LDRAMReadI2C
  7503  0ADD  0008               	return
  7504  0ADE                     __end_of_AT24CM02_ReadBlock:	
  7505                           ;AT24CM02.c: 41: return;
  7506                           
  7507                           
  7508                           	psect	text43
  7509  0C55                     __ptext43:	
  7510 ;; *************** function _LDRAMReadI2C *****************
  7511 ;; Defined at:
  7512 ;;		line 166 in file "i2cMaster.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  7515 ;;  HighAddress     1    0[BANK0 ] unsigned char 
  7516 ;;  LowAddress      1    1[BANK0 ] unsigned char 
  7517 ;;  Data            1    2[BANK0 ] PTR unsigned char 
  7518 ;;		 -> CurrentData(32), 
  7519 ;;  Length          1    3[BANK0 ] unsigned char 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  i2cSlaveAddr    1    9[COMMON] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;		None               void
  7524 ;; Registers used:
  7525 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7531 ;;      Params:         0       4       0       0
  7532 ;;      Locals:         1       0       0       0
  7533 ;;      Temps:          0       2       0       0
  7534 ;;      Totals:         1       6       0       0
  7535 ;;Total ram usage:        7 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    4
  7538 ;; This function calls:
  7539 ;;		_LDRAMSetAddress
  7540 ;;		_i2c_Address
  7541 ;;		_i2c_Read
  7542 ;;		_i2c_Restart
  7543 ;;		_i2c_Stop
  7544 ;; This function is called by:
  7545 ;;		_AT24CM02_ReadBlock
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _LDRAMReadI2C
  7551  0C55                     _LDRAMReadI2C:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _LDRAMReadI2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7555                           ;LDRAMReadI2C@i2cSlaveAddress stored from wreg
  7556  0C55  00F9               	movwf	LDRAMReadI2C@i2cSlaveAddress
  7557                           
  7558                           ;i2cMaster.c: 168: LDRAMSetAddress(i2cSlaveAddress, HighAddress,LowAddress);
  7559  0C56  0020               	movlb	0	; select bank0
  7560  0C57  0820               	movf	LDRAMReadI2C@HighAddress,w
  7561  0C58  00A4               	movwf	??_LDRAMReadI2C
  7562  0C59  0824               	movf	??_LDRAMReadI2C,w
  7563  0C5A  00F6               	movwf	LDRAMSetAddress@HighAddress
  7564  0C5B  0821               	movf	LDRAMReadI2C@LowAddress,w
  7565  0C5C  00A5               	movwf	??_LDRAMReadI2C+1
  7566  0C5D  0825               	movf	??_LDRAMReadI2C+1,w
  7567  0C5E  00F7               	movwf	LDRAMSetAddress@LowAddress
  7568  0C5F  0879               	movf	LDRAMReadI2C@i2cSlaveAddress,w
  7569  0C60  3188  20DE  318C   	fcall	_LDRAMSetAddress
  7570                           
  7571                           ;i2cMaster.c: 169: i2c_Restart();
  7572  0C63  3188  2081  318C   	fcall	_i2c_Restart
  7573                           
  7574                           ;i2cMaster.c: 170: i2c_Address(i2cSlaveAddress, 0x01);
  7575  0C66  01F2               	clrf	i2c_Address@mode
  7576  0C67  0AF2               	incf	i2c_Address@mode,f
  7577  0C68  0879               	movf	LDRAMReadI2C@i2cSlaveAddress,w
  7578  0C69  3188  20C0  318C   	fcall	_i2c_Address
  7579  0C6C                     l3178:	
  7580                           ;i2cMaster.c: 171: while(Length-- > 1)
  7581                           
  7582  0C6C  0020               	movlb	0	; select bank0
  7583  0C6D  0823               	movf	LDRAMReadI2C@Length,w
  7584  0C6E  03A3               	decf	LDRAMReadI2C@Length,f
  7585  0C6F  00A4               	movwf	??_LDRAMReadI2C
  7586  0C70  3002               	movlw	2
  7587  0C71  0224               	subwf	??_LDRAMReadI2C,w
  7588  0C72  1C03               	btfss	3,0
  7589  0C73  2C84               	goto	l3180
  7590                           
  7591                           ;i2cMaster.c: 172: *(Data++) = i2c_Read(1);
  7592  0C74  3001               	movlw	1
  7593  0C75  3189  2195  318C   	fcall	_i2c_Read
  7594  0C78  0020               	movlb	0	; select bank0
  7595  0C79  00A4               	movwf	??_LDRAMReadI2C
  7596  0C7A  0822               	movf	LDRAMReadI2C@Data,w
  7597  0C7B  0086               	movwf	6
  7598  0C7C  0187               	clrf	7
  7599  0C7D  0824               	movf	??_LDRAMReadI2C,w
  7600  0C7E  0081               	movwf	1
  7601  0C7F  3001               	movlw	1
  7602  0C80  00A4               	movwf	??_LDRAMReadI2C
  7603  0C81  0824               	movf	??_LDRAMReadI2C,w
  7604  0C82  07A2               	addwf	LDRAMReadI2C@Data,f
  7605  0C83  2C6C               	goto	l3178
  7606  0C84                     l3180:	
  7607                           
  7608                           ;i2cMaster.c: 173: *(Data++) = i2c_Read(0);
  7609  0C84  3000               	movlw	0
  7610  0C85  3189  2195  318C   	fcall	_i2c_Read
  7611  0C88  0020               	movlb	0	; select bank0
  7612  0C89  00A4               	movwf	??_LDRAMReadI2C
  7613  0C8A  0822               	movf	LDRAMReadI2C@Data,w
  7614  0C8B  0086               	movwf	6
  7615  0C8C  0187               	clrf	7
  7616  0C8D  0824               	movf	??_LDRAMReadI2C,w
  7617  0C8E  0081               	movwf	1
  7618  0C8F  3001               	movlw	1
  7619  0C90  00A4               	movwf	??_LDRAMReadI2C
  7620  0C91  0824               	movf	??_LDRAMReadI2C,w
  7621  0C92  07A2               	addwf	LDRAMReadI2C@Data,f
  7622                           
  7623                           ;i2cMaster.c: 174: i2c_Stop();
  7624  0C93  3188  2086         	fcall	_i2c_Stop
  7625  0C95  0008               	return
  7626  0C96                     __end_of_LDRAMReadI2C:	
  7627                           
  7628                           	psect	text44
  7629  0886                     __ptext44:	
  7630 ;; *************** function _i2c_Stop *****************
  7631 ;; Defined at:
  7632 ;;		line 48 in file "i2cMaster.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;		None               void
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7646 ;;      Params:         0       0       0       0
  7647 ;;      Locals:         0       0       0       0
  7648 ;;      Temps:          0       0       0       0
  7649 ;;      Totals:         0       0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    2
  7653 ;; This function calls:
  7654 ;;		_i2c_Wait
  7655 ;; This function is called by:
  7656 ;;		_LDByteWriteI2C
  7657 ;;		_LDByteReadI2C
  7658 ;;		_LDRAMWriteI2C
  7659 ;;		_LDRAMReadI2C
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           
  7664                           ;psect for function _i2c_Stop
  7665  0886                     _i2c_Stop:	
  7666                           
  7667                           ;i2cMaster.c: 50: i2c_Wait();
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  7671  0886  3188  209F         	fcall	_i2c_Wait
  7672                           
  7673                           ;i2cMaster.c: 51: PEN=1;
  7674  0888  0024               	movlb	4	; select bank4
  7675  0889  1516               	bsf	22,2	;volatile
  7676  088A  0008               	return
  7677  088B                     __end_of_i2c_Stop:	
  7678                           
  7679                           	psect	text45
  7680  0881                     __ptext45:	
  7681 ;; *************** function _i2c_Restart *****************
  7682 ;; Defined at:
  7683 ;;		line 41 in file "i2cMaster.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;		None               void
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0, pclath, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7697 ;;      Params:         0       0       0       0
  7698 ;;      Locals:         0       0       0       0
  7699 ;;      Temps:          0       0       0       0
  7700 ;;      Totals:         0       0       0       0
  7701 ;;Total ram usage:        0 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    2
  7704 ;; This function calls:
  7705 ;;		_i2c_Wait
  7706 ;; This function is called by:
  7707 ;;		_LDByteReadI2C
  7708 ;;		_LDRAMReadI2C
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _i2c_Restart
  7714  0881                     _i2c_Restart:	
  7715                           
  7716                           ;i2cMaster.c: 42: i2c_Wait();
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  7720  0881  3188  209F         	fcall	_i2c_Wait
  7721                           
  7722                           ;i2cMaster.c: 43: RSEN=1;
  7723  0883  0024               	movlb	4	; select bank4
  7724  0884  1496               	bsf	22,1	;volatile
  7725  0885  0008               	return
  7726  0886                     __end_of_i2c_Restart:	
  7727                           
  7728                           	psect	text46
  7729  0995                     __ptext46:	
  7730 ;; *************** function _i2c_Read *****************
  7731 ;; Defined at:
  7732 ;;		line 74 in file "i2cMaster.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  ack             1    wreg     unsigned char 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  ack             1    3[COMMON] unsigned char 
  7737 ;;  i2cReadData     1    4[COMMON] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      unsigned char 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0, pclath, cstack
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7747 ;;      Params:         0       0       0       0
  7748 ;;      Locals:         2       0       0       0
  7749 ;;      Temps:          1       0       0       0
  7750 ;;      Totals:         3       0       0       0
  7751 ;;Total ram usage:        3 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    2
  7754 ;; This function calls:
  7755 ;;		_i2c_Wait
  7756 ;; This function is called by:
  7757 ;;		_LDByteReadI2C
  7758 ;;		_LDRAMReadI2C
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function _i2c_Read
  7764  0995                     _i2c_Read:	
  7765                           
  7766                           ;incstack = 0
  7767                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  7768                           ;i2c_Read@ack stored from wreg
  7769  0995  00F3               	movwf	i2c_Read@ack
  7770                           
  7771                           ;i2cMaster.c: 79: unsigned char i2cReadData;
  7772                           ;i2cMaster.c: 81: i2c_Wait();
  7773  0996  3188  209F  3189   	fcall	_i2c_Wait
  7774                           
  7775                           ;i2cMaster.c: 82: RCEN=1;
  7776  0999  0024               	movlb	4	; select bank4
  7777  099A  1596               	bsf	22,3	;volatile
  7778                           
  7779                           ;i2cMaster.c: 83: i2c_Wait();
  7780  099B  3188  209F  3189   	fcall	_i2c_Wait
  7781                           
  7782                           ;i2cMaster.c: 84: i2cReadData = SSPBUF;
  7783  099E  0024               	movlb	4	; select bank4
  7784  099F  0811               	movf	17,w	;volatile
  7785  09A0  00F2               	movwf	??_i2c_Read
  7786  09A1  0872               	movf	??_i2c_Read,w
  7787  09A2  00F4               	movwf	i2c_Read@i2cReadData
  7788                           
  7789                           ;i2cMaster.c: 85: i2c_Wait();
  7790  09A3  3188  209F  3189   	fcall	_i2c_Wait
  7791                           
  7792                           ;i2cMaster.c: 86: if ( ack ) ACKDT=0;
  7793  09A6  0873               	movf	i2c_Read@ack,w
  7794  09A7  1903               	btfsc	3,2
  7795  09A8  29AC               	goto	l55
  7796  09A9  0024               	movlb	4	; select bank4
  7797  09AA  1296               	bcf	22,5	;volatile
  7798  09AB  29AE               	goto	l56
  7799  09AC                     l55:	
  7800                           
  7801                           ;i2cMaster.c: 87: else ACKDT=1;
  7802  09AC  0024               	movlb	4	; select bank4
  7803  09AD  1696               	bsf	22,5	;volatile
  7804  09AE                     l56:	
  7805                           
  7806                           ;i2cMaster.c: 88: ACKEN=1;
  7807  09AE  1616               	bsf	22,4	;volatile
  7808                           
  7809                           ;i2cMaster.c: 90: return( i2cReadData );
  7810  09AF  0874               	movf	i2c_Read@i2cReadData,w
  7811  09B0  0008               	return
  7812  09B1                     __end_of_i2c_Read:	
  7813                           
  7814                           	psect	text47
  7815  08DE                     __ptext47:	
  7816 ;; *************** function _LDRAMSetAddress *****************
  7817 ;; Defined at:
  7818 ;;		line 150 in file "i2cMaster.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  7821 ;;  HighAddress     1    6[COMMON] unsigned char 
  7822 ;;  LowAddress      1    7[COMMON] unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  i2cSlaveAddr    1    8[COMMON] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;		None               void
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0, pclath, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7834 ;;      Params:         2       0       0       0
  7835 ;;      Locals:         1       0       0       0
  7836 ;;      Temps:          0       0       0       0
  7837 ;;      Totals:         3       0       0       0
  7838 ;;Total ram usage:        3 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    3
  7841 ;; This function calls:
  7842 ;;		_i2c_Address
  7843 ;;		_i2c_Start
  7844 ;;		_i2c_Write
  7845 ;; This function is called by:
  7846 ;;		_LDRAMWriteI2C
  7847 ;;		_LDRAMReadI2C
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           
  7852                           ;psect for function _LDRAMSetAddress
  7853  08DE                     _LDRAMSetAddress:	
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in _LDRAMSetAddress: [wreg+status,2+status,0+pclath+cstack]
  7857                           ;LDRAMSetAddress@i2cSlaveAddress stored from wreg
  7858  08DE  00F8               	movwf	LDRAMSetAddress@i2cSlaveAddress
  7859                           
  7860                           ;i2cMaster.c: 152: i2c_Start();
  7861  08DF  3188  207C  3188   	fcall	_i2c_Start
  7862                           
  7863                           ;i2cMaster.c: 153: i2c_Address(i2cSlaveAddress,0x00);
  7864  08E2  01F2               	clrf	i2c_Address@mode
  7865  08E3  0878               	movf	LDRAMSetAddress@i2cSlaveAddress,w
  7866  08E4  3188  20C0  3188   	fcall	_i2c_Address
  7867                           
  7868                           ;i2cMaster.c: 154: i2c_Write(HighAddress);
  7869  08E7  0876               	movf	LDRAMSetAddress@HighAddress,w
  7870  08E8  3188  2091  3188   	fcall	_i2c_Write
  7871                           
  7872                           ;i2cMaster.c: 155: i2c_Write(LowAddress);
  7873  08EB  0877               	movf	LDRAMSetAddress@LowAddress,w
  7874  08EC  3188  2091         	fcall	_i2c_Write
  7875  08EE  0008               	return
  7876  08EF                     __end_of_LDRAMSetAddress:	
  7877                           
  7878                           	psect	text48
  7879  0891                     __ptext48:	
  7880 ;; *************** function _i2c_Write *****************
  7881 ;; Defined at:
  7882 ;;		line 55 in file "i2cMaster.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  data            1    wreg     unsigned char 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  data            1    2[COMMON] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;		None               void
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0, pclath, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7896 ;;      Params:         0       0       0       0
  7897 ;;      Locals:         1       0       0       0
  7898 ;;      Temps:          0       0       0       0
  7899 ;;      Totals:         1       0       0       0
  7900 ;;Total ram usage:        1 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    2
  7903 ;; This function calls:
  7904 ;;		_i2c_Wait
  7905 ;; This function is called by:
  7906 ;;		_LDByteSetAddress
  7907 ;;		_LDByteWriteI2C
  7908 ;;		_LDRAMSetAddress
  7909 ;;		_LDRAMWriteI2C
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           
  7914                           ;psect for function _i2c_Write
  7915  0891                     _i2c_Write:	
  7916                           
  7917                           ;incstack = 0
  7918                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  7919                           ;i2c_Write@data stored from wreg
  7920  0891  00F2               	movwf	i2c_Write@data
  7921                           
  7922                           ;i2cMaster.c: 57: i2c_Wait();
  7923  0892  3188  209F         	fcall	_i2c_Wait
  7924                           
  7925                           ;i2cMaster.c: 58: SSPBUF = data;
  7926  0894  0872               	movf	i2c_Write@data,w
  7927  0895  0024               	movlb	4	; select bank4
  7928  0896  0091               	movwf	17	;volatile
  7929  0897  0008               	return
  7930  0898                     __end_of_i2c_Write:	
  7931                           
  7932                           	psect	text49
  7933  087C                     __ptext49:	
  7934 ;; *************** function _i2c_Start *****************
  7935 ;; Defined at:
  7936 ;;		line 34 in file "i2cMaster.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;		None               void
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, pclath, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7950 ;;      Params:         0       0       0       0
  7951 ;;      Locals:         0       0       0       0
  7952 ;;      Temps:          0       0       0       0
  7953 ;;      Totals:         0       0       0       0
  7954 ;;Total ram usage:        0 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    2
  7957 ;; This function calls:
  7958 ;;		_i2c_Wait
  7959 ;; This function is called by:
  7960 ;;		_LDByteSetAddress
  7961 ;;		_LDRAMSetAddress
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           
  7966                           ;psect for function _i2c_Start
  7967  087C                     _i2c_Start:	
  7968                           
  7969                           ;i2cMaster.c: 36: i2c_Wait();
  7970                           
  7971                           ;incstack = 0
  7972                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  7973  087C  3188  209F         	fcall	_i2c_Wait
  7974                           
  7975                           ;i2cMaster.c: 37: SEN=1;
  7976  087E  0024               	movlb	4	; select bank4
  7977  087F  1416               	bsf	22,0	;volatile
  7978  0880  0008               	return
  7979  0881                     __end_of_i2c_Start:	
  7980                           
  7981                           	psect	text50
  7982  08C0                     __ptext50:	
  7983 ;; *************** function _i2c_Address *****************
  7984 ;; Defined at:
  7985 ;;		line 63 in file "i2cMaster.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  address         1    wreg     unsigned char 
  7988 ;;  mode            1    2[COMMON] unsigned char 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  address         1    4[COMMON] unsigned char 
  7991 ;;  l_address       1    5[COMMON] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;		None               void
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0, pclath, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8001 ;;      Params:         1       0       0       0
  8002 ;;      Locals:         2       0       0       0
  8003 ;;      Temps:          1       0       0       0
  8004 ;;      Totals:         4       0       0       0
  8005 ;;Total ram usage:        4 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    2
  8008 ;; This function calls:
  8009 ;;		_i2c_Wait
  8010 ;; This function is called by:
  8011 ;;		_LDByteSetAddress
  8012 ;;		_LDByteReadI2C
  8013 ;;		_LDRAMSetAddress
  8014 ;;		_LDRAMReadI2C
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           
  8019                           ;psect for function _i2c_Address
  8020  08C0                     _i2c_Address:	
  8021                           
  8022                           ;incstack = 0
  8023                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  8024                           ;i2c_Address@address stored from wreg
  8025  08C0  00F4               	movwf	i2c_Address@address
  8026                           
  8027                           ;i2cMaster.c: 65: unsigned char l_address;
  8028                           ;i2cMaster.c: 67: l_address=address<<1;
  8029  08C1  3574               	lslf	i2c_Address@address,w
  8030  08C2  00F3               	movwf	??_i2c_Address
  8031  08C3  0873               	movf	??_i2c_Address,w
  8032  08C4  00F5               	movwf	i2c_Address@l_address
  8033                           
  8034                           ;i2cMaster.c: 68: l_address+=mode;
  8035  08C5  0872               	movf	i2c_Address@mode,w
  8036  08C6  00F3               	movwf	??_i2c_Address
  8037  08C7  0873               	movf	??_i2c_Address,w
  8038  08C8  07F5               	addwf	i2c_Address@l_address,f
  8039                           
  8040                           ;i2cMaster.c: 69: i2c_Wait();
  8041  08C9  3188  209F         	fcall	_i2c_Wait
  8042                           
  8043                           ;i2cMaster.c: 70: SSPBUF = l_address;
  8044  08CB  0875               	movf	i2c_Address@l_address,w
  8045  08CC  0024               	movlb	4	; select bank4
  8046  08CD  0091               	movwf	17	;volatile
  8047  08CE  0008               	return
  8048  08CF                     __end_of_i2c_Address:	
  8049                           
  8050                           	psect	text51
  8051  089F                     __ptext51:	
  8052 ;; *************** function _i2c_Wait *****************
  8053 ;; Defined at:
  8054 ;;		line 29 in file "i2cMaster.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;		None               void
  8061 ;; Registers used:
  8062 ;;		wreg, status,2
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8068 ;;      Params:         0       0       0       0
  8069 ;;      Locals:         0       0       0       0
  8070 ;;      Temps:          0       0       0       0
  8071 ;;      Totals:         0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_i2c_Start
  8079 ;;		_i2c_Restart
  8080 ;;		_i2c_Stop
  8081 ;;		_i2c_Write
  8082 ;;		_i2c_Address
  8083 ;;		_i2c_Read
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           
  8088                           ;psect for function _i2c_Wait
  8089  089F                     _i2c_Wait:	
  8090  089F                     l2924:	
  8091                           ;i2cMaster.c: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSPSTAT & 0x04 ) );
  8092                           
  8093                           ;incstack = 0
  8094                           ; Regs used in _i2c_Wait: [wreg+status,2]
  8095                           
  8096  089F  0024               	movlb	4	; select bank4
  8097  08A0  0816               	movf	22,w	;volatile
  8098  08A1  391F               	andlw	31
  8099  08A2  1D03               	btfss	3,2
  8100  08A3  289F               	goto	l2924
  8101  08A4  1D14               	btfss	20,2	;volatile
  8102  08A5  0008               	return
  8103  08A6  289F               	goto	l2924
  8104  08A7                     __end_of_i2c_Wait:	
  8105                           
  8106                           	psect	text52
  8107  0B0A                     __ptext52:	
  8108 ;; *************** function _AT24CM02_GetAddress *****************
  8109 ;; Defined at:
  8110 ;;		line 19 in file "AT24CM02.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  block           2    2[COMMON] short 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;		None               void
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8124 ;;      Params:         2       0       0       0
  8125 ;;      Locals:         0       0       0       0
  8126 ;;      Temps:          4       0       0       0
  8127 ;;      Totals:         6       0       0       0
  8128 ;;Total ram usage:        6 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_AT24CM02_WriteBlock
  8135 ;;		_AT24CM02_ReadBlock
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _AT24CM02_GetAddress
  8141  0B0A                     _AT24CM02_GetAddress:	
  8142                           
  8143                           ;AT24CM02.c: 21: AT24CM02_A16A17 = ((block >> 11) & 3) + 0x50;
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _AT24CM02_GetAddress: [wreg+status,2+status,0]
  8147  0B0A  0873               	movf	AT24CM02_GetAddress@block+1,w
  8148  0B0B  00F5               	movwf	??_AT24CM02_GetAddress+1
  8149  0B0C  0872               	movf	AT24CM02_GetAddress@block,w
  8150  0B0D  00F4               	movwf	??_AT24CM02_GetAddress
  8151  0B0E  300B               	movlw	11
  8152  0B0F  00F6               	movwf	??_AT24CM02_GetAddress+2
  8153  0B10                     u2875:	
  8154  0B10  0D75               	rlf	??_AT24CM02_GetAddress+1,w
  8155  0B11  0CF5               	rrf	??_AT24CM02_GetAddress+1,f
  8156  0B12  0CF4               	rrf	??_AT24CM02_GetAddress,f
  8157  0B13  0BF6               	decfsz	??_AT24CM02_GetAddress+2,f
  8158  0B14  2B10               	goto	u2875
  8159  0B15  0874               	movf	??_AT24CM02_GetAddress,w
  8160  0B16  3903               	andlw	3
  8161  0B17  3E50               	addlw	80
  8162  0B18  00F7               	movwf	??_AT24CM02_GetAddress+3
  8163  0B19  0877               	movf	??_AT24CM02_GetAddress+3,w
  8164  0B1A  0020               	movlb	0	; select bank0
  8165  0B1B  00E2               	movwf	_AT24CM02_A16A17
  8166                           
  8167                           ;AT24CM02.c: 22: AT24CM02_A8A15 = (block >> 3);
  8168  0B1C  0873               	movf	AT24CM02_GetAddress@block+1,w
  8169  0B1D  00F5               	movwf	??_AT24CM02_GetAddress+1
  8170  0B1E  0872               	movf	AT24CM02_GetAddress@block,w
  8171  0B1F  00F4               	movwf	??_AT24CM02_GetAddress
  8172  0B20  0D75               	rlf	??_AT24CM02_GetAddress+1,w
  8173  0B21  0CF5               	rrf	??_AT24CM02_GetAddress+1,f
  8174  0B22  0CF4               	rrf	??_AT24CM02_GetAddress,f
  8175  0B23  0D75               	rlf	??_AT24CM02_GetAddress+1,w
  8176  0B24  0CF5               	rrf	??_AT24CM02_GetAddress+1,f
  8177  0B25  0CF4               	rrf	??_AT24CM02_GetAddress,f
  8178  0B26  0D75               	rlf	??_AT24CM02_GetAddress+1,w
  8179  0B27  0CF5               	rrf	??_AT24CM02_GetAddress+1,f
  8180  0B28  0CF4               	rrf	??_AT24CM02_GetAddress,f
  8181  0B29  0874               	movf	??_AT24CM02_GetAddress,w
  8182  0B2A  00F6               	movwf	??_AT24CM02_GetAddress+2
  8183  0B2B  0876               	movf	??_AT24CM02_GetAddress+2,w
  8184  0B2C  00E3               	movwf	_AT24CM02_A8A15
  8185                           
  8186                           ;AT24CM02.c: 23: AT24CM02_A0A7 = (block << 5) & 0xe0;
  8187  0B2D  0872               	movf	AT24CM02_GetAddress@block,w
  8188  0B2E  00F4               	movwf	??_AT24CM02_GetAddress
  8189  0B2F  3004               	movlw	4
  8190  0B30                     u2885:	
  8191  0B30  35F4               	lslf	??_AT24CM02_GetAddress,f
  8192  0B31  3EFF               	addlw	-1
  8193  0B32  1D03               	skipz
  8194  0B33  2B30               	goto	u2885
  8195  0B34  3574               	lslf	??_AT24CM02_GetAddress,w
  8196  0B35  39E0               	andlw	224
  8197  0B36  00F5               	movwf	??_AT24CM02_GetAddress+1
  8198  0B37  0875               	movf	??_AT24CM02_GetAddress+1,w
  8199  0B38  00E1               	movwf	_AT24CM02_A0A7
  8200  0B39  0008               	return
  8201  0B3A                     __end_of_AT24CM02_GetAddress:	
  8202                           
  8203                           	psect	intentry
  8204  0004                     __pintentry:	
  8205 ;; *************** function _isr *****************
  8206 ;; Defined at:
  8207 ;;		line 274 in file "blueGyro.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;		None
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;		None               void
  8214 ;; Registers used:
  8215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8221 ;;      Params:         0       0       0       0
  8222 ;;      Locals:         0       0       0       0
  8223 ;;      Temps:          2       0       0       0
  8224 ;;      Totals:         2       0       0       0
  8225 ;;Total ram usage:        2 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		Interrupt level 1
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234  0004                     _isr:	
  8235                           
  8236                           ;incstack = 0
  8237                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  8238  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8239  0005  3180               	pagesel	$
  8240  0006  0020               	movlb	0	; select bank0
  8241  0007  087F               	movf	127,w
  8242  0008  00F1               	movwf	??_isr+1
  8243                           
  8244                           ;blueGyro.c: 276: if(TXIE)
  8245  0009  0021               	movlb	1	; select bank1
  8246  000A  1E11               	btfss	17,4	;volatile
  8247  000B  282B               	goto	i1l275
  8248                           
  8249                           ;blueGyro.c: 277: if(TXIF)
  8250  000C  0020               	movlb	0	; select bank0
  8251  000D  1E11               	btfss	17,4	;volatile
  8252  000E  282B               	goto	i1l275
  8253                           
  8254                           ;blueGyro.c: 278: {
  8255                           ;blueGyro.c: 280: if(InFiFo != OutFiFo)
  8256  000F  0864               	movf	_InFiFo,w	;volatile
  8257  0010  0666               	xorwf	_OutFiFo,w	;volatile
  8258  0011  1903               	skipnz
  8259  0012  2825               	goto	i1l2616
  8260                           
  8261                           ;blueGyro.c: 281: {
  8262                           ;blueGyro.c: 282: TXREG= SerialBuffer[OutFiFo];
  8263  0013  0866               	movf	_OutFiFo,w
  8264  0014  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  8265  0015  0086               	movwf	6
  8266  0016  0187               	clrf	7
  8267  0017  0801               	movf	1,w
  8268  0018  0023               	movlb	3	; select bank3
  8269  0019  009A               	movwf	26	;volatile
  8270                           
  8271                           ;blueGyro.c: 283: OutFiFo++;
  8272  001A  3001               	movlw	1
  8273  001B  00F0               	movwf	??_isr
  8274  001C  0870               	movf	??_isr,w
  8275  001D  0020               	movlb	0	; select bank0
  8276  001E  07E6               	addwf	_OutFiFo,f	;volatile
  8277                           
  8278                           ;blueGyro.c: 284: if(OutFiFo >= 32)
  8279  001F  3020               	movlw	32
  8280  0020  0266               	subwf	_OutFiFo,w	;volatile
  8281  0021  1C03               	skipc
  8282  0022  282B               	goto	i1l275
  8283                           
  8284                           ;blueGyro.c: 285: OutFiFo=0;
  8285  0023  01E6               	clrf	_OutFiFo	;volatile
  8286                           
  8287                           ;blueGyro.c: 286: }
  8288  0024  282B               	goto	i1l275
  8289  0025                     i1l2616:	
  8290                           
  8291                           ;blueGyro.c: 287: else
  8292                           ;blueGyro.c: 288: if(OutFiFo == InFiFo)
  8293  0025  0866               	movf	_OutFiFo,w	;volatile
  8294  0026  0664               	xorwf	_InFiFo,w	;volatile
  8295  0027  1D03               	skipz
  8296  0028  282B               	goto	i1l275
  8297                           
  8298                           ;blueGyro.c: 289: {
  8299                           ;blueGyro.c: 292: TXIE=0;
  8300  0029  0021               	movlb	1	; select bank1
  8301  002A  1211               	bcf	17,4	;volatile
  8302  002B                     i1l275:	
  8303                           
  8304                           ;blueGyro.c: 293: }
  8305                           ;blueGyro.c: 294: }
  8306                           ;blueGyro.c: 297: if(TMR2IF){
  8307  002B  0020               	movlb	0	; select bank0
  8308  002C  1C91               	btfss	17,1	;volatile
  8309  002D  2833               	goto	i1l282
  8310                           
  8311                           ;blueGyro.c: 298: TMR2IF=0;
  8312  002E  1091               	bcf	17,1	;volatile
  8313                           
  8314                           ;blueGyro.c: 299: Timerms++;
  8315  002F  3001               	movlw	1
  8316  0030  07FA               	addwf	_Timerms,f	;volatile
  8317  0031  3000               	movlw	0
  8318  0032  3DFB               	addwfc	_Timerms+1,f	;volatile
  8319  0033                     i1l282:	
  8320  0033  0871               	movf	??_isr+1,w
  8321  0034  00FF               	movwf	127
  8322  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8323  0036  0009               	retfie
  8324  0037                     __end_of_isr:	
  8325  007E                     btemp	set	126	;btemp
  8326  007E                     int$flags	set	126
  8327  007E                     wtemp	set	126
  8328  007E                     wtemp0	set	126
  8329  0080                     wtemp1	set	128
  8330  0082                     wtemp2	set	130
  8331  0084                     wtemp3	set	132
  8332  0086                     wtemp4	set	134
  8333  0088                     wtemp5	set	136
  8334  007F                     wtemp6	set	127
  8335  007E                     ttemp	set	126
  8336  007E                     ttemp0	set	126
  8337  0081                     ttemp1	set	129
  8338  0084                     ttemp2	set	132
  8339  0087                     ttemp3	set	135
  8340  007F                     ttemp4	set	127
  8341  007E                     ltemp	set	126
  8342  007E                     ltemp0	set	126
  8343  0082                     ltemp1	set	130
  8344  0086                     ltemp2	set	134
  8345  0080                     ltemp3	set	128


Data Sizes:
    Strings     117
    Constant    48
    Data        1
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     57      78
    BANK1            80      0      80
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    cputs@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[8]), STR_16(CODE[7]), STR_15(CODE[13]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[7]), STR_11(CODE[17]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[8]), STR_7(CODE[9]), STR_6(CODE[5]), 
		 -> STR_5(CODE[6]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 
		 -> STR_1(CODE[13]), 

    DisplayInfo@cz	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    DisplayInfo@cy	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    SaveSetting@pointer	PTR unsigned char  size(1) Largest target is 6
		 -> Setting(BANK0[6]), 

    LoadSetting@pointer	PTR unsigned char  size(1) Largest target is 6
		 -> Setting(BANK0[6]), 

    LDRAMReadI2C@Data	PTR unsigned char  size(1) Largest target is 32
		 -> CurrentData(BANK1[32]), 

    LDRAMWriteI2C@Data	PTR unsigned char  size(1) Largest target is 32
		 -> CurrentData(BANK1[32]), 

    LDByteReadI2C@Data	PTR unsigned char  size(1) Largest target is 14
		 -> Get_HMC5883L_Values@cval(BANK0[6]), GotInt_MPU6050@uc_temp(BANK0[1]), Get_Accel_Values@cval(BANK0[14]), MPU6050_Test_I2C@Data(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___aldiv
    _printVoltage->___aldiv
    _printVersion->_cputs
    _Setup_MPU6050->_LDByteWriteI2C
    _Setup_HMC5883L->_LDByteWriteI2C
    _SaveSetting->_eeprom_write
    _MPU6050_Test_I2C->_LDByteReadI2C
    _LoadSetting->_eeprom_read
    _GotInt_MPU6050->_LDByteReadI2C
    _Get_HMC5883L_Values->_LDByteReadI2C
    _Get_HMC5883L_Values->_LDByteWriteI2C
    _LDByteWriteI2C->_LDByteSetAddress
    _Get_Accel_Values->_LDByteReadI2C
    _LDByteReadI2C->_LDByteSetAddress
    _LDByteSetAddress->_i2c_Address
    _DisplayInfo->_GetGyroWithOffset
    _printGyro->_GetGyroWithOffset
    _printGyro->___aldiv
    _printGyro->___lmul
    _printDeciValue->___aldiv
    _printGForce->___aldiv
    _printGForce->___lmul
    _printCentiValue->___aldiv
    _itoa->___aldiv
    _utoa->___lwdiv
    _CalculateSumOfSquares->___lmul
    _DisplayData->_GetGyroWithOffset
    _putHex->_GetGyroWithOffset
    _putHexNibble->_putch
    _cputs->_putch
    _AT24CM02_WriteBlock->_LDRAMWriteI2C
    _LDRAMWriteI2C->_LDRAMSetAddress
    _AT24CM02_ReadBlock->_LDRAMReadI2C
    _LDRAMReadI2C->_LDRAMSetAddress
    _LDRAMSetAddress->_i2c_Address

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DisplayInfo
    _printVoltage->_printCentiValue
    _Setup_MPU6050->_LDByteWriteI2C
    _Setup_HMC5883L->_LDByteWriteI2C
    _MPU6050_Test_I2C->_LDByteReadI2C
    _GotInt_MPU6050->_LDByteReadI2C
    _Get_HMC5883L_Values->_LDByteWriteI2C
    _Get_Accel_Values->_LDByteReadI2C
    _DisplayInfo->_printGForce
    _DisplayInfo->_printGyro
    _printValue->_itoa
    _printUShort->_utoa
    _printGyro->_printDeciValue
    _printDeciValue->_itoa
    _printGForce->_printCentiValue
    _printCentiValue->_itoa
    _itoa->_utoa
    _CalculateSumOfSquares->___lmul
    _DisplayData->_putHex
    _AT24CM02_WriteBlock->_LDRAMWriteI2C
    _AT24CM02_ReadBlock->_LDRAMReadI2C

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   84470
                                             52 BANK0      5     5      0
                 _AT24CM02_ReadBlock
                _AT24CM02_WriteBlock
              _CalculateSumOfSquares
                        _DisplayData
                        _DisplayInfo
                         _FindDeltaG
                   _Get_Accel_Values
                _Get_HMC5883L_Values
                     _GotInt_MPU6050
                       _Init1msTimer
                        _LoadSetting
                   _MPU6050_Test_I2C
                        _SaveSetting
                     _Setup_HMC5883L
                      _Setup_MPU6050
                            ___aldiv
                              _cputs
                           _i2c_Init
                       _printVersion
                       _printVoltage
 ---------------------------------------------------------------------------------
 (1) _printVoltage                                         9     9      0   13344
                                             42 BANK0      9     9      0
                            ___aldiv
                              _cputs
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (1) _printVersion                                         0     0      0    1950
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup_MPU6050                                        5     5      0    2111
                                              4 BANK0      5     5      0
                     _LDByteWriteI2C
 ---------------------------------------------------------------------------------
 (1) _Setup_HMC5883L                                       1     1      0    2009
                                              4 BANK0      1     1      0
                     _LDByteWriteI2C
 ---------------------------------------------------------------------------------
 (1) _SaveSetting                                          3     3      0     263
                                              6 COMMON     3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         4     3      1     127
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Test_I2C                                     3     3      0    4005
                                              3 BANK0      3     3      0
                      _LDByteReadI2C
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _LoadSetting                                          3     3      0     167
                                              6 COMMON     3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init1msTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GotInt_MPU6050                                       3     3      0    2052
                                              3 BANK0      3     3      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (1) _Get_HMC5883L_Values                                 12    12      0    4231
                                              4 BANK0     11    11      0
                      _LDByteReadI2C
                     _LDByteWriteI2C
 ---------------------------------------------------------------------------------
 (2) _LDByteWriteI2C                                       6     4      2    2009
                                              8 COMMON     2     0      2
                                              0 BANK0      4     4      0
                   _LDByteSetAddress
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _Get_Accel_Values                                    19    19      0    2494
                                              3 BANK0     19    19      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (2) _LDByteReadI2C                                        5     2      3    1978
                                              8 COMMON     2     2      0
                                              0 BANK0      3     0      3
                   _LDByteSetAddress
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (3) _LDByteSetAddress                                     2     1      1     582
                                              6 COMMON     2     1      1
                        _i2c_Address
                          _i2c_Start
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _FindDeltaG                                           4     4      0       0
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayInfo                                          6     6      0   39054
                                             46 BANK0      6     6      0
              _CalculateSumOfSquares
                  _GetGyroWithOffset
                              _cputs
                              _isqrt
                        _printGForce
                          _printGyro
                        _printUShort
                         _printValue
 ---------------------------------------------------------------------------------
 (2) _printValue                                          18    16      2    5178
                                             16 BANK0     18    16      2
                              _cputs
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _printUShort                                         18    16      2    4329
                                              9 BANK0     18    16      2
                              _cputs
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGyro                                            4     0      4   12279
                                             42 BANK0      4     0      4
                  _GetGyroWithOffset (ARG)
                            ___aldiv
                             ___lmul
                     _printDeciValue
 ---------------------------------------------------------------------------------
 (3) _printDeciValue                                      26    22      4    9714
                                             16 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _itoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGForce                                          4     0      4   12440
                                             42 BANK0      4     0      4
                            ___aldiv
                             ___lmul
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (2) _printCentiValue                                     26    22      4    9810
                                             16 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _itoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    2916
                                              9 BANK0      7     3      4
                            ___aldiv (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2203
                                              0 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     622
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     501
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1485
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _isqrt                                               32    28      4     331
                                              2 COMMON     4     0      4
                                              0 BANK0     28    28      0
 ---------------------------------------------------------------------------------
 (2) _CalculateSumOfSquares                               30    30      0    1194
                                              4 BANK0     26    26      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     786
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayData                                          0     0      0    4052
                  _GetGyroWithOffset
                              _cputs
                             _putHex
 ---------------------------------------------------------------------------------
 (2) _putHex                                               4     2      2     975
                                              0 BANK0      4     2      2
                  _GetGyroWithOffset (ARG)
                       _putHexNibble
 ---------------------------------------------------------------------------------
 (3) _putHexNibble                                         2     2      0     201
                                              5 COMMON     2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2    1950
                                              5 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                3     3      0     130
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _GetGyroWithOffset                                    8     4      4    1127
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _AT24CM02_WriteBlock                                  6     4      2    1607
                                              6 BANK0      6     4      2
                _AT24CM02_GetAddress
                      _LDRAMWriteI2C
 ---------------------------------------------------------------------------------
 (2) _LDRAMWriteI2C                                        7     3      4    1192
                                              9 COMMON     1     1      0
                                              0 BANK0      6     2      4
                    _LDRAMSetAddress
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _AT24CM02_ReadBlock                                   6     4      2    2065
                                              6 BANK0      6     4      2
                _AT24CM02_GetAddress
                       _LDRAMReadI2C
 ---------------------------------------------------------------------------------
 (2) _LDRAMReadI2C                                         7     3      4    1650
                                              9 COMMON     1     1      0
                                              0 BANK0      6     2      4
                    _LDRAMSetAddress
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      65
                                              2 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _LDRAMSetAddress                                      3     1      2     743
                                              6 COMMON     3     1      2
                        _i2c_Address
                          _i2c_Start
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Address                                          4     3      1     359
                                              2 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AT24CM02_GetAddress                                  6     4      2     223
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT24CM02_ReadBlock
     _AT24CM02_GetAddress
     _LDRAMReadI2C
       _LDRAMSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
   _AT24CM02_WriteBlock
     _AT24CM02_GetAddress
     _LDRAMWriteI2C
       _LDRAMSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _CalculateSumOfSquares
     ___lmul
   _DisplayData
     _GetGyroWithOffset
     _cputs
       _putch
     _putHex
       _GetGyroWithOffset (ARG)
       _putHexNibble (ARG)
         _putch
   _DisplayInfo
     _CalculateSumOfSquares
       ___lmul
     _GetGyroWithOffset
     _cputs
       _putch
     _isqrt
     _printGForce
       ___aldiv
       ___lmul
       _printCentiValue
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _itoa
           ___aldiv (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printGyro
       _GetGyroWithOffset (ARG)
       ___aldiv (ARG)
       ___lmul (ARG)
       _printDeciValue (ARG)
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _itoa
           ___aldiv (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printUShort
       _cputs
         _putch
       _utoa
         ___lwdiv
         ___lwmod
     _printValue
       _cputs
         _putch
       _itoa
         ___aldiv (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
   _FindDeltaG
   _Get_Accel_Values
     _LDByteReadI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
   _Get_HMC5883L_Values
     _LDByteReadI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
     _LDByteWriteI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _GotInt_MPU6050
     _LDByteReadI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
   _Init1msTimer
   _LoadSetting
     _eeprom_read
   _MPU6050_Test_I2C
     _LDByteReadI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
     _cputs
       _putch
   _SaveSetting
     _eeprom_write
   _Setup_HMC5883L
     _LDByteWriteI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Setup_MPU6050
     _LDByteWriteI2C
       _LDByteSetAddress
         _i2c_Address
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   ___aldiv
   _cputs
     _putch
   _i2c_Init
   _printVersion
     _cputs
       _putch
   _printVoltage
     ___aldiv
     _cputs
       _putch
     _printCentiValue
       ___aldiv
       ___lwmod
       _cputs
         _putch
       _itoa
         ___aldiv (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _putch
       _utoa
         ___lwdiv
         ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      AA      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Oct 12 19:35:44 2016

                       ?_Init1msTimer 0070                         ?_LDRAMReadI2C 0020  
                   LDRAMWriteI2C@Data 0022                           __CFG_CP$OFF 0000  
                  _AT24CM02_ReadBlock 0AB5                         ??_i2c_Address 0073  
                                  l55 09AC                                    l56 09AE  
                                  _RD 0CA8                                    _WR 0CA9  
                         __CFG_LVP$ON 0000                           i2c_Read@ack 0073  
                                 l303 0F6A                                   l362 07B2  
                                 l643 0F8F                                   l476 097E  
                                 l498 0A25                                   l863 0E14  
                                 _GIE 005F                                   _PR2 001B  
                                 _PEN 10B2                          __CFG_CPD$OFF 0000  
                                 _SEN 10B0                           main@UserKey 0058  
                                 _isr 0004                   ?_AT24CM02_ReadBlock 0026  
        __size_of_Get_HMC5883L_Values 0056                          __CFG_BORV$LO 0000  
                                 wreg 0009                         ??_i2c_Restart 0072  
                                l3004 0A5F                                  l3040 0FE9  
                                l3104 0EAC                                  l3122 08FA  
                                l3026 0FB0                                  l3018 0FA0  
                                l3106 0EB4                                  l3132 0B4E  
                                l3044 0FF7                                  l3036 0FDE  
                                l3028 0FBE                                  l3222 0D42  
                                l3232 0D64                                  l3128 0B43  
                                l3170 0A8D                                  l3242 0788  
                                l3082 0F1B                                  l3154 0BEC  
                                l3330 0E54                                  l3180 0C84  
                                l3084 0F23                                  l3156 0C04  
                                l3340 0E72                                  l3270 046D  
                                l3238 072B                                  l3430 0C53  
                                l3168 0A79                                  l3424 0C35  
                                l3504 07CF                                  l3178 0C6C  
                                l3284 04A4                                  l3276 0481  
                                l3268 045E                                  l3508 07F5  
                                l3700 019E                                  l3620 00CD  
                                l3286 04B3                                  l3278 0490  
                                l2910 0AF0                                  l3640 00FF  
                                l2914 0AFC                                  l3650 010F  
                                l3642 0101                                  l2924 089F  
                                l2908 0AE4                                  l3740 02B7  
                                l3652 0111                                  l3636 00F7  
                                l3628 00DE                                  l2934 0A11  
                                l2918 0B05                                  l3742 02BA  
                                l3726 0281                                  l3670 0136  
                                l3646 0107                                  l2944 0DCE  
                                l3664 0129                                  l3656 0119  
                                l2954 0DEC                                  l3746 02BE  
                                l3682 0168                                  l3674 0157  
                                l3666 012D                                  l3658 011E  
                                l2892 0B92                                  l2884 0B74  
                                l3684 0170                                  l2886 0B80  
                                l3758 02DE                                  l3686 0178  
                                l3694 018D                                  l3678 015E  
                                l2992 0915                                  l2896 0B9B  
                                l3696 0199                                  l3786 0313  
                 LDRAMWriteI2C@Length 0023                                  ?_isr 0070  
                                _ADGO 04E9                                  STR_1 058A  
                                STR_2 05D9                                  STR_3 05DD  
                                STR_4 05A8                                  STR_5 05C6  
                                STR_6 05CC                                  STR_7 0597  
                                STR_8 05B0                                  STR_9 0587  
                                _BRGH 0CF2                                  _CREN 0CEC  
                  LDByteWriteI2C@data 0079                 ??_AT24CM02_GetAddress 0074  
                                u3015 0ABF                                  u3025 0BAA  
                                u2305 0B93                                  u2335 0AE7  
                                u2505 0FB3                                  u2265 0B77  
                                u3225 0207                                  u2355 0AF6  
                                u2525 0FBF                                  u2285 0B81  
                                u2365 0AFD                                  u3245 02A6  
                                u3317 0090                                  u2535 0FD3  
                                u2295 0B8B                                  u3255 02B5  
                                u3327 00A3                                  u2545 0FDF  
                                u3337 00B4                                  u2635 0B4F  
                                u3347 07AA                                  u2645 0B56  
                                u2805 0776                                  u2910 0965  
                                u2735 0D27                                  u2815 0789  
                                u2755 0D3B                                  _PEIE 005E  
                                u2765 0D4B                                  u2790 075E  
                                u2775 0D5D                                  u2865 0AA8  
                                u2785 073C                                  u2875 0B10  
                                u2795 075A                                  _RCIE 048D  
                                _RCEN 10B3                                  _RCIF 008D  
                                u2885 0B30                                  u2975 0C31  
                                u2985 0C4F                                  _SCKP 0CFC  
                                _TMR2 001A                                  _SPEN 0CEF  
                                _RSEN 10B1                                  _TXIE 048C  
                                _WREN 0CAA                                  _TXEN 0CF5  
                                _TXIF 008C                                  _SYNC 0CF4  
                                _WPUA 020C                        ??_eeprom_write 0073  
                                _Mode 006D                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                                  _main 0052  
                                _itoa 0A47                        ?_LDRAMWriteI2C 0020  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  _utoa 0DC8  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
                ??_AT24CM02_ReadBlock 0028              __end_of_LDByteSetAddress 08C0  
                                start 0037                                  ttemp 007E  
                 Setup_MPU6050@TheReg 0028                                  wtemp 007E  
                       __CFG_IESO$OFF 0000                         printGyro@RawG 004A  
                       ??_LoadSetting 0076                  printVoltage@VDDValue 004D  
                   _GetGyroWithOffset 0D1E                         __CFG_MCLRE$ON 0000  
                      ??_Init1msTimer 0072                        ??_LDRAMReadI2C 0024  
                  ?_GetGyroWithOffset 0072                            _FindDeltaG 0C16  
                               ??_isr 0070                   __end_of_DisplayData 0712  
                 __end_of_DisplayInfo 0453                       __end_of___aldiv 1000  
                               _ABDEN 0CF8                                 ?_main 0070  
                               _ACKEN 10B4                                 _ACKDT 10B5  
                               ?_itoa 0029                                 _ADRES 009B  
                               _EEADR 0191                                 STR_10 0587  
                               STR_11 056C                                 STR_12 05BF  
                               STR_13 05D5                                 STR_14 05D1  
                               STR_15 057D                                 STR_16 05B8  
                               _BRG16 0CFB                                 STR_17 05A0  
                       __CFG_WDTE$OFF 0000                                 _CARRY 0018  
                               ?_utoa 0020                   ??_GetGyroWithOffset 0076  
                               _T2CON 001C                       __end_of___lwdiv 0BA0  
            __size_of_printCentiValue 007B                       __end_of___lwmod 0B0A  
                               i1l282 0033                                 i1l275 002B  
                               _RCREG 0199                                 _RCSTA 019D  
                               _PORTA 000C                                 _TRISA 008C  
                               _TXREG 019A                                 _TXSTA 019E  
                 __end_of_i2c_Address 08CF                   ___lmul@multiplicand 0076  
                    printCentiValue@T 0044                      ??_printDeciValue 007A  
                               _cputs 0915                                 _isqrt 0712  
                    ??_LDByteWriteI2C 0020                                 _putch 0A06  
                    ?_LDRAMSetAddress 0076                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                   __end_of_i2c_Restart 0886  
                               ttemp4 007F                                 utoa@c 0027  
                               utoa@v 0025                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F             __end_of_GetGyroWithOffset 0D72  
                     __initialization 0039                          __end_of_main 0325  
                        __end_of_itoa 0A6B                      __end_of_i2c_Init 08B3  
                    __end_of_i2c_Read 09B1                      __end_of_i2c_Wait 08A7  
                        __end_of_utoa 0E2A                      __end_of_i2c_Stop 088B  
               printCentiValue@buffer 0034                   __end_of_LoadSetting 09CD  
                              ??_main 0054                                ??_itoa 002D  
                       ??_SaveSetting 0076                                ??_utoa 0024  
                      __CFG_PLLEN$OFF 0000                   _AT24CM02_WriteBlock 0BA0  
             __size_of_Setup_HMC5883L 0016                  LDByteWriteI2C@LowAdd 0078  
                              _ADCON0 009D                                _ADCON1 009E  
                              ?_cputs 0075                                _EEDATA 0193  
                              _EECON1 0195                                _EECON2 0196  
                              ?_isqrt 0072                LDRAMReadI2C@LowAddress 0021  
                              _APFCON 011D                                _ANSELA 018C  
                              ?_putch 0070                    __size_of_i2c_Start 0005  
                     ??_LDRAMWriteI2C 0024                                i1l2616 0025  
                  __size_of_i2c_Write 0007                                _INTCON 000B  
                              _FVRCON 0117                                _OSCCON 0099  
                              _TMR2IE 0489                                _TMR2IF 0089  
                              _SPBRGH 019C                                _SPBRGL 019B  
                    ??_GotInt_MPU6050 0023                                _SSPADD 0212  
                              _TRISA1 0461                                _TRISA2 0462  
                              _SSPBUF 0211                                _InFiFo 0064  
                    _MPU6050_Test_I2C 09CD                  ?_AT24CM02_WriteBlock 0026  
                      __CFG_PWRTE$OFF 0000                           _DisplayData 067F  
                __size_of_eeprom_read 0018                           _DisplayInfo 0325  
                              ___lmul 0B3A                             ??___aldiv 0020  
             LDRAMReadI2C@HighAddress 0020                           ?_FindDeltaG 0070  
                      __CFG_STVREN$ON 0000                            _TimerCrash 00CE  
      __size_of_CalculateSumOfSquares 00E9         __end_of_CalculateSumOfSquares 053C  
                           ??___lwdiv 0076                             ??___lwmod 0076  
                         _i2c_Address 08C0                  __end_of_eeprom_write 0A47  
                              _putHex 0A90                 __end_of_Setup_MPU6050 0E94  
                              cputs@s 0075                         i2c_Write@data 0072  
                              itoa@cp 002E                          ?_printGForce 004A  
                              isqrt@b 0038                                isqrt@g 0034  
                         _i2c_Restart 0881                          ?_printUShort 0029  
                 __end_of_SaveSetting 0A06                        SaveSetting@idx 0078  
                __end_of_Init1msTimer 08DE                     ??_printCentiValue 007A  
                __end_of_LDRAMReadI2C 0C96             __size_of_Get_Accel_Values 009E  
              __size_of_LDByteReadI2C 003D               __end_of__initialization 004E  
                     eeprom_read@addr 0075               AT24CM02_ReadBlock@block 0026  
          __size_of_GetGyroWithOffset 0054                 ??_AT24CM02_WriteBlock 0028  
                 _Get_HMC5883L_Values 0D72                           _LoadSetting 09B1  
                      __pcstackCOMMON 0070                         putch@char_out 0073  
                        __pidataBANK0 0003              LDRAMWriteI2C@HighAddress 0020  
     LDByteSetAddress@i2cSlaveAddress 0077                         __end_of_cputs 0929  
                       __end_of_isqrt 079A                         __end_of_putch 0A24  
                   __end_of_i2c_Start 0881                     __end_of_i2c_Write 0898  
                         _CurrentData 00D0                printCentiValue@_lvalue 0046  
                ?_Get_HMC5883L_Values 0070                     eeprom_write@value 0072  
                             ??_cputs 0077                               ??_isqrt 0020  
                             ??_putch 0072         LDByteWriteI2C@i2cSlaveAddress 0023  
                           ?_i2c_Init 0070                   __size_of_FindDeltaG 003F  
                           ?_i2c_Read 0070                            __pbssBANK0 0059  
                          __pbssBANK1 00A0                             ?_i2c_Wait 0070  
                           ?_i2c_Stop 0070                       printValue@value 0030  
                   ?_LDByteSetAddress 0076                            __pmaintext 0052  
                  ??_LDByteSetAddress 0077                               ?___lmul 0072  
             LDByteWriteI2C@ErrorCode 0021                            __pintentry 0004  
                       _LDByteReadI2C 0BD9                        ___lmul@product 0020  
                             ?_putHex 0020                    i2c_Address@address 0074  
                         _SaveSetting 09E9                 ??_Get_HMC5883L_Values 0024  
                  __size_of_printGyro 0044           __end_of_AT24CM02_GetAddress 0B3A  
__end_ofSetup_MPU6050@MPU6050RegTable 0564          Setup_MPU6050@MPU6050RegTable 053C  
                      _Setup_HMC5883L 0967                      printUShort@value 0029  
                             _SSPCON1 0215                               _SSPCON2 0216  
                             _SSPSTAT 0214                            ??_i2c_Init 0072  
                          ??_i2c_Read 0072                            ??_i2c_Wait 0072  
                          ??_i2c_Stop 0072                  LDByteReadI2C@Address 0020  
                             _NewMode 0065           __size_of_AT24CM02_ReadBlock 0029  
                             _OutFiFo 0066                               _Setting 0067  
                             _Timerms 007A             _CalculateSumOfSquares$323 002C  
           _CalculateSumOfSquares$324 002E             _CalculateSumOfSquares$325 0030  
               __size_of_eeprom_write 0023                               ___aldiv 0F7E  
                     __size_of___lmul 0032                      LDRAMReadI2C@Data 0022  
                             ___lwdiv 0B6C                               ___lwmod 0ADE  
                      ?_LDByteReadI2C 0020              AT24CM02_WriteBlock@block 0026  
                             __ptext1 079A                               __ptext2 0898  
                             __ptext3 08A7                               __ptext4 0E2A  
                             __ptext5 0967                               __ptext6 09E9  
                             __ptext7 0A24                               __ptext8 09CD  
                             __ptext9 09B1                       __size_of_putHex 0025  
                   LDByteReadI2C@Data 0021                GetGyroWithOffset@_temp 0078  
              __end_of_Setup_HMC5883L 097D              __end_of_MPU6050_Test_I2C 09E9  
               __size_of_Init1msTimer 000F                          __size_of_isr 0033  
               __size_of_LDRAMReadI2C 0041                GetGyroWithOffset@value 0072  
                    ___aldiv@dividend 0076                  __size_of_printGForce 0044  
                             clrloop0 088C                  end_of_initialization 004E  
                    _Get_Accel_Values 05E1                  __size_of_printUShort 0014  
                i2c_Address@l_address 0075                               itoa@buf 002F  
                             itoa@val 0029                          _eeprom_write 0A24  
                       ?_putHexNibble 0070                     __end_of_printGyro 0D1E  
                        ?_DisplayData 0070              __size_of_LDRAMSetAddress 0011  
                        ?_DisplayInfo 0070                      ___aldiv@quotient 0023  
                        ??_FindDeltaG 0072                          _Init1msTimer 08CF  
                        __pstringtext 053C                               utoa@buf 0028  
                        _LDRAMReadI2C 0C55                               utoa@val 0020  
                        ?_i2c_Address 0072                       _printCentiValue 0F03  
                          _printValue 093D                         ?_printVersion 0070  
                __end_ofFindDeltaG@HG 0568                     _AT24CM02_BlockIdx 005D  
                __end_ofFindDeltaG@LG 056C                       ?_Setup_HMC5883L 0070  
                         putHex@value 0020                         ?_printVoltage 0070  
                    __CFG_FOSC$INTOSC 0000                          ?_i2c_Restart 0070  
                printDeciValue@buffer 0034                    __end_of_FindDeltaG 0C55  
                   Setup_MPU6050@loop 0026                 __end_of_LDRAMWriteI2C 0A90  
                       ??_eeprom_read 0072                        ??_putHexNibble 0075  
             __size_of_printDeciValue 006F                          ?_LoadSetting 0070  
             __size_of_LDByteWriteI2C 0013                       ??_LDByteReadI2C 0078  
                      __end_of___lmul 0B6C                 _CalculateSumOfSquares 0453  
                      ??_printVersion 0078                        ??_printVoltage 004A  
                  LoadSetting@pointer 0077                        __end_of_putHex 0AB5  
                           _i2c_Start 087C                             _i2c_Write 0891  
                 start_initialization 0039                           __end_of_isr 0037  
         __end_of_AT24CM02_WriteBlock 0BD9                  printCentiValue@value 0030  
        LDByteReadI2C@i2cSlaveAddress 0079                     __size_of_i2c_Init 000C  
                   __size_of_i2c_Read 001C                     __size_of_i2c_Wait 0008  
                   __size_of_i2c_Stop 0005            LDRAMSetAddress@HighAddress 0076  
              __size_of_Setup_MPU6050 006A               __end_of_printCentiValue 0F7E  
                            ??___lmul 007A                   __end_of_eeprom_read 0995  
             __size_of_GotInt_MPU6050 0016                           __pdataBANK0 006D  
                   ??_LDRAMSetAddress 0078        LDRAMSetAddress@i2cSlaveAddress 0078  
                            ??_putHex 0022                           ?_printValue 0030  
                        ?_SaveSetting 0070             __size_of_LDByteSetAddress 000D  
                          ?_i2c_Start 0070                            ?_i2c_Write 0070  
                         __pbssCOMMON 007A                             ___latbits 0001  
                    printValue@buffer 0032                         __pcstackBANK0 0020  
                  LDRAMReadI2C@Length 0023                      eeprom_write@addr 0075  
                   putHexNibble@value 0076                      ___lwdiv@dividend 0074  
            GetGyroWithOffset@Goffset 0074                              ?___aldiv 0072  
                __size_of_DisplayData 0093           __end_of_Get_HMC5883L_Values 0DC8  
                __size_of_DisplayInfo 012E                              ?___lwdiv 0072  
                            ?___lwmod 0072                ?_CalculateSumOfSquares 0070  
            __end_of_Get_Accel_Values 067F                            isqrt@bshft 0030  
                __size_of_i2c_Address 000F                  __end_of_putHexNibble 0902  
                       _Setup_MPU6050 0E2A         CalculateSumOfSquares@GxSquare 0032  
                   ?_MPU6050_Test_I2C 0070         CalculateSumOfSquares@GySquare 0036  
                 LDByteReadI2C@Length 0022         CalculateSumOfSquares@GzSquare 003A  
                MPU6050_Test_I2C@Data 0025                    ??_MPU6050_Test_I2C 0023  
                    ___lwdiv@quotient 0078                        __size_of_cputs 0014  
             LDRAMWriteI2C@LowAddress 0021                        __size_of_isqrt 0088  
                      __size_of_putch 001E                  __size_of_i2c_Restart 0005  
        __size_of_AT24CM02_GetAddress 0030                       ___aldiv@divisor 0072  
          __end_of_AT24CM02_ReadBlock 0ADE                       ___aldiv@counter 0021  
                __end_of_printVersion 089F                             clear_ram0 088B  
                         _eeprom_read 097D                          FindDeltaG@HG 0564  
                        FindDeltaG@LG 0568                  __end_of_printVoltage 0800  
                 __size_of_printValue 0014                     printUShort@buffer 002B  
                      _printDeciValue 0E94                        _LDByteWriteI2C 0902  
                    ?_printCentiValue 0030                 GotInt_MPU6050@uc_temp 0025  
                            _SSP1CON2 0216                  __size_of_LoadSetting 001C  
                    ??_Setup_HMC5883L 0024                             _printGyro 0CDA  
                    _AT24CM02_BlockID 0059                              _AccGyroX 00C0  
                            _AccGyroY 00C4                              _AccGyroZ 00C8  
                 printDeciValue@value 0030                        ?_Setup_MPU6050 0070  
                       ??_printGForce 007A                           ??_i2c_Start 0072  
                         ??_i2c_Write 0072                         ??_printUShort 007A  
                        _SerialBuffer 00A0                     printVoltage@value 0051  
                   ___lmul@multiplier 0072                              _i2c_Init 08A7  
                            _i2c_Read 0995                              _i2c_Wait 089F  
                            _i2c_Stop 0886                        LoadSetting@idx 0078  
              __end_of_printDeciValue 0F03                __end_of_LDByteWriteI2C 0915  
                      _GotInt_MPU6050 0951                      __size_of___aldiv 0082  
                          ?_printGyro 004A                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                      _LDByteSetAddress 08B3  
              LDByteSetAddress@LowAdd 0076                  __size_of_SaveSetting 001D  
                     ___lwdiv@divisor 0072                       ___lwdiv@counter 0077  
                            __ptext10 097D                              __ptext11 08CF  
                            __ptext20 093D                              __ptext12 0951  
                            __ptext21 0929                              __ptext13 0D72  
                            __ptext30 0F7E                              __ptext22 0CDA  
                            __ptext14 0902                              __ptext31 0712  
                            __ptext23 0E94                              __ptext15 05E1  
                            __ptext40 0BA0                              __ptext32 0453  
                            __ptext24 0C96                              __ptext16 0BD9  
                            __ptext41 0A6B                              __ptext33 0B3A  
                            __ptext25 0F03                              __ptext17 08B3  
                            __ptext50 08C0                              __ptext42 0AB5  
                            __ptext34 067F                              __ptext26 0A47  
                            __ptext18 0C16                              __ptext51 089F  
                            __ptext43 0C55                              __ptext35 0A90  
                            __ptext27 0DC8                              __ptext19 0325  
                            __ptext52 0B0A                              __ptext44 0886  
                            __ptext36 08EF                              __ptext28 0ADE  
                            __ptext45 0881                              __ptext37 0915  
                            __ptext29 0B6C                              __ptext46 0995  
                            __ptext38 0A06                              __ptext47 08DE  
                            __ptext39 0D1E                              __ptext48 0891  
                            __ptext49 087C                  Get_Accel_Values@cval 0028  
                           isqrt@temp 002C                       printGForce@RawG 004A  
                 __end_of_printGForce 0CDA                       _AT24CM02_A16A17 0062  
                  SaveSetting@pointer 0077                       ?_printDeciValue 0030  
            AT24CM02_GetAddress@block 0072                         __size_of_main 02D3  
                       __size_of_itoa 0024                   __end_of_printUShort 093D  
                       __size_of_utoa 0062                       ?_LDByteWriteI2C 0078  
                     _LDRAMSetAddress 08DE                __end_of_GotInt_MPU6050 0967  
           LDRAMSetAddress@LowAddress 0077           LDRAMReadI2C@i2cSlaveAddress 0079  
                            int$flags 007E                         DisplayInfo@Gt 004E  
                       DisplayInfo@cy 0050                         DisplayInfo@cz 0052  
               __end_of_LDByteReadI2C 0C16                 __size_of_putHexNibble 0013  
                     ??_Setup_MPU6050 0024                          ??_printValue 007A  
              __size_of_LDRAMWriteI2C 0025                             putch@temp 0074  
        LDRAMWriteI2C@i2cSlaveAddress 0079                              itoa@base 002B  
             Get_HMC5883L_Values@cval 0029                 __size_of_printVersion 0007  
               __size_of_printVoltage 0066                              intlevel1 0000  
                    ___lwmod@dividend 0074                              isqrt@val 0072  
                     i2c_Address@mode 0072                        _AT24CM02_A0A15 00CC  
                   __CFG_CLKOUTEN$OFF 0000                        _AT24CM02_A8A15 0063  
                        _putHexNibble 08EF          __size_of_AT24CM02_WriteBlock 0039  
                  __end_of_printValue 0951                          _AccGyroCount 005F  
                     ?_GotInt_MPU6050 0070               ??_CalculateSumOfSquares 0024  
                         ??_printGyro 007A                   _AT24CM02_GetAddress 0B0A  
                   ?_Get_Accel_Values 0070                              utoa@base 0022  
                          _OPTION_REG 0095                          _printVersion 0898  
                  ??_Get_Accel_Values 0023                          _printVoltage 079A  
                     ___lwmod@divisor 0072                           _printGForce 0C96  
                       _AT24CM02_A0A7 0061                       ___lwmod@counter 0077  
                        ___aldiv@sign 0022                           _printUShort 0929  
                 i2c_Read@i2cReadData 0074               __end_of_LDRAMSetAddress 08EF  
                ?_AT24CM02_GetAddress 0072                       printDeciValue@T 0044  
                       ?_eeprom_write 0072                          ?_eeprom_read 0070  
                       _LDRAMWriteI2C 0A6B             __size_of_MPU6050_Test_I2C 001C  
                       ??_DisplayData 007A                         ??_DisplayInfo 007A  
               printDeciValue@_lvalue 0046  
