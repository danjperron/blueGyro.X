

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 27 08:27:36 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  008C                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  0111                     	;# 
   216  0112                     	;# 
   217  0115                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0118                     	;# 
   221  0119                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011D                     	;# 
   225  011D                     	;# 
   226  018C                     	;# 
   227  0191                     	;# 
   228  0191                     	;# 
   229  0192                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0194                     	;# 
   234  0195                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019C                     	;# 
   244  019C                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  019F                     	;# 
   248  020C                     	;# 
   249  0211                     	;# 
   250  0211                     	;# 
   251  0212                     	;# 
   252  0212                     	;# 
   253  0213                     	;# 
   254  0213                     	;# 
   255  0214                     	;# 
   256  0214                     	;# 
   257  0215                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0216                     	;# 
   261  0216                     	;# 
   262  0217                     	;# 
   263  0217                     	;# 
   264  0291                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0293                     	;# 
   268  0294                     	;# 
   269  0295                     	;# 
   270  0295                     	;# 
   271  0296                     	;# 
   272  0391                     	;# 
   273  0392                     	;# 
   274  0393                     	;# 
   275  039A                     	;# 
   276  039C                     	;# 
   277  039D                     	;# 
   278  039E                     	;# 
   279  039F                     	;# 
   280  0FE4                     	;# 
   281  0FE5                     	;# 
   282  0FE6                     	;# 
   283  0FE7                     	;# 
   284  0FE8                     	;# 
   285  0FE9                     	;# 
   286  0FEA                     	;# 
   287  0FEB                     	;# 
   288  0FED                     	;# 
   289  0FEE                     	;# 
   290  0FEF                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  008C                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0095                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  010C                     	;# 
   332  0111                     	;# 
   333  0112                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0117                     	;# 
   337  0118                     	;# 
   338  0119                     	;# 
   339  011A                     	;# 
   340  011B                     	;# 
   341  011D                     	;# 
   342  011D                     	;# 
   343  018C                     	;# 
   344  0191                     	;# 
   345  0191                     	;# 
   346  0192                     	;# 
   347  0193                     	;# 
   348  0193                     	;# 
   349  0193                     	;# 
   350  0194                     	;# 
   351  0195                     	;# 
   352  0196                     	;# 
   353  0197                     	;# 
   354  0199                     	;# 
   355  019A                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019C                     	;# 
   361  019C                     	;# 
   362  019D                     	;# 
   363  019E                     	;# 
   364  019F                     	;# 
   365  020C                     	;# 
   366  0211                     	;# 
   367  0211                     	;# 
   368  0212                     	;# 
   369  0212                     	;# 
   370  0213                     	;# 
   371  0213                     	;# 
   372  0214                     	;# 
   373  0214                     	;# 
   374  0215                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0216                     	;# 
   378  0216                     	;# 
   379  0217                     	;# 
   380  0217                     	;# 
   381  0291                     	;# 
   382  0291                     	;# 
   383  0292                     	;# 
   384  0293                     	;# 
   385  0294                     	;# 
   386  0295                     	;# 
   387  0295                     	;# 
   388  0296                     	;# 
   389  0391                     	;# 
   390  0392                     	;# 
   391  0393                     	;# 
   392  039A                     	;# 
   393  039C                     	;# 
   394  039D                     	;# 
   395  039E                     	;# 
   396  039F                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408                           
   409                           	psect	idataBANK0
   410  0003                     __pidataBANK0:	
   411                           
   412                           ;initializer for _Mode
   413  0003  34FF               	retlw	255
   414                           
   415                           	psect	stringtext
   416  004F                     __pstringtext:	
   417  004F                     Setup_MPU6050@MPU6050RegTable:	
   418  004F  341D               	retlw	29
   419  0050  341E               	retlw	30
   420  0051  341F               	retlw	31
   421  0052  3420               	retlw	32
   422  0053  3421               	retlw	33
   423  0054  3422               	retlw	34
   424  0055  3423               	retlw	35
   425  0056  3424               	retlw	36
   426  0057  3425               	retlw	37
   427  0058  3426               	retlw	38
   428  0059  3427               	retlw	39
   429  005A  3428               	retlw	40
   430  005B  3429               	retlw	41
   431  005C  342A               	retlw	42
   432  005D  342B               	retlw	43
   433  005E  342C               	retlw	44
   434  005F  342D               	retlw	45
   435  0060  342E               	retlw	46
   436  0061  342F               	retlw	47
   437  0062  3430               	retlw	48
   438  0063  3431               	retlw	49
   439  0064  3432               	retlw	50
   440  0065  3433               	retlw	51
   441  0066  3434               	retlw	52
   442  0067  3435               	retlw	53
   443  0068  3437               	retlw	55
   444  0069  3438               	retlw	56
   445  006A  3463               	retlw	99
   446  006B  3464               	retlw	100
   447  006C  3465               	retlw	101
   448  006D  3466               	retlw	102
   449  006E  3467               	retlw	103
   450  006F  3468               	retlw	104
   451  0070  3469               	retlw	105
   452  0071  346A               	retlw	106
   453  0072  341A               	retlw	26
   454  0073  341D               	retlw	29
   455  0074  341E               	retlw	30
   456  0075  341F               	retlw	31
   457  0076  3420               	retlw	32
   458  0077  3421               	retlw	33
   459  0078  3422               	retlw	34
   460  0079  3423               	retlw	35
   461  007A  3424               	retlw	36
   462  007B  3425               	retlw	37
   463  007C  3426               	retlw	38
   464  007D  3427               	retlw	39
   465  007E  3428               	retlw	40
   466  007F  3429               	retlw	41
   467  0080  342A               	retlw	42
   468  0081  342B               	retlw	43
   469  0082  342C               	retlw	44
   470  0083  342D               	retlw	45
   471  0084  342E               	retlw	46
   472  0085  342F               	retlw	47
   473  0086  3430               	retlw	48
   474  0087  3431               	retlw	49
   475  0088  3432               	retlw	50
   476  0089  3433               	retlw	51
   477  008A  3434               	retlw	52
   478  008B  3435               	retlw	53
   479  008C  3463               	retlw	99
   480  008D  3464               	retlw	100
   481  008E  3465               	retlw	101
   482  008F  3466               	retlw	102
   483  0090  3467               	retlw	103
   484  0091  3468               	retlw	104
   485  0092  3469               	retlw	105
   486  0093  346A               	retlw	106
   487  0094  3437               	retlw	55
   488  0095  3438               	retlw	56
   489  0096  3474               	retlw	116
   490  0097  34FF               	retlw	255
   491  0098                     __end_ofSetup_MPU6050@MPU6050RegTable:	
   492  0098                     FindDeltaG@HG:	
   493  0098  3400               	retlw	0
   494  0099  3400               	retlw	0
   495  009A  3490               	retlw	144
   496  009B  3400               	retlw	0
   497  009C                     __end_ofFindDeltaG@HG:	
   498  009C                     FindDeltaG@LG:	
   499  009C  34A4               	retlw	164
   500  009D  34F0               	retlw	240
   501  009E  3428               	retlw	40
   502  009F  3400               	retlw	0
   503  00A0                     __end_ofFindDeltaG@LG:	
   504  000B                     _INTCON	set	11
   505  000C                     _PORTA	set	12
   506  001B                     _PR2	set	27
   507  001C                     _T2CON	set	28
   508  001A                     _TMR2	set	26
   509  005F                     _GIE	set	95
   510  005E                     _PEIE	set	94
   511  008D                     _RCIF	set	141
   512  0089                     _TMR2IF	set	137
   513  008C                     _TXIF	set	140
   514  009B                     _ADRES	set	155
   515  009D                     _ADCON0	set	157
   516  009E                     _ADCON1	set	158
   517  0095                     _OPTION_REG	set	149
   518  0099                     _OSCCON	set	153
   519  008C                     _TRISA	set	140
   520  04E9                     _ADGO	set	1257
   521  048D                     _RCIE	set	1165
   522  0489                     _TMR2IE	set	1161
   523  0461                     _TRISA1	set	1121
   524  0462                     _TRISA2	set	1122
   525  048C                     _TXIE	set	1164
   526  011D                     _APFCON	set	285
   527  0117                     _FVRCON	set	279
   528  018C                     _ANSELA	set	396
   529  0199                     _RCREG	set	409
   530  019D                     _RCSTA	set	413
   531  019C                     _SPBRGH	set	412
   532  019B                     _SPBRGL	set	411
   533  019A                     _TXREG	set	410
   534  019E                     _TXSTA	set	414
   535  0CF8                     _ABDEN	set	3320
   536  0CFB                     _BRG16	set	3323
   537  0CF2                     _BRGH	set	3314
   538  0CEC                     _CREN	set	3308
   539  0CFC                     _SCKP	set	3324
   540  0CEF                     _SPEN	set	3311
   541  0CF4                     _SYNC	set	3316
   542  0CF5                     _TXEN	set	3317
   543  0216                     _SSP1CON2	set	534
   544  0212                     _SSPADD	set	530
   545  0211                     _SSPBUF	set	529
   546  0215                     _SSPCON1	set	533
   547  0216                     _SSPCON2	set	534
   548  0214                     _SSPSTAT	set	532
   549  020C                     _WPUA	set	524
   550  10B5                     _ACKDT	set	4277
   551  10B4                     _ACKEN	set	4276
   552  10B2                     _PEN	set	4274
   553  10B3                     _RCEN	set	4275
   554  10B1                     _RSEN	set	4273
   555  10B0                     _SEN	set	4272
   556  00A0                     STR_1:	
   557  00A0  3449               	retlw	73	;'I'
   558  00A1  3432               	retlw	50	;'2'
   559  00A2  3443               	retlw	67	;'C'
   560  00A3  3420               	retlw	32	;' '
   561  00A4  3452               	retlw	82	;'R'
   562  00A5  3465               	retlw	101	;'e'
   563  00A6  3461               	retlw	97	;'a'
   564  00A7  3464               	retlw	100	;'d'
   565  00A8  3420               	retlw	32	;' '
   566  00A9  3454               	retlw	84	;'T'
   567  00AA  3465               	retlw	101	;'e'
   568  00AB  3473               	retlw	115	;'s'
   569  00AC  3474               	retlw	116	;'t'
   570  00AD  3420               	retlw	32	;' '
   571  00AE  3450               	retlw	80	;'P'
   572  00AF  3461               	retlw	97	;'a'
   573  00B0  3473               	retlw	115	;'s'
   574  00B1  3473               	retlw	115	;'s'
   575  00B2  3465               	retlw	101	;'e'
   576  00B3  3464               	retlw	100	;'d'
   577  00B4  342C               	retlw	44	;','
   578  00B5  3420               	retlw	32	;' '
   579  00B6  344D               	retlw	77	;'M'
   580  00B7  3450               	retlw	80	;'P'
   581  00B8  3455               	retlw	85	;'U'
   582  00B9  3436               	retlw	54	;'6'
   583  00BA  3430               	retlw	48	;'0'
   584  00BB  3435               	retlw	53	;'5'
   585  00BC  3430               	retlw	48	;'0'
   586  00BD  3420               	retlw	32	;' '
   587  00BE  3441               	retlw	65	;'A'
   588  00BF  3464               	retlw	100	;'d'
   589  00C0  3464               	retlw	100	;'d'
   590  00C1  3472               	retlw	114	;'r'
   591  00C2  3465               	retlw	101	;'e'
   592  00C3  3473               	retlw	115	;'s'
   593  00C4  3473               	retlw	115	;'s'
   594  00C5  343A               	retlw	58	;':'
   595  00C6  3420               	retlw	32	;' '
   596  00C7  3430               	retlw	48	;'0'
   597  00C8  3478               	retlw	120	;'x'
   598  00C9  3436               	retlw	54	;'6'
   599  00CA  3438               	retlw	56	;'8'
   600  00CB  340D               	retlw	13
   601  00CC  340A               	retlw	10
   602  00CD  3400               	retlw	0
   603  00CE                     STR_2:	
   604  00CE  3445               	retlw	69	;'E'
   605  00CF  3452               	retlw	82	;'R'
   606  00D0  3452               	retlw	82	;'R'
   607  00D1  344F               	retlw	79	;'O'
   608  00D2  3452               	retlw	82	;'R'
   609  00D3  343A               	retlw	58	;':'
   610  00D4  3420               	retlw	32	;' '
   611  00D5  3449               	retlw	73	;'I'
   612  00D6  3432               	retlw	50	;'2'
   613  00D7  3443               	retlw	67	;'C'
   614  00D8  3420               	retlw	32	;' '
   615  00D9  3452               	retlw	82	;'R'
   616  00DA  3465               	retlw	101	;'e'
   617  00DB  3461               	retlw	97	;'a'
   618  00DC  3464               	retlw	100	;'d'
   619  00DD  3420               	retlw	32	;' '
   620  00DE  3454               	retlw	84	;'T'
   621  00DF  3465               	retlw	101	;'e'
   622  00E0  3473               	retlw	115	;'s'
   623  00E1  3474               	retlw	116	;'t'
   624  00E2  3420               	retlw	32	;' '
   625  00E3  3446               	retlw	70	;'F'
   626  00E4  3461               	retlw	97	;'a'
   627  00E5  3469               	retlw	105	;'i'
   628  00E6  346C               	retlw	108	;'l'
   629  00E7  3465               	retlw	101	;'e'
   630  00E8  3464               	retlw	100	;'d'
   631  00E9  342C               	retlw	44	;','
   632  00EA  3420               	retlw	32	;' '
   633  00EB  3453               	retlw	83	;'S'
   634  00EC  3474               	retlw	116	;'t'
   635  00ED  346F               	retlw	111	;'o'
   636  00EE  3470               	retlw	112	;'p'
   637  00EF  3470               	retlw	112	;'p'
   638  00F0  3469               	retlw	105	;'i'
   639  00F1  346E               	retlw	110	;'n'
   640  00F2  3467               	retlw	103	;'g'
   641  00F3  340D               	retlw	13
   642  00F4  340A               	retlw	10
   643  00F5  3400               	retlw	0
   644  00F6                     STR_18:	
   645  00F6  3454               	retlw	84	;'T'
   646  00F7  3465               	retlw	101	;'e'
   647  00F8  3473               	retlw	115	;'s'
   648  00F9  3474               	retlw	116	;'t'
   649  00FA  3420               	retlw	32	;' '
   650  00FB  344D               	retlw	77	;'M'
   651  00FC  3450               	retlw	80	;'P'
   652  00FD  3455               	retlw	85	;'U'
   653  00FE  3436               	retlw	54	;'6'
   654  00FF  3430               	retlw	48	;'0'
   655  0100  3435               	retlw	53	;'5'
   656  0101  3430               	retlw	48	;'0'
   657  0102  3420               	retlw	32	;' '
   658  0103  3463               	retlw	99	;'c'
   659  0104  346F               	retlw	111	;'o'
   660  0105  346D               	retlw	109	;'m'
   661  0106  346D               	retlw	109	;'m'
   662  0107  3475               	retlw	117	;'u'
   663  0108  346E               	retlw	110	;'n'
   664  0109  3469               	retlw	105	;'i'
   665  010A  3463               	retlw	99	;'c'
   666  010B  3461               	retlw	97	;'a'
   667  010C  3474               	retlw	116	;'t'
   668  010D  3469               	retlw	105	;'i'
   669  010E  346F               	retlw	111	;'o'
   670  010F  346E               	retlw	110	;'n'
   671  0110  340A               	retlw	10
   672  0111  340D               	retlw	13
   673  0112  3400               	retlw	0
   674  0113                     STR_3:	
   675  0113  340D               	retlw	13
   676  0114  340A               	retlw	10
   677  0115  344D               	retlw	77	;'M'
   678  0116  3450               	retlw	80	;'P'
   679  0117  3455               	retlw	85	;'U'
   680  0118  3436               	retlw	54	;'6'
   681  0119  3430               	retlw	48	;'0'
   682  011A  3435               	retlw	53	;'5'
   683  011B  3430               	retlw	48	;'0'
   684  011C  3420               	retlw	32	;' '
   685  011D  3453               	retlw	83	;'S'
   686  011E  3465               	retlw	101	;'e'
   687  011F  3474               	retlw	116	;'t'
   688  0120  3475               	retlw	117	;'u'
   689  0121  3470               	retlw	112	;'p'
   690  0122  3420               	retlw	32	;' '
   691  0123  3443               	retlw	67	;'C'
   692  0124  346F               	retlw	111	;'o'
   693  0125  346D               	retlw	109	;'m'
   694  0126  3470               	retlw	112	;'p'
   695  0127  346C               	retlw	108	;'l'
   696  0128  3465               	retlw	101	;'e'
   697  0129  3474               	retlw	116	;'t'
   698  012A  3465               	retlw	101	;'e'
   699  012B  340D               	retlw	13
   700  012C  340A               	retlw	10
   701  012D  3400               	retlw	0
   702  012E                     STR_14:	
   703  012E  3443               	retlw	67	;'C'
   704  012F  3461               	retlw	97	;'a'
   705  0130  3474               	retlw	116	;'t'
   706  0131  3461               	retlw	97	;'a'
   707  0132  3470               	retlw	112	;'p'
   708  0133  3475               	retlw	117	;'u'
   709  0134  346C               	retlw	108	;'l'
   710  0135  3474               	retlw	116	;'t'
   711  0136  3420               	retlw	32	;' '
   712  0137  3456               	retlw	86	;'V'
   713  0138  3431               	retlw	49	;'1'
   714  0139  342E               	retlw	46	;'.'
   715  013A  3430               	retlw	48	;'0'
   716  013B  3430               	retlw	48	;'0'
   717  013C  340D               	retlw	13
   718  013D  340A               	retlw	10
   719  013E  3400               	retlw	0
   720  013F                     STR_4:	
   721  013F  3420               	retlw	32	;' '
   722  0140  3454               	retlw	84	;'T'
   723  0141  3469               	retlw	105	;'i'
   724  0142  346D               	retlw	109	;'m'
   725  0143  3465               	retlw	101	;'e'
   726  0144  3428               	retlw	40	;'('
   727  0145  346D               	retlw	109	;'m'
   728  0146  3473               	retlw	115	;'s'
   729  0147  3429               	retlw	41	;')'
   730  0148  343D               	retlw	61	;'='
   731  0149  3400               	retlw	0
   732  014A                     STR_20:	
   733  014A  340D               	retlw	13
   734  014B  340A               	retlw	10
   735  014C  3452               	retlw	82	;'R'
   736  014D  3445               	retlw	69	;'E'
   737  014E  3441               	retlw	65	;'A'
   738  014F  3444               	retlw	68	;'D'
   739  0150  3459               	retlw	89	;'Y'
   740  0151  340D               	retlw	13
   741  0152  340A               	retlw	10
   742  0153  3400               	retlw	0
   743  0154                     STR_19:	
   744  0154  340D               	retlw	13
   745  0155  340A               	retlw	10
   746  0156  3449               	retlw	73	;'I'
   747  0157  3444               	retlw	68	;'D'
   748  0158  344C               	retlw	76	;'L'
   749  0159  3445               	retlw	69	;'E'
   750  015A  340D               	retlw	13
   751  015B  340A               	retlw	10
   752  015C  3400               	retlw	0
   753  015D                     STR_9:	
   754  015D  3420               	retlw	32	;' '
   755  015E  3447               	retlw	71	;'G'
   756  015F  3479               	retlw	121	;'y'
   757  0160  3472               	retlw	114	;'r'
   758  0161  346F               	retlw	111	;'o'
   759  0162  3420               	retlw	32	;' '
   760  0163  3478               	retlw	120	;'x'
   761  0164  343D               	retlw	61	;'='
   762  0165  3400               	retlw	0
   763  0166                     STR_15:	
   764  0166  3456               	retlw	86	;'V'
   765  0167  3444               	retlw	68	;'D'
   766  0168  3444               	retlw	68	;'D'
   767  0169  3420               	retlw	32	;' '
   768  016A  343D               	retlw	61	;'='
   769  016B  3420               	retlw	32	;' '
   770  016C  3400               	retlw	0
   771  016D                     STR_5:	
   772  016D  3420               	retlw	32	;' '
   773  016E  3420               	retlw	32	;' '
   774  016F  3447               	retlw	71	;'G'
   775  0170  3478               	retlw	120	;'x'
   776  0171  343D               	retlw	61	;'='
   777  0172  3400               	retlw	0
   778  0173                     STR_6:	
   779  0173  3420               	retlw	32	;' '
   780  0174  3420               	retlw	32	;' '
   781  0175  3447               	retlw	71	;'G'
   782  0176  3479               	retlw	121	;'y'
   783  0177  343D               	retlw	61	;'='
   784  0178  3400               	retlw	0
   785  0179                     STR_7:	
   786  0179  3420               	retlw	32	;' '
   787  017A  3420               	retlw	32	;' '
   788  017B  3447               	retlw	71	;'G'
   789  017C  347A               	retlw	122	;'z'
   790  017D  343D               	retlw	61	;'='
   791  017E  3400               	retlw	0
   792  017F                     STR_8:	
   793  017F  3420               	retlw	32	;' '
   794  0180  3420               	retlw	32	;' '
   795  0181  3447               	retlw	71	;'G'
   796  0182  343D               	retlw	61	;'='
   797  0183  3400               	retlw	0
   798  0184                     STR_17:	
   799  0184  3456               	retlw	86	;'V'
   800  0185  340D               	retlw	13
   801  0186  340A               	retlw	10
   802  0187  3400               	retlw	0
   803  0188                     STR_16:	
   804  0188  342D               	retlw	45	;'-'
   805  0189  342D               	retlw	45	;'-'
   806  018A  342D               	retlw	45	;'-'
   807  018B  3400               	retlw	0
   808  018C                     STR_10:	
   809  018C  3420               	retlw	32	;' '
   810  018D  3479               	retlw	121	;'y'
   811  018E  343D               	retlw	61	;'='
   812  018F  3400               	retlw	0
   813  0190                     STR_11:	
   814  0190  3420               	retlw	32	;' '
   815  0191  347A               	retlw	122	;'z'
   816  0192  343D               	retlw	61	;'='
   817  0193  3400               	retlw	0
   818  013C                     
   819                           ; #config settings
   820  0000                     
   821                           	psect	cinit
   822  0039                     start_initialization:	
   823  0039                     __initialization:	
   824                           
   825                           ; Clear objects allocated to COMMON
   826  0039  01FA               	clrf	__pbssCOMMON& (0+127)
   827  003A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   828                           
   829                           ; Clear objects allocated to BANK0
   830  003B  01E3               	clrf	__pbssBANK0& (0+127)
   831  003C  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   832  003D  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   833  003E  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   834  003F  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   835                           
   836                           ; Clear objects allocated to BANK1
   837  0040  30A0               	movlw	low __pbssBANK1
   838  0041  0084               	movwf	4
   839  0042  3000               	movlw	high __pbssBANK1
   840  0043  0085               	movwf	5
   841  0044  3048               	movlw	72
   842  0045  318B  2315  3180   	fcall	clear_ram0
   843                           
   844                           ; Initialize objects allocated to BANK0
   845  0048  3180  2003         	fcall	__pidataBANK0	;fetch initializer
   846  004A  00E8               	movwf	__pdataBANK0& (0+127)
   847  004B                     end_of_initialization:	
   848                           ;End of C runtime variable initialization code
   849                           
   850  004B                     __end_of__initialization:	
   851  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   852  004C  0020               	movlb	0
   853  004D  3181  2994         	ljmp	_main	;jump to C main() function
   854                           
   855                           	psect	bssCOMMON
   856  007A                     __pbssCOMMON:	
   857  007A                     _Timerms:	
   858  007A                     	ds	2
   859                           
   860                           	psect	bssBANK0
   861  0063                     __pbssBANK0:	
   862  0063                     _TimerCrash:	
   863  0063                     	ds	2
   864  0065                     _InFiFo:	
   865  0065                     	ds	1
   866  0066                     _NewMode:	
   867  0066                     	ds	1
   868  0067                     _OutFiFo:	
   869  0067                     	ds	1
   870                           
   871                           	psect	dataBANK0
   872  0068                     __pdataBANK0:	
   873  0068                     _Mode:	
   874  0068                     	ds	1
   875                           
   876                           	psect	bssBANK1
   877  00A0                     __pbssBANK1:	
   878  00A0                     _SerialBuffer:	
   879  00A0                     	ds	32
   880  00C0                     _PeakData:	
   881  00C0                     	ds	20
   882  00D4                     _CurrentData:	
   883  00D4                     	ds	20
   884                           
   885                           	psect	clrtext
   886  0B15                     clear_ram0:	
   887                           ;	Called with FSR0 containing the base address, and
   888                           ;	WREG with the size to clear
   889                           
   890  0B15  0064               	clrwdt	;clear the watchdog before getting into this loop
   891  0B16                     clrloop0:	
   892  0B16  0180               	clrf	0	;clear RAM location pointed to by FSR
   893  0B17  3101               	addfsr 0,1
   894  0B18  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   895  0B19  2B16               	goto	clrloop0	;have we reached the end yet?
   896  0B1A  3400               	retlw	0	;all done for this memory range, return
   897                           
   898                           	psect	cstackCOMMON
   899  0070                     __pcstackCOMMON:	
   900  0070                     ?_i2c_Init:	
   901  0070                     ?_i2c_Wait:	
   902                           ; 0 bytes @ 0x0
   903                           
   904  0070                     ?_i2c_Start:	
   905                           ; 0 bytes @ 0x0
   906                           
   907  0070                     ?_i2c_Restart:	
   908                           ; 0 bytes @ 0x0
   909                           
   910  0070                     ?_i2c_Stop:	
   911                           ; 0 bytes @ 0x0
   912                           
   913  0070                     ?_i2c_Write:	
   914                           ; 0 bytes @ 0x0
   915                           
   916  0070                     ?_Setup_MPU6050:	
   917                           ; 0 bytes @ 0x0
   918                           
   919  0070                     ?_Get_Accel_Values:	
   920                           ; 0 bytes @ 0x0
   921                           
   922  0070                     ?_Init1msTimer:	
   923                           ; 0 bytes @ 0x0
   924                           
   925  0070                     ?_isr:	
   926                           ; 0 bytes @ 0x0
   927                           
   928  0070                     ??_isr:	
   929                           ; 0 bytes @ 0x0
   930                           
   931  0070                     ?_putch:	
   932                           ; 0 bytes @ 0x0
   933                           
   934  0070                     ?_CalculateSumOfSquares:	
   935                           ; 0 bytes @ 0x0
   936                           
   937  0070                     ?_DisplayInfo:	
   938                           ; 0 bytes @ 0x0
   939                           
   940  0070                     ?_putHexNibble:	
   941                           ; 0 bytes @ 0x0
   942                           
   943  0070                     ?_DisplayData:	
   944                           ; 0 bytes @ 0x0
   945                           
   946  0070                     ?_printVersion:	
   947                           ; 0 bytes @ 0x0
   948                           
   949  0070                     ?_printVoltage:	
   950                           ; 0 bytes @ 0x0
   951                           
   952  0070                     ?_i2c_Read:	
   953                           ; 0 bytes @ 0x0
   954                           
   955  0070                     ?_GotInt_MPU6050:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_FindDeltaG:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_MPU6050_Test_I2C:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_main:	
   965                           ; 2 bytes @ 0x0
   966                           
   967                           
   968                           ; 2 bytes @ 0x0
   969  0070                     	ds	2
   970  0072                     ??_i2c_Init:	
   971  0072                     ??_i2c_Wait:	
   972                           ; 0 bytes @ 0x2
   973                           
   974  0072                     ??_i2c_Start:	
   975                           ; 0 bytes @ 0x2
   976                           
   977  0072                     ??_i2c_Restart:	
   978                           ; 0 bytes @ 0x2
   979                           
   980  0072                     ??_i2c_Stop:	
   981                           ; 0 bytes @ 0x2
   982                           
   983  0072                     ??_i2c_Write:	
   984                           ; 0 bytes @ 0x2
   985                           
   986  0072                     ?_i2c_Address:	
   987                           ; 0 bytes @ 0x2
   988                           
   989  0072                     ??_i2c_Read:	
   990                           ; 0 bytes @ 0x2
   991                           
   992  0072                     ??_Init1msTimer:	
   993                           ; 0 bytes @ 0x2
   994                           
   995  0072                     ??_putch:	
   996                           ; 0 bytes @ 0x2
   997                           
   998  0072                     ??_FindDeltaG:	
   999                           ; 0 bytes @ 0x2
  1000                           
  1001  0072                     ?_isqrt:	
  1002                           ; 0 bytes @ 0x2
  1003                           
  1004  0072                     ?___lwdiv:	
  1005                           ; 2 bytes @ 0x2
  1006                           
  1007  0072                     ?___lwmod:	
  1008                           ; 2 bytes @ 0x2
  1009                           
  1010  0072                     ?___lmul:	
  1011                           ; 2 bytes @ 0x2
  1012                           
  1013  0072                     ?___aldiv:	
  1014                           ; 4 bytes @ 0x2
  1015                           
  1016  0072                     ?___lldiv:	
  1017                           ; 4 bytes @ 0x2
  1018                           
  1019  0072                     ?___llmod:	
  1020                           ; 4 bytes @ 0x2
  1021                           
  1022  0072                     i2c_Write@data:	
  1023                           ; 4 bytes @ 0x2
  1024                           
  1025  0072                     i2c_Address@mode:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028  0072                     ___lwdiv@divisor:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031  0072                     ___lwmod@divisor:	
  1032                           ; 2 bytes @ 0x2
  1033                           
  1034  0072                     isqrt@val:	
  1035                           ; 2 bytes @ 0x2
  1036                           
  1037  0072                     ___lmul@multiplier:	
  1038                           ; 4 bytes @ 0x2
  1039                           
  1040  0072                     ___aldiv@divisor:	
  1041                           ; 4 bytes @ 0x2
  1042                           
  1043  0072                     ___lldiv@divisor:	
  1044                           ; 4 bytes @ 0x2
  1045                           
  1046  0072                     ___llmod@divisor:	
  1047                           ; 4 bytes @ 0x2
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x2
  1051  0072                     	ds	1
  1052  0073                     ??_i2c_Address:	
  1053  0073                     i2c_Read@ack:	
  1054                           ; 0 bytes @ 0x3
  1055                           
  1056  0073                     putch@char_out:	
  1057                           ; 1 bytes @ 0x3
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x3
  1061  0073                     	ds	1
  1062  0074                     i2c_Address@address:	
  1063  0074                     i2c_Read@i2cReadData:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0074                     putch@temp:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0074                     ___lwdiv@dividend:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0074                     ___lwmod@dividend:	
  1073                           ; 2 bytes @ 0x4
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x4
  1077  0074                     	ds	1
  1078  0075                     ?_cputs:	
  1079  0075                     ??_putHexNibble:	
  1080                           ; 0 bytes @ 0x5
  1081                           
  1082  0075                     i2c_Address@l_address:	
  1083                           ; 0 bytes @ 0x5
  1084                           
  1085  0075                     cputs@s:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x5
  1090  0075                     	ds	1
  1091  0076                     ?_LDByteWriteI2C:	
  1092  0076                     ?_LDByteReadI2C:	
  1093                           ; 0 bytes @ 0x6
  1094                           
  1095  0076                     ??___lwdiv:	
  1096                           ; 0 bytes @ 0x6
  1097                           
  1098  0076                     ??___lwmod:	
  1099                           ; 0 bytes @ 0x6
  1100                           
  1101  0076                     LDByteWriteI2C@LowAdd:	
  1102                           ; 0 bytes @ 0x6
  1103                           
  1104  0076                     LDByteReadI2C@Address:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107  0076                     putHexNibble@value:	
  1108                           ; 1 bytes @ 0x6
  1109                           
  1110  0076                     ___lmul@multiplicand:	
  1111                           ; 1 bytes @ 0x6
  1112                           
  1113  0076                     ___aldiv@dividend:	
  1114                           ; 4 bytes @ 0x6
  1115                           
  1116  0076                     ___lldiv@dividend:	
  1117                           ; 4 bytes @ 0x6
  1118                           
  1119  0076                     ___llmod@dividend:	
  1120                           ; 4 bytes @ 0x6
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x6
  1124  0076                     	ds	1
  1125  0077                     ??_cputs:	
  1126  0077                     ?_putHex:	
  1127                           ; 0 bytes @ 0x7
  1128                           
  1129  0077                     LDByteWriteI2C@data:	
  1130                           ; 0 bytes @ 0x7
  1131                           
  1132  0077                     LDByteReadI2C@Data:	
  1133                           ; 1 bytes @ 0x7
  1134                           
  1135  0077                     ___lwmod@counter:	
  1136                           ; 1 bytes @ 0x7
  1137                           
  1138  0077                     putHex@value:	
  1139                           ; 1 bytes @ 0x7
  1140                           
  1141  0077                     ___lwdiv@quotient:	
  1142                           ; 2 bytes @ 0x7
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  0077                     	ds	1
  1147  0078                     ??_LDByteWriteI2C:	
  1148  0078                     ??_Setup_MPU6050:	
  1149                           ; 0 bytes @ 0x8
  1150                           
  1151  0078                     ??_printVersion:	
  1152                           ; 0 bytes @ 0x8
  1153                           
  1154  0078                     LDByteReadI2C@Length:	
  1155                           ; 0 bytes @ 0x8
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x8
  1159  0078                     	ds	1
  1160  0079                     ??_LDByteReadI2C:	
  1161  0079                     ??_DisplayData:	
  1162                           ; 0 bytes @ 0x9
  1163                           
  1164  0079                     ___lwdiv@counter:	
  1165                           ; 0 bytes @ 0x9
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x9
  1169  0079                     	ds	1
  1170  007A                     ??_printCentiValue:	
  1171  007A                     ??_printDeciValue:	
  1172                           ; 0 bytes @ 0xA
  1173                           
  1174  007A                     ??_printGForce:	
  1175                           ; 0 bytes @ 0xA
  1176                           
  1177  007A                     ??_printGyro:	
  1178                           ; 0 bytes @ 0xA
  1179                           
  1180  007A                     ??_printUShort:	
  1181                           ; 0 bytes @ 0xA
  1182                           
  1183  007A                     ??___lmul:	
  1184                           ; 0 bytes @ 0xA
  1185                           
  1186                           
  1187                           	psect	cstackBANK0
  1188  0020                     __pcstackBANK0:	
  1189                           ; 0 bytes @ 0xA
  1190                           
  1191  0020                     ??_isqrt:	
  1192  0020                     ??_putHex:	
  1193                           ; 0 bytes @ 0x0
  1194                           
  1195  0020                     ??___aldiv:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  0020                     ??___lldiv:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  0020                     ??___llmod:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  0020                     ?_utoa:	
  1205                           ; 0 bytes @ 0x0
  1206                           
  1207  0020                     LDByteReadI2C@i2cSlaveAddress:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0020                     LDByteWriteI2C@ErrorCode:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0020                     utoa@val:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216  0020                     ___lmul@product:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x0
  1221  0020                     	ds	1
  1222  0021                     ??_MPU6050_Test_I2C:	
  1223  0021                     ??_Get_Accel_Values:	
  1224                           ; 0 bytes @ 0x1
  1225                           
  1226  0021                     ??_GotInt_MPU6050:	
  1227                           ; 0 bytes @ 0x1
  1228                           
  1229  0021                     ___aldiv@counter:	
  1230                           ; 0 bytes @ 0x1
  1231                           
  1232  0021                     ___llmod@counter:	
  1233                           ; 1 bytes @ 0x1
  1234                           
  1235  0021                     ___lldiv@quotient:	
  1236                           ; 1 bytes @ 0x1
  1237                           
  1238                           
  1239                           ; 4 bytes @ 0x1
  1240  0021                     	ds	1
  1241  0022                     LDByteWriteI2C@i2cSlaveAddress:	
  1242  0022                     ___aldiv@sign:	
  1243                           ; 1 bytes @ 0x2
  1244                           
  1245  0022                     utoa@base:	
  1246                           ; 1 bytes @ 0x2
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250  0022                     	ds	1
  1251  0023                     MPU6050_Test_I2C@Data:	
  1252  0023                     GotInt_MPU6050@uc_temp:	
  1253                           ; 1 bytes @ 0x3
  1254                           
  1255  0023                     Setup_MPU6050@loop:	
  1256                           ; 1 bytes @ 0x3
  1257                           
  1258  0023                     ___aldiv@quotient:	
  1259                           ; 2 bytes @ 0x3
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x3
  1263  0023                     	ds	1
  1264  0024                     ??_utoa:	
  1265  0024                     ??_CalculateSumOfSquares:	
  1266                           ; 0 bytes @ 0x4
  1267                           
  1268                           
  1269                           ; 0 bytes @ 0x4
  1270  0024                     	ds	1
  1271  0025                     Setup_MPU6050@TheReg:	
  1272  0025                     ___lldiv@counter:	
  1273                           ; 1 bytes @ 0x5
  1274                           
  1275  0025                     utoa@v:	
  1276                           ; 1 bytes @ 0x5
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0x5
  1280  0025                     	ds	1
  1281  0026                     ?_ultoa:	
  1282  0026                     ultoa@val:	
  1283                           ; 1 bytes @ 0x6
  1284                           
  1285  0026                     Get_Accel_Values@cval:	
  1286                           ; 4 bytes @ 0x6
  1287                           
  1288                           
  1289                           ; 14 bytes @ 0x6
  1290  0026                     	ds	1
  1291  0027                     utoa@c:	
  1292                           
  1293                           ; 1 bytes @ 0x7
  1294  0027                     	ds	1
  1295  0028                     utoa@buf:	
  1296                           
  1297                           ; 1 bytes @ 0x8
  1298  0028                     	ds	1
  1299  0029                     ?_printUShort:	
  1300  0029                     printUShort@value:	
  1301                           ; 0 bytes @ 0x9
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x9
  1305  0029                     	ds	1
  1306  002A                     ultoa@base:	
  1307                           
  1308                           ; 2 bytes @ 0xA
  1309  002A                     	ds	1
  1310  002B                     printUShort@buffer:	
  1311                           
  1312                           ; 16 bytes @ 0xB
  1313  002B                     	ds	1
  1314  002C                     ??_ultoa:	
  1315  002C                     _CalculateSumOfSquares$239:	
  1316                           ; 0 bytes @ 0xC
  1317                           
  1318  002C                     isqrt@temp:	
  1319                           ; 2 bytes @ 0xC
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0xC
  1323  002C                     	ds	1
  1324  002D                     ultoa@v:	
  1325                           
  1326                           ; 4 bytes @ 0xD
  1327  002D                     	ds	1
  1328  002E                     _CalculateSumOfSquares$240:	
  1329                           
  1330                           ; 2 bytes @ 0xE
  1331  002E                     	ds	2
  1332  0030                     _CalculateSumOfSquares$241:	
  1333  0030                     isqrt@bshft:	
  1334                           ; 2 bytes @ 0x10
  1335                           
  1336                           
  1337                           ; 4 bytes @ 0x10
  1338  0030                     	ds	1
  1339  0031                     ultoa@c:	
  1340                           
  1341                           ; 1 bytes @ 0x11
  1342  0031                     	ds	1
  1343  0032                     ultoa@buf:	
  1344  0032                     CalculateSumOfSquares@GxSquare:	
  1345                           ; 1 bytes @ 0x12
  1346                           
  1347                           
  1348                           ; 4 bytes @ 0x12
  1349  0032                     	ds	1
  1350  0033                     ?_ltoa:	
  1351  0033                     ltoa@val:	
  1352                           ; 1 bytes @ 0x13
  1353                           
  1354                           
  1355                           ; 4 bytes @ 0x13
  1356  0033                     	ds	1
  1357  0034                     isqrt@g:	
  1358                           
  1359                           ; 4 bytes @ 0x14
  1360  0034                     	ds	2
  1361  0036                     CalculateSumOfSquares@GySquare:	
  1362                           
  1363                           ; 4 bytes @ 0x16
  1364  0036                     	ds	1
  1365  0037                     ltoa@base:	
  1366                           
  1367                           ; 2 bytes @ 0x17
  1368  0037                     	ds	1
  1369  0038                     isqrt@b:	
  1370                           
  1371                           ; 4 bytes @ 0x18
  1372  0038                     	ds	1
  1373  0039                     ??_ltoa:	
  1374                           
  1375                           ; 0 bytes @ 0x19
  1376  0039                     	ds	1
  1377  003A                     ltoa@cp:	
  1378  003A                     CalculateSumOfSquares@GzSquare:	
  1379                           ; 1 bytes @ 0x1A
  1380                           
  1381                           
  1382                           ; 4 bytes @ 0x1A
  1383  003A                     	ds	1
  1384  003B                     ltoa@buf:	
  1385                           
  1386                           ; 1 bytes @ 0x1B
  1387  003B                     	ds	1
  1388  003C                     ?_printCentiValue:	
  1389  003C                     ?_printDeciValue:	
  1390                           ; 0 bytes @ 0x1C
  1391                           
  1392  003C                     printCentiValue@value:	
  1393                           ; 0 bytes @ 0x1C
  1394                           
  1395  003C                     printDeciValue@value:	
  1396                           ; 4 bytes @ 0x1C
  1397                           
  1398                           
  1399                           ; 4 bytes @ 0x1C
  1400  003C                     	ds	4
  1401  0040                     printCentiValue@buffer:	
  1402  0040                     printDeciValue@buffer:	
  1403                           ; 16 bytes @ 0x20
  1404                           
  1405                           
  1406                           ; 16 bytes @ 0x20
  1407  0040                     	ds	16
  1408  0050                     printCentiValue@T:	
  1409  0050                     printDeciValue@T:	
  1410                           ; 2 bytes @ 0x30
  1411                           
  1412                           
  1413                           ; 2 bytes @ 0x30
  1414  0050                     	ds	2
  1415  0052                     printCentiValue@_lvalue:	
  1416  0052                     printDeciValue@_lvalue:	
  1417                           ; 4 bytes @ 0x32
  1418                           
  1419                           
  1420                           ; 4 bytes @ 0x32
  1421  0052                     	ds	4
  1422  0056                     ?_printGForce:	
  1423  0056                     ?_printGyro:	
  1424                           ; 0 bytes @ 0x36
  1425                           
  1426  0056                     ??_printVoltage:	
  1427                           ; 0 bytes @ 0x36
  1428                           
  1429  0056                     printGForce@RawG:	
  1430                           ; 0 bytes @ 0x36
  1431                           
  1432  0056                     printGyro@RawG:	
  1433                           ; 4 bytes @ 0x36
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x36
  1437  0056                     	ds	3
  1438  0059                     printVoltage@VDDValue:	
  1439                           
  1440                           ; 4 bytes @ 0x39
  1441  0059                     	ds	1
  1442  005A                     ??_DisplayInfo:	
  1443                           
  1444                           ; 0 bytes @ 0x3A
  1445  005A                     	ds	2
  1446  005C                     DisplayInfo@Gt:	
  1447                           
  1448                           ; 2 bytes @ 0x3C
  1449  005C                     	ds	1
  1450  005D                     printVoltage@value:	
  1451                           
  1452                           ; 2 bytes @ 0x3D
  1453  005D                     	ds	1
  1454  005E                     DisplayInfo@gs:	
  1455                           
  1456                           ; 1 bytes @ 0x3E
  1457  005E                     	ds	1
  1458  005F                     ??_main:	
  1459                           
  1460                           ; 0 bytes @ 0x3F
  1461  005F                     	ds	3
  1462  0062                     main@UserKey:	
  1463                           
  1464                           ; 1 bytes @ 0x42
  1465  0062                     	ds	1
  1466                           
  1467                           	psect	maintext
  1468  0194                     __pmaintext:	
  1469 ;;
  1470 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1471 ;;
  1472 ;; *************** function _main *****************
  1473 ;; Defined at:
  1474 ;;		line 516 in file "blueGyro.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  m_Timer         2    0        unsigned short 
  1479 ;;  UserKey         1   66[BANK0 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2  308[None  ] int 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : B1F/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1489 ;;      Params:         0       0       0       0
  1490 ;;      Locals:         0       1       0       0
  1491 ;;      Temps:          0       3       0       0
  1492 ;;      Totals:         0       4       0       0
  1493 ;;Total ram usage:        4 bytes
  1494 ;; Hardware stack levels required when called:    7
  1495 ;; This function calls:
  1496 ;;		_CalculateSumOfSquares
  1497 ;;		_DisplayData
  1498 ;;		_DisplayInfo
  1499 ;;		_FindDeltaG
  1500 ;;		_Get_Accel_Values
  1501 ;;		_GotInt_MPU6050
  1502 ;;		_Init1msTimer
  1503 ;;		_MPU6050_Test_I2C
  1504 ;;		_Setup_MPU6050
  1505 ;;		_cputs
  1506 ;;		_i2c_Init
  1507 ;;		_printVersion
  1508 ;;		_printVoltage
  1509 ;; This function is called by:
  1510 ;;		Startup code after reset
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _main
  1516  0194                     _main:	
  1517                           
  1518                           ;blueGyro.c: 517: unsigned short m_Timer;
  1519                           ;blueGyro.c: 518: char UserKey;
  1520                           ;blueGyro.c: 520: OSCCON = 0b11110000;
  1521                           
  1522                           ;incstack = 0
  1523                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1524  0194  30F0               	movlw	240
  1525  0195  0021               	movlb	1	; select bank1
  1526  0196  0099               	movwf	25	;volatile
  1527                           
  1528                           ;blueGyro.c: 521: OPTION_REG = 0b00000011;
  1529  0197  3003               	movlw	3
  1530  0198  0095               	movwf	21	;volatile
  1531                           
  1532                           ;blueGyro.c: 522: ANSELA = 0b00000;
  1533  0199  0023               	movlb	3	; select bank3
  1534  019A  018C               	clrf	12	;volatile
  1535                           
  1536                           ;blueGyro.c: 523: PORTA = 0b00100000;
  1537  019B  3020               	movlw	32
  1538  019C  0020               	movlb	0	; select bank0
  1539  019D  008C               	movwf	12	;volatile
  1540                           
  1541                           ;blueGyro.c: 524: WPUA = 0b00111111;
  1542  019E  303F               	movlw	63
  1543  019F  0024               	movlb	4	; select bank4
  1544  01A0  008C               	movwf	12	;volatile
  1545                           
  1546                           ;blueGyro.c: 525: TRISA = 0b00011111;
  1547  01A1  301F               	movlw	31
  1548  01A2  0021               	movlb	1	; select bank1
  1549  01A3  008C               	movwf	12	;volatile
  1550                           
  1551                           ;blueGyro.c: 527: INTCON = 0b00000000;
  1552  01A4  018B               	clrf	11	;volatile
  1553                           
  1554                           ;blueGyro.c: 531: ADCON0=0;
  1555  01A5  019D               	clrf	29	;volatile
  1556                           
  1557                           ;blueGyro.c: 532: FVRCON=0;
  1558  01A6  0022               	movlb	2	; select bank2
  1559  01A7  0197               	clrf	23	;volatile
  1560                           
  1561                           ;blueGyro.c: 536: APFCON = 0b10000100;
  1562  01A8  3084               	movlw	132
  1563  01A9  009D               	movwf	29	;volatile
  1564                           
  1565                           ;blueGyro.c: 537: TXSTA = 0b10000010;
  1566  01AA  3082               	movlw	130
  1567  01AB  0023               	movlb	3	; select bank3
  1568  01AC  009E               	movwf	30	;volatile
  1569                           
  1570                           ;blueGyro.c: 538: RCSTA = 0;
  1571  01AD  019D               	clrf	29	;volatile
  1572                           
  1573                           ;blueGyro.c: 540: BRGH=1;
  1574  01AE  151E               	bsf	30,2	;volatile
  1575                           
  1576                           ;blueGyro.c: 542: BRG16 = 0;
  1577  01AF  119F               	bcf	31,3	;volatile
  1578                           
  1579                           ;blueGyro.c: 543: SYNC =0;
  1580  01B0  121E               	bcf	30,4	;volatile
  1581                           
  1582                           ;blueGyro.c: 545: SPBRGL = 16;
  1583  01B1  3010               	movlw	16
  1584  01B2  009B               	movwf	27	;volatile
  1585                           
  1586                           ;blueGyro.c: 547: SPBRGH =0;
  1587  01B3  019C               	clrf	28	;volatile
  1588                           
  1589                           ;blueGyro.c: 548: TXEN =1;
  1590  01B4  169E               	bsf	30,5	;volatile
  1591                           
  1592                           ;blueGyro.c: 549: SPEN = 1;
  1593  01B5  179D               	bsf	29,7	;volatile
  1594                           
  1595                           ;blueGyro.c: 550: CREN = 1;
  1596  01B6  161D               	bsf	29,4	;volatile
  1597                           
  1598                           ;blueGyro.c: 551: RCIE =0;
  1599  01B7  0021               	movlb	1	; select bank1
  1600  01B8  1291               	bcf	17,5	;volatile
  1601                           
  1602                           ;blueGyro.c: 552: TXIE =0;
  1603  01B9  1211               	bcf	17,4	;volatile
  1604                           
  1605                           ;blueGyro.c: 553: RCIF =0;
  1606  01BA  0020               	movlb	0	; select bank0
  1607  01BB  1291               	bcf	17,5	;volatile
  1608                           
  1609                           ;blueGyro.c: 554: TXIF = 0;
  1610  01BC  1211               	bcf	17,4	;volatile
  1611                           
  1612                           ;blueGyro.c: 555: SCKP = 0;
  1613  01BD  0023               	movlb	3	; select bank3
  1614  01BE  121F               	bcf	31,4	;volatile
  1615                           
  1616                           ;blueGyro.c: 556: ABDEN = 0;
  1617  01BF  101F               	bcf	31,0	;volatile
  1618                           
  1619                           ;blueGyro.c: 558: InFiFo=0;
  1620  01C0  0020               	movlb	0	; select bank0
  1621  01C1  01E5               	clrf	_InFiFo	;volatile
  1622                           
  1623                           ;blueGyro.c: 559: OutFiFo=0;
  1624  01C2  01E7               	clrf	_OutFiFo	;volatile
  1625                           
  1626                           ;blueGyro.c: 560: GIE = 1;
  1627  01C3  178B               	bsf	11,7	;volatile
  1628                           
  1629                           ;blueGyro.c: 561: PEIE =1;
  1630  01C4  170B               	bsf	11,6	;volatile
  1631                           
  1632                           ;blueGyro.c: 565: Init1msTimer() ;
  1633  01C5  318B  234C  3181   	fcall	_Init1msTimer
  1634                           
  1635                           ;blueGyro.c: 570: _delay((unsigned long)((100)*(32000000/4000.0)));
  1636  01C8  3005               	movlw	5
  1637  01C9  0020               	movlb	0	; select bank0
  1638  01CA  00E1               	movwf	??_main+2
  1639  01CB  300F               	movlw	15
  1640  01CC  00E0               	movwf	??_main+1
  1641  01CD  30F4               	movlw	244
  1642  01CE  00DF               	movwf	??_main
  1643  01CF                     u2727:	
  1644  01CF  0BDF               	decfsz	??_main,f
  1645  01D0  29CF               	goto	u2727
  1646  01D1  0BE0               	decfsz	??_main+1,f
  1647  01D2  29CF               	goto	u2727
  1648  01D3  0BE1               	decfsz	??_main+2,f
  1649  01D4  29CF               	goto	u2727
  1650                           
  1651                           ;blueGyro.c: 571: printVersion();
  1652  01D5  318B  2322  3181   	fcall	_printVersion
  1653                           
  1654                           ;blueGyro.c: 572: printVoltage();
  1655  01D8  318F  272F  3181   	fcall	_printVoltage
  1656                           
  1657                           ;blueGyro.c: 575: _delay((unsigned long)((2000)*(32000000/4000.0)));
  1658  01DB  3052               	movlw	82
  1659  01DC  0020               	movlb	0	; select bank0
  1660  01DD  00E1               	movwf	??_main+2
  1661  01DE  302C               	movlw	44
  1662  01DF  00E0               	movwf	??_main+1
  1663  01E0  304F               	movlw	79
  1664  01E1  00DF               	movwf	??_main
  1665  01E2                     u2737:	
  1666  01E2  0BDF               	decfsz	??_main,f
  1667  01E3  29E2               	goto	u2737
  1668  01E4  0BE0               	decfsz	??_main+1,f
  1669  01E5  29E2               	goto	u2737
  1670  01E6  0BE1               	decfsz	??_main+2,f
  1671  01E7  29E2               	goto	u2737
  1672  01E8  3200               	nop2
  1673                           
  1674                           ;blueGyro.c: 576: cputs("Test MPU6050 communication\n\r");
  1675  01E9  30F6               	movlw	low (STR_18| (0+32768))
  1676  01EA  00F5               	movwf	cputs@s
  1677  01EB  3080               	movlw	high (STR_18| (0+32768))
  1678  01EC  00F6               	movwf	cputs@s+1
  1679  01ED  318B  235B  3181   	fcall	_cputs
  1680                           
  1681                           ;blueGyro.c: 577: i2c_Init();
  1682  01F0  318B  2331  3181   	fcall	_i2c_Init
  1683                           
  1684                           ;blueGyro.c: 578: _delay((unsigned long)((2000)*(32000000/4000.0)));
  1685  01F3  3052               	movlw	82
  1686  01F4  0020               	movlb	0	; select bank0
  1687  01F5  00E1               	movwf	??_main+2
  1688  01F6  302C               	movlw	44
  1689  01F7  00E0               	movwf	??_main+1
  1690  01F8  304F               	movlw	79
  1691  01F9  00DF               	movwf	??_main
  1692  01FA                     u2747:	
  1693  01FA  0BDF               	decfsz	??_main,f
  1694  01FB  29FA               	goto	u2747
  1695  01FC  0BE0               	decfsz	??_main+1,f
  1696  01FD  29FA               	goto	u2747
  1697  01FE  0BE1               	decfsz	??_main+2,f
  1698  01FF  29FA               	goto	u2747
  1699  0200  3200               	nop2
  1700                           
  1701                           ;blueGyro.c: 579: MPU6050_Test_I2C();
  1702  0201  318C  240E  3181   	fcall	_MPU6050_Test_I2C
  1703                           
  1704                           ;blueGyro.c: 580: Setup_MPU6050();
  1705  0204  318F  2795  3181   	fcall	_Setup_MPU6050
  1706                           
  1707                           ;blueGyro.c: 582: Mode= RCREG;
  1708  0207  0023               	movlb	3	; select bank3
  1709  0208  0819               	movf	25,w	;volatile
  1710  0209  0020               	movlb	0	; select bank0
  1711  020A  00DF               	movwf	??_main
  1712  020B  085F               	movf	??_main,w
  1713  020C  00E8               	movwf	_Mode	;volatile
  1714                           
  1715                           ;blueGyro.c: 583: Mode= 255;
  1716  020D  30FF               	movlw	255
  1717  020E  00DF               	movwf	??_main
  1718  020F  085F               	movf	??_main,w
  1719  0210  00E8               	movwf	_Mode	;volatile
  1720  0211                     l2847:	
  1721                           ;blueGyro.c: 585: while(1)
  1722                           
  1723                           
  1724                           ;blueGyro.c: 586: {
  1725                           ;blueGyro.c: 589: if(RCIF)
  1726  0211  0020               	movlb	0	; select bank0
  1727  0212  1E91               	btfss	17,5	;volatile
  1728  0213  2A5C               	goto	l2887
  1729                           
  1730                           ;blueGyro.c: 590: {
  1731                           ;blueGyro.c: 591: UserKey = RCREG;
  1732  0214  0023               	movlb	3	; select bank3
  1733  0215  0819               	movf	25,w	;volatile
  1734  0216  0020               	movlb	0	; select bank0
  1735  0217  00DF               	movwf	??_main
  1736  0218  085F               	movf	??_main,w
  1737  0219  00E2               	movwf	main@UserKey
  1738                           
  1739                           ;blueGyro.c: 593: if ((UserKey == 'G' ) || (UserKey == 'g' ) || (UserKey == 0xd))
  1740  021A  3047               	movlw	71
  1741  021B  0662               	xorwf	main@UserKey,w
  1742  021C  1903               	btfsc	3,2
  1743  021D  2A26               	goto	l2857
  1744  021E  3067               	movlw	103
  1745  021F  0662               	xorwf	main@UserKey,w
  1746  0220  1903               	btfsc	3,2
  1747  0221  2A26               	goto	l2857
  1748  0222  300D               	movlw	13
  1749  0223  0662               	xorwf	main@UserKey,w
  1750  0224  1D03               	btfss	3,2
  1751  0225  2A28               	goto	l2859
  1752  0226                     l2857:	
  1753                           
  1754                           ;blueGyro.c: 594: NewMode=1;
  1755  0226  3001               	movlw	1
  1756  0227  2A41               	goto	L2
  1757  0228                     l2859:	
  1758                           
  1759                           ;blueGyro.c: 595: else if (UserKey== 27)
  1760  0228  301B               	movlw	27
  1761  0229  0662               	xorwf	main@UserKey,w
  1762  022A  1D03               	btfss	3,2
  1763  022B  2A2E               	goto	l2863
  1764                           
  1765                           ;blueGyro.c: 596: NewMode= 0;
  1766  022C  01E6               	clrf	_NewMode	;volatile
  1767  022D  2A5C               	goto	l2887
  1768  022E                     l2863:	
  1769                           
  1770                           ;blueGyro.c: 597: else if ((UserKey== 'I') || (UserKey== 'i'))
  1771  022E  3049               	movlw	73
  1772  022F  0662               	xorwf	main@UserKey,w
  1773  0230  1903               	btfsc	3,2
  1774  0231  2A36               	goto	l2867
  1775  0232  3069               	movlw	105
  1776  0233  0662               	xorwf	main@UserKey,w
  1777  0234  1D03               	btfss	3,2
  1778  0235  2A38               	goto	l2869
  1779  0236                     l2867:	
  1780                           
  1781                           ;blueGyro.c: 598: NewMode= 100;
  1782  0236  3064               	movlw	100
  1783  0237  2A41               	goto	L2
  1784  0238                     l2869:	
  1785                           
  1786                           ;blueGyro.c: 599: else if ((UserKey == 'h' ) || (UserKey == 'H'))
  1787  0238  3068               	movlw	104
  1788  0239  0662               	xorwf	main@UserKey,w
  1789  023A  1903               	btfsc	3,2
  1790  023B  2A40               	goto	l2873
  1791  023C  3048               	movlw	72
  1792  023D  0662               	xorwf	main@UserKey,w
  1793  023E  1D03               	btfss	3,2
  1794  023F  2A45               	goto	l2875
  1795  0240                     l2873:	
  1796                           
  1797                           ;blueGyro.c: 600: NewMode = 3;
  1798  0240  3003               	movlw	3
  1799  0241                     L2:	
  1800  0241  00DF               	movwf	??_main
  1801  0242  085F               	movf	??_main,w
  1802  0243  00E6               	movwf	_NewMode	;volatile
  1803  0244  2A5C               	goto	l2887
  1804  0245                     l2875:	
  1805                           
  1806                           ;blueGyro.c: 601: else
  1807                           ;blueGyro.c: 602: if(Mode == 0)
  1808  0245  0868               	movf	_Mode,w	;volatile
  1809  0246  1D03               	btfss	3,2
  1810  0247  2A5C               	goto	l2887
  1811                           
  1812                           ;blueGyro.c: 603: {
  1813                           ;blueGyro.c: 604: if ((UserKey == 'V') || (UserKey == 'v'))
  1814  0248  3056               	movlw	86
  1815  0249  0662               	xorwf	main@UserKey,w
  1816  024A  1903               	btfsc	3,2
  1817  024B  2A50               	goto	l2881
  1818  024C  3076               	movlw	118
  1819  024D  0662               	xorwf	main@UserKey,w
  1820  024E  1D03               	btfss	3,2
  1821  024F  2A54               	goto	l2883
  1822  0250                     l2881:	
  1823                           
  1824                           ;blueGyro.c: 605: printVoltage();
  1825  0250  318F  272F  3181   	fcall	_printVoltage
  1826  0253  2A5C               	goto	l2887
  1827  0254                     l2883:	
  1828                           
  1829                           ;blueGyro.c: 606: else if (UserKey =='?')
  1830  0254  303F               	movlw	63
  1831  0255  0020               	movlb	0	; select bank0
  1832  0256  0662               	xorwf	main@UserKey,w
  1833  0257  1D03               	btfss	3,2
  1834  0258  2A5C               	goto	l2887
  1835                           
  1836                           ;blueGyro.c: 607: printVersion();
  1837  0259  318B  2322  3181   	fcall	_printVersion
  1838  025C                     l2887:	
  1839                           
  1840                           ;blueGyro.c: 608: }
  1841                           ;blueGyro.c: 610: }
  1842                           ;blueGyro.c: 614: if(Mode != NewMode)
  1843  025C  0020               	movlb	0	; select bank0
  1844  025D  0868               	movf	_Mode,w	;volatile
  1845  025E  0666               	xorwf	_NewMode,w	;volatile
  1846  025F  1903               	skipnz
  1847  0260  2A94               	goto	l2905
  1848                           
  1849                           ;blueGyro.c: 615: {
  1850                           ;blueGyro.c: 616: Mode=NewMode;
  1851  0261  0866               	movf	_NewMode,w	;volatile
  1852  0262  00DF               	movwf	??_main
  1853  0263  085F               	movf	??_main,w
  1854  0264  00E8               	movwf	_Mode	;volatile
  1855                           
  1856                           ;blueGyro.c: 618: switch(Mode)
  1857  0265  2A8C               	goto	l2903
  1858  0266                     l2891:	
  1859                           ;blueGyro.c: 619: {
  1860                           ;blueGyro.c: 620: case 0: cputs("\r\nIDLE\r\n");
  1861                           
  1862  0266  3054               	movlw	low (STR_19| (0+32768))
  1863  0267  00F5               	movwf	cputs@s
  1864  0268  3081               	movlw	high (STR_19| (0+32768))
  1865  0269  00F6               	movwf	cputs@s+1
  1866  026A  318B  235B  3181   	fcall	_cputs
  1867                           
  1868                           ;blueGyro.c: 621: break;
  1869  026D  2A94               	goto	l2905
  1870  026E                     l2893:	
  1871                           ;blueGyro.c: 622: case 1: cputs("\r\nREADY\r\n");
  1872                           
  1873  026E  304A               	movlw	low (STR_20| (0+32768))
  1874  026F  00F5               	movwf	cputs@s
  1875  0270  3081               	movlw	high (STR_20| (0+32768))
  1876  0271  00F6               	movwf	cputs@s+1
  1877  0272  318B  235B  3181   	fcall	_cputs
  1878                           
  1879                           ;blueGyro.c: 624: PeakData.SumSquare=0;
  1880  0275  3000               	movlw	0
  1881  0276  0021               	movlb	1	; select bank1
  1882  0277  00D3               	movwf	((_PeakData+3)^(0+128)+16)
  1883  0278  3000               	movlw	0
  1884  0279  00D2               	movwf	((_PeakData+2)^(0+128)+16)
  1885  027A  3000               	movlw	0
  1886  027B  00D1               	movwf	((_PeakData+1)^(0+128)+16)
  1887  027C  3000               	movlw	0
  1888  027D  00D0               	movwf	(_PeakData^(0+128)+16)
  1889                           
  1890                           ;blueGyro.c: 625: CurrentData.SumSquare=0;
  1891  027E  3000               	movlw	0
  1892  027F  00E7               	movwf	((_CurrentData+3)^(0+128)+16)
  1893  0280  3000               	movlw	0
  1894  0281  00E6               	movwf	((_CurrentData+2)^(0+128)+16)
  1895  0282  3000               	movlw	0
  1896  0283  00E5               	movwf	((_CurrentData+1)^(0+128)+16)
  1897  0284  3000               	movlw	0
  1898  0285  00E4               	movwf	(_CurrentData^(0+128)+16)
  1899                           
  1900                           ;blueGyro.c: 626: TimerCrash=65535;
  1901  0286  30FF               	movlw	255
  1902  0287  0020               	movlb	0	; select bank0
  1903  0288  00E3               	movwf	_TimerCrash	;volatile
  1904  0289  30FF               	movlw	255
  1905  028A  00E4               	movwf	_TimerCrash+1	;volatile
  1906                           
  1907                           ;blueGyro.c: 628: }
  1908                           
  1909                           ;blueGyro.c: 627: break;
  1910  028B  2A94               	goto	l2905
  1911  028C                     l2903:	
  1912  028C  0868               	movf	_Mode,w	;volatile
  1913                           
  1914                           ; Switch size 1, requested type "space"
  1915                           ; Number of cases is 2, Range of values is 0 to 1
  1916                           ; switch strategies available:
  1917                           ; Name         Instructions Cycles
  1918                           ; simple_byte            7     4 (average)
  1919                           ; direct_byte           10     6 (fixed)
  1920                           ; jumptable            260     6 (fixed)
  1921                           ;	Chosen strategy is simple_byte
  1922  028D  3A00               	xorlw	0	; case 0
  1923  028E  1903               	skipnz
  1924  028F  2A66               	goto	l2891
  1925  0290  3A01               	xorlw	1	; case 1
  1926  0291  1903               	skipnz
  1927  0292  2A6E               	goto	l2893
  1928  0293  2A94               	goto	l2905
  1929  0294                     l2905:	
  1930                           
  1931                           ;blueGyro.c: 629: }
  1932                           ;blueGyro.c: 631: if(Mode == 3)
  1933  0294  3003               	movlw	3
  1934  0295  0020               	movlb	0	; select bank0
  1935  0296  0668               	xorwf	_Mode,w	;volatile
  1936  0297  1D03               	btfss	3,2
  1937  0298  2AA9               	goto	l2917
  1938  0299                     l2909:	
  1939                           ;blueGyro.c: 632: {
  1940                           ;blueGyro.c: 633: while(GotInt_MPU6050()==0);
  1941                           
  1942  0299  318B  2383  3181   	fcall	_GotInt_MPU6050
  1943  029C  3A00               	xorlw	0
  1944  029D  1903               	skipnz
  1945  029E  2A99               	goto	l2909
  1946                           
  1947                           ;blueGyro.c: 634: Get_Accel_Values();
  1948  029F  3184  24CA  3181   	fcall	_Get_Accel_Values
  1949                           
  1950                           ;blueGyro.c: 635: CalculateSumOfSquares();
  1951  02A2  3182  22D3  3181   	fcall	_CalculateSumOfSquares
  1952                           
  1953                           ;blueGyro.c: 636: DisplayData();
  1954  02A5  318C  24F1  3181   	fcall	_DisplayData
  1955                           
  1956                           ;blueGyro.c: 637: continue;
  1957  02A8  2A11               	goto	l2847
  1958  02A9                     l2917:	
  1959                           
  1960                           ;blueGyro.c: 638: }
  1961                           ;blueGyro.c: 639: if(Mode == 1)
  1962  02A9  0020               	movlb	0	; select bank0
  1963  02AA  0368               	decf	_Mode,w	;volatile
  1964  02AB  1D03               	btfss	3,2
  1965  02AC  2AC6               	goto	l2935
  1966                           
  1967                           ;blueGyro.c: 640: {
  1968                           ;blueGyro.c: 641: (GIE = 0);
  1969  02AD  138B               	bcf	11,7	;volatile
  1970                           
  1971                           ;blueGyro.c: 642: Timerms=0;
  1972  02AE  01FA               	clrf	_Timerms	;volatile
  1973  02AF  01FB               	clrf	_Timerms+1	;volatile
  1974                           
  1975                           ;blueGyro.c: 643: (GIE = 1);
  1976  02B0  178B               	bsf	11,7	;volatile
  1977                           
  1978                           ;blueGyro.c: 644: Get_Accel_Values();
  1979  02B1  3184  24CA  3181   	fcall	_Get_Accel_Values
  1980                           
  1981                           ;blueGyro.c: 645: CalculateSumOfSquares();
  1982  02B4  3182  22D3  3181   	fcall	_CalculateSumOfSquares
  1983                           
  1984                           ;blueGyro.c: 646: if(FindDeltaG())
  1985  02B7  318D  2530  3181   	fcall	_FindDeltaG
  1986  02BA  3A00               	xorlw	0
  1987  02BB  1903               	skipnz
  1988  02BC  2AC6               	goto	l2935
  1989                           
  1990                           ;blueGyro.c: 647: {
  1991                           ;blueGyro.c: 648: DisplayData();
  1992  02BD  318C  24F1  3181   	fcall	_DisplayData
  1993                           
  1994                           ;blueGyro.c: 649: NewMode= 3;
  1995  02C0  3003               	movlw	3
  1996  02C1  0020               	movlb	0	; select bank0
  1997  02C2  00DF               	movwf	??_main
  1998  02C3  085F               	movf	??_main,w
  1999  02C4  00E6               	movwf	_NewMode	;volatile
  2000                           
  2001                           ;blueGyro.c: 650: continue;
  2002  02C5  2A11               	goto	l2847
  2003  02C6                     l2935:	
  2004                           
  2005                           ;blueGyro.c: 651: }
  2006                           ;blueGyro.c: 652: }
  2007                           ;blueGyro.c: 653: if(Mode == 100)
  2008  02C6  3064               	movlw	100
  2009  02C7  0020               	movlb	0	; select bank0
  2010  02C8  0668               	xorwf	_Mode,w	;volatile
  2011  02C9  1D03               	btfss	3,2
  2012  02CA  2A11               	goto	l2847
  2013                           
  2014                           ;blueGyro.c: 654: {
  2015                           ;blueGyro.c: 655: Get_Accel_Values();
  2016  02CB  3184  24CA  3181   	fcall	_Get_Accel_Values
  2017                           
  2018                           ;blueGyro.c: 656: DisplayInfo(&CurrentData);
  2019  02CE  30D4               	movlw	(low (_CurrentData| 0))& (0+255)
  2020  02CF  3183  23DB  3181   	fcall	_DisplayInfo
  2021  02D2  2A11               	goto	l2847
  2022  02D3                     __end_of_main:	
  2023                           
  2024                           	psect	text1
  2025  0F2F                     __ptext1:	
  2026 ;; *************** function _printVoltage *****************
  2027 ;; Defined at:
  2028 ;;		line 469 in file "blueGyro.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  VDDValue        4   57[BANK0 ] long 
  2033 ;;  value           2   61[BANK0 ] unsigned short 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2043 ;;      Params:         0       0       0       0
  2044 ;;      Locals:         0       6       0       0
  2045 ;;      Temps:          0       3       0       0
  2046 ;;      Totals:         0       9       0       0
  2047 ;;Total ram usage:        9 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    5
  2050 ;; This function calls:
  2051 ;;		___aldiv
  2052 ;;		_cputs
  2053 ;;		_printCentiValue
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _printVoltage
  2061  0F2F                     _printVoltage:	
  2062                           
  2063                           ;blueGyro.c: 482: unsigned short value;
  2064                           ;blueGyro.c: 483: long VDDValue;
  2065                           ;blueGyro.c: 486: ADCON1= 0b11100000;
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _printVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2069  0F2F  30E0               	movlw	224
  2070  0F30  0021               	movlb	1	; select bank1
  2071  0F31  009E               	movwf	30	;volatile
  2072                           
  2073                           ;blueGyro.c: 488: FVRCON= 0b11000010;
  2074  0F32  30C2               	movlw	194
  2075  0F33  0022               	movlb	2	; select bank2
  2076  0F34  0097               	movwf	23	;volatile
  2077                           
  2078                           ;blueGyro.c: 490: ADCON0= 0b01111101;
  2079  0F35  307D               	movlw	125
  2080  0F36  0021               	movlb	1	; select bank1
  2081  0F37  009D               	movwf	29	;volatile
  2082                           
  2083                           ;blueGyro.c: 492: _delay((unsigned long)((100)*(32000000/4000.0)));
  2084  0F38  3005               	movlw	5
  2085  0F39  0020               	movlb	0	; select bank0
  2086  0F3A  00D8               	movwf	??_printVoltage+2
  2087  0F3B  300F               	movlw	15
  2088  0F3C  00D7               	movwf	??_printVoltage+1
  2089  0F3D  30F4               	movlw	244
  2090  0F3E  00D6               	movwf	??_printVoltage
  2091  0F3F                     u2757:	
  2092  0F3F  0BD6               	decfsz	??_printVoltage,f
  2093  0F40  2F3F               	goto	u2757
  2094  0F41  0BD7               	decfsz	??_printVoltage+1,f
  2095  0F42  2F3F               	goto	u2757
  2096  0F43  0BD8               	decfsz	??_printVoltage+2,f
  2097  0F44  2F3F               	goto	u2757
  2098                           
  2099                           ;blueGyro.c: 494: ADGO=1;
  2100  0F45  0021               	movlb	1	; select bank1
  2101  0F46  149D               	bsf	29,1	;volatile
  2102  0F47                     l301:	
  2103                           ;blueGyro.c: 496: while(ADGO);
  2104                           
  2105  0F47  189D               	btfsc	29,1	;volatile
  2106  0F48  2F47               	goto	l301
  2107                           
  2108                           ;blueGyro.c: 497: value = ADRES;
  2109  0F49  081C               	movf	28,w	;volatile
  2110  0F4A  0020               	movlb	0	; select bank0
  2111  0F4B  00DE               	movwf	printVoltage@value+1
  2112  0F4C  0021               	movlb	1	; select bank1
  2113  0F4D  081B               	movf	27,w	;volatile
  2114  0F4E  0020               	movlb	0	; select bank0
  2115  0F4F  00DD               	movwf	printVoltage@value
  2116                           
  2117                           ;blueGyro.c: 498: cputs("VDD = ");
  2118  0F50  3066               	movlw	low (STR_15| (0+32768))
  2119  0F51  00F5               	movwf	cputs@s
  2120  0F52  3081               	movlw	high (STR_15| (0+32768))
  2121  0F53  00F6               	movwf	cputs@s+1
  2122  0F54  318B  235B  318F   	fcall	_cputs
  2123                           
  2124                           ;blueGyro.c: 499: if(value ==0)
  2125  0F57  0020               	movlb	0	; select bank0
  2126  0F58  085D               	movf	printVoltage@value,w
  2127  0F59  045E               	iorwf	printVoltage@value+1,w
  2128  0F5A  1D03               	btfss	3,2
  2129  0F5B  2F64               	goto	l2767
  2130                           
  2131                           ;blueGyro.c: 500: cputs("---");
  2132  0F5C  3088               	movlw	low (STR_16| (0+32768))
  2133  0F5D  00F5               	movwf	cputs@s
  2134  0F5E  3081               	movlw	high (STR_16| (0+32768))
  2135  0F5F  00F6               	movwf	cputs@s+1
  2136  0F60  318B  235B  318F   	fcall	_cputs
  2137  0F63  2F8A               	goto	l2771
  2138  0F64                     l2767:	
  2139                           
  2140                           ;blueGyro.c: 501: else
  2141                           ;blueGyro.c: 502: {
  2142                           ;blueGyro.c: 504: VDDValue = (long)209715 / ((long)value);
  2143  0F64  0020               	movlb	0	; select bank0
  2144  0F65  085D               	movf	printVoltage@value,w
  2145  0F66  00F2               	movwf	___aldiv@divisor
  2146  0F67  085E               	movf	printVoltage@value+1,w
  2147  0F68  00F3               	movwf	___aldiv@divisor+1
  2148  0F69  01F4               	clrf	___aldiv@divisor+2
  2149  0F6A  01F5               	clrf	___aldiv@divisor+3
  2150  0F6B  3000               	movlw	0
  2151  0F6C  00F9               	movwf	___aldiv@dividend+3
  2152  0F6D  3003               	movlw	3
  2153  0F6E  00F8               	movwf	___aldiv@dividend+2
  2154  0F6F  3033               	movlw	51
  2155  0F70  00F7               	movwf	___aldiv@dividend+1
  2156  0F71  3033               	movlw	51
  2157  0F72  00F6               	movwf	___aldiv@dividend
  2158  0F73  3186  2679  318F   	fcall	___aldiv
  2159  0F76  0875               	movf	?___aldiv+3,w
  2160  0F77  0020               	movlb	0	; select bank0
  2161  0F78  00DC               	movwf	printVoltage@VDDValue+3
  2162  0F79  0874               	movf	?___aldiv+2,w
  2163  0F7A  00DB               	movwf	printVoltage@VDDValue+2
  2164  0F7B  0873               	movf	?___aldiv+1,w
  2165  0F7C  00DA               	movwf	printVoltage@VDDValue+1
  2166  0F7D  0872               	movf	?___aldiv,w
  2167  0F7E  00D9               	movwf	printVoltage@VDDValue
  2168                           
  2169                           ;blueGyro.c: 505: printCentiValue(VDDValue);
  2170  0F7F  085C               	movf	printVoltage@VDDValue+3,w
  2171  0F80  00BF               	movwf	printCentiValue@value+3
  2172  0F81  085B               	movf	printVoltage@VDDValue+2,w
  2173  0F82  00BE               	movwf	printCentiValue@value+2
  2174  0F83  085A               	movf	printVoltage@VDDValue+1,w
  2175  0F84  00BD               	movwf	printCentiValue@value+1
  2176  0F85  0859               	movf	printVoltage@VDDValue,w
  2177  0F86  00BC               	movwf	printCentiValue@value
  2178  0F87  3186  26FB  318F   	fcall	_printCentiValue
  2179  0F8A                     l2771:	
  2180                           
  2181                           ;blueGyro.c: 506: }
  2182                           ;blueGyro.c: 507: cputs("V\r\n");
  2183  0F8A  3084               	movlw	low (STR_17| (0+32768))
  2184  0F8B  00F5               	movwf	cputs@s
  2185  0F8C  3081               	movlw	high (STR_17| (0+32768))
  2186  0F8D  00F6               	movwf	cputs@s+1
  2187  0F8E  318B  235B         	fcall	_cputs
  2188                           
  2189                           ;blueGyro.c: 511: ADCON0=0;
  2190  0F90  0021               	movlb	1	; select bank1
  2191  0F91  019D               	clrf	29	;volatile
  2192                           
  2193                           ;blueGyro.c: 512: FVRCON=0;
  2194  0F92  0022               	movlb	2	; select bank2
  2195  0F93  0197               	clrf	23	;volatile
  2196  0F94  0008               	return
  2197  0F95                     __end_of_printVoltage:	
  2198                           
  2199                           	psect	text2
  2200  0B22                     __ptext2:	
  2201 ;; *************** function _printVersion *****************
  2202 ;; Defined at:
  2203 ;;		line 463 in file "blueGyro.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2217 ;;      Params:         0       0       0       0
  2218 ;;      Locals:         0       0       0       0
  2219 ;;      Temps:          0       0       0       0
  2220 ;;      Totals:         0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    3
  2224 ;; This function calls:
  2225 ;;		_cputs
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _printVersion
  2233  0B22                     _printVersion:	
  2234                           
  2235                           ;blueGyro.c: 465: cputs("Catapult V1.00\r\n");
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _printVersion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2239  0B22  302E               	movlw	low (STR_14| (0+32768))
  2240  0B23  00F5               	movwf	cputs@s
  2241  0B24  3081               	movlw	high (STR_14| (0+32768))
  2242  0B25  00F6               	movwf	cputs@s+1
  2243  0B26  318B  235B         	fcall	_cputs
  2244  0B28  0008               	return
  2245  0B29                     __end_of_printVersion:	
  2246                           
  2247                           	psect	text3
  2248  0B31                     __ptext3:	
  2249 ;; *************** function _i2c_Init *****************
  2250 ;; Defined at:
  2251 ;;		line 12 in file "i2cMaster.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, status,2
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2265 ;;      Params:         0       0       0       0
  2266 ;;      Locals:         0       0       0       0
  2267 ;;      Temps:          0       0       0       0
  2268 ;;      Totals:         0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _i2c_Init
  2281  0B31                     _i2c_Init:	
  2282                           
  2283                           ;i2cMaster.c: 16: TRISA1=1;
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _i2c_Init: [wreg+status,2]
  2287  0B31  0021               	movlb	1	; select bank1
  2288  0B32  148C               	bsf	12,1	;volatile
  2289                           
  2290                           ;i2cMaster.c: 17: TRISA2=1;
  2291  0B33  150C               	bsf	12,2	;volatile
  2292                           
  2293                           ;i2cMaster.c: 19: SSPCON1 = 0b00101000;
  2294  0B34  3028               	movlw	40
  2295  0B35  0024               	movlb	4	; select bank4
  2296  0B36  0095               	movwf	21	;volatile
  2297                           
  2298                           ;i2cMaster.c: 20: SSPCON2 = 0x00;
  2299  0B37  0196               	clrf	22	;volatile
  2300                           
  2301                           ;i2cMaster.c: 22: SSPADD = 19;
  2302  0B38  3013               	movlw	19
  2303  0B39  0092               	movwf	18	;volatile
  2304                           
  2305                           ;i2cMaster.c: 24: SSPSTAT = 0b11000000;
  2306  0B3A  30C0               	movlw	192
  2307  0B3B  0094               	movwf	20	;volatile
  2308  0B3C  0008               	return
  2309  0B3D                     __end_of_i2c_Init:	
  2310                           
  2311                           	psect	text4
  2312  0F95                     __ptext4:	
  2313 ;; *************** function _Setup_MPU6050 *****************
  2314 ;; Defined at:
  2315 ;;		line 25 in file "MPU6050.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  loop            2    3[BANK0 ] int 
  2320 ;;  TheReg          1    5[BANK0 ] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2330 ;;      Params:         0       0       0       0
  2331 ;;      Locals:         0       3       0       0
  2332 ;;      Temps:          2       0       0       0
  2333 ;;      Totals:         2       3       0       0
  2334 ;;Total ram usage:        5 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		_LDByteWriteI2C
  2339 ;;		_cputs
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _Setup_MPU6050
  2347  0F95                     _Setup_MPU6050:	
  2348                           
  2349                           ;MPU6050.c: 27: int loop;
  2350                           ;MPU6050.c: 28: unsigned char TheReg;
  2351                           ;MPU6050.c: 31: const unsigned char MPU6050RegTable[]= {
  2352                           ;MPU6050.c: 32: 0x1D,
  2353                           ;MPU6050.c: 33: 0x1E,
  2354                           ;MPU6050.c: 34: 0x1F,
  2355                           ;MPU6050.c: 35: 0x20,
  2356                           ;MPU6050.c: 36: 0x21,
  2357                           ;MPU6050.c: 37: 0x22,
  2358                           ;MPU6050.c: 38: 0x23,
  2359                           ;MPU6050.c: 39: 0x24,
  2360                           ;MPU6050.c: 40: 0x25,
  2361                           ;MPU6050.c: 41: 0x26,
  2362                           ;MPU6050.c: 42: 0x27,
  2363                           ;MPU6050.c: 43: 0x28,
  2364                           ;MPU6050.c: 44: 0x29,
  2365                           ;MPU6050.c: 45: 0x2A,
  2366                           ;MPU6050.c: 46: 0x2B,
  2367                           ;MPU6050.c: 47: 0x2C,
  2368                           ;MPU6050.c: 48: 0x2D,
  2369                           ;MPU6050.c: 49: 0x2E,
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _Setup_MPU6050: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2373  0F95  3019               	movlw	25
  2374  0F96  00F8               	movwf	??_Setup_MPU6050
  2375  0F97  0878               	movf	??_Setup_MPU6050,w
  2376  0F98  00F6               	movwf	LDByteWriteI2C@LowAdd
  2377  0F99  301F               	movlw	31
  2378  0F9A  00F9               	movwf	??_Setup_MPU6050+1
  2379  0F9B  0879               	movf	??_Setup_MPU6050+1,w
  2380  0F9C  00F7               	movwf	LDByteWriteI2C@data
  2381  0F9D  3068               	movlw	104
  2382  0F9E  318B  2399  318F   	fcall	_LDByteWriteI2C
  2383                           
  2384                           ;MPU6050.c: 116: LDByteWriteI2C(0x68, 0x1B, 0b00011000);
  2385  0FA1  301B               	movlw	27
  2386  0FA2  00F8               	movwf	??_Setup_MPU6050
  2387  0FA3  0878               	movf	??_Setup_MPU6050,w
  2388  0FA4  00F6               	movwf	LDByteWriteI2C@LowAdd
  2389  0FA5  3018               	movlw	24
  2390  0FA6  00F9               	movwf	??_Setup_MPU6050+1
  2391  0FA7  0879               	movf	??_Setup_MPU6050+1,w
  2392  0FA8  00F7               	movwf	LDByteWriteI2C@data
  2393  0FA9  3068               	movlw	104
  2394  0FAA  318B  2399  318F   	fcall	_LDByteWriteI2C
  2395                           
  2396                           ;MPU6050.c: 118: LDByteWriteI2C(0x68, 0x1C, 0x18);
  2397  0FAD  301C               	movlw	28
  2398  0FAE  00F8               	movwf	??_Setup_MPU6050
  2399  0FAF  0878               	movf	??_Setup_MPU6050,w
  2400  0FB0  00F6               	movwf	LDByteWriteI2C@LowAdd
  2401  0FB1  3018               	movlw	24
  2402  0FB2  00F9               	movwf	??_Setup_MPU6050+1
  2403  0FB3  0879               	movf	??_Setup_MPU6050+1,w
  2404  0FB4  00F7               	movwf	LDByteWriteI2C@data
  2405  0FB5  3068               	movlw	104
  2406  0FB6  318B  2399  318F   	fcall	_LDByteWriteI2C
  2407                           
  2408                           ;MPU6050.c: 120: loop=0;
  2409  0FB9  0020               	movlb	0	; select bank0
  2410  0FBA  01A3               	clrf	Setup_MPU6050@loop
  2411  0FBB  01A4               	clrf	Setup_MPU6050@loop+1
  2412  0FBC                     l2707:	
  2413                           ;MPU6050.c: 121: do
  2414                           
  2415                           
  2416                           ;MPU6050.c: 122: {
  2417                           ;MPU6050.c: 123: TheReg = MPU6050RegTable[loop++];
  2418  0FBC  0020               	movlb	0	; select bank0
  2419  0FBD  0824               	movf	Setup_MPU6050@loop+1,w
  2420  0FBE  0085               	movwf	5
  2421  0FBF  0823               	movf	Setup_MPU6050@loop,w
  2422  0FC0  0084               	movwf	4
  2423  0FC1  304F               	movlw	low (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2424  0FC2  0784               	addwf	4,f
  2425  0FC3  3080               	movlw	high (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2426  0FC4  3D85               	addwfc	5,f
  2427  0FC5  0800               	movf	0,w	;code access
  2428  0FC6  00F8               	movwf	??_Setup_MPU6050
  2429  0FC7  0878               	movf	??_Setup_MPU6050,w
  2430  0FC8  00A5               	movwf	Setup_MPU6050@TheReg
  2431  0FC9  3001               	movlw	1
  2432  0FCA  07A3               	addwf	Setup_MPU6050@loop,f
  2433  0FCB  3000               	movlw	0
  2434  0FCC  3DA4               	addwfc	Setup_MPU6050@loop+1,f
  2435                           
  2436                           ;MPU6050.c: 124: if(TheReg==0xff) break;
  2437  0FCD  0A25               	incf	Setup_MPU6050@TheReg,w
  2438  0FCE  1903               	btfsc	3,2
  2439  0FCF  2FDA               	goto	l2717
  2440                           
  2441                           ;MPU6050.c: 125: LDByteWriteI2C(0x68,TheReg,0);
  2442  0FD0  0825               	movf	Setup_MPU6050@TheReg,w
  2443  0FD1  00F8               	movwf	??_Setup_MPU6050
  2444  0FD2  0878               	movf	??_Setup_MPU6050,w
  2445  0FD3  00F6               	movwf	LDByteWriteI2C@LowAdd
  2446  0FD4  01F7               	clrf	LDByteWriteI2C@data
  2447  0FD5  3068               	movlw	104
  2448  0FD6  318B  2399  318F   	fcall	_LDByteWriteI2C
  2449                           
  2450                           ;MPU6050.c: 126: }while(1);
  2451  0FD9  2FBC               	goto	l2707
  2452  0FDA                     l2717:	
  2453                           
  2454                           ;MPU6050.c: 131: LDByteWriteI2C(0x68, 0x6B, 0b00000010);
  2455  0FDA  306B               	movlw	107
  2456  0FDB  00F8               	movwf	??_Setup_MPU6050
  2457  0FDC  0878               	movf	??_Setup_MPU6050,w
  2458  0FDD  00F6               	movwf	LDByteWriteI2C@LowAdd
  2459  0FDE  3002               	movlw	2
  2460  0FDF  00F9               	movwf	??_Setup_MPU6050+1
  2461  0FE0  0879               	movf	??_Setup_MPU6050+1,w
  2462  0FE1  00F7               	movwf	LDByteWriteI2C@data
  2463  0FE2  3068               	movlw	104
  2464  0FE3  318B  2399  318F   	fcall	_LDByteWriteI2C
  2465                           
  2466                           ;MPU6050.c: 133: LDByteWriteI2C(0x68, 0x6C, 0x00);
  2467  0FE6  306C               	movlw	108
  2468  0FE7  00F8               	movwf	??_Setup_MPU6050
  2469  0FE8  0878               	movf	??_Setup_MPU6050,w
  2470  0FE9  00F6               	movwf	LDByteWriteI2C@LowAdd
  2471  0FEA  01F7               	clrf	LDByteWriteI2C@data
  2472  0FEB  3068               	movlw	104
  2473  0FEC  318B  2399  318F   	fcall	_LDByteWriteI2C
  2474                           
  2475                           ;MPU6050.c: 136: LDByteWriteI2C(0x68, 0x38, 0x01);
  2476  0FEF  3038               	movlw	56
  2477  0FF0  00F8               	movwf	??_Setup_MPU6050
  2478  0FF1  0878               	movf	??_Setup_MPU6050,w
  2479  0FF2  00F6               	movwf	LDByteWriteI2C@LowAdd
  2480  0FF3  01F7               	clrf	LDByteWriteI2C@data
  2481  0FF4  0AF7               	incf	LDByteWriteI2C@data,f
  2482  0FF5  3068               	movlw	104
  2483  0FF6  318B  2399  318F   	fcall	_LDByteWriteI2C
  2484                           
  2485                           ;MPU6050.c: 137: cputs("\r\nMPU6050 Setup Complete\r\n");
  2486  0FF9  3013               	movlw	low (STR_3| (0+32768))
  2487  0FFA  00F5               	movwf	cputs@s
  2488  0FFB  3081               	movlw	high (STR_3| (0+32768))
  2489  0FFC  00F6               	movwf	cputs@s+1
  2490  0FFD  318B  235B         	fcall	_cputs
  2491  0FFF  0008               	return
  2492  1000                     __end_of_Setup_MPU6050:	
  2493                           
  2494                           	psect	text5
  2495  0B99                     __ptext5:	
  2496 ;; *************** function _LDByteWriteI2C *****************
  2497 ;; Defined at:
  2498 ;;		line 99 in file "i2cMaster.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  2501 ;;  LowAdd          1    6[COMMON] unsigned char 
  2502 ;;  data            1    7[COMMON] unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  i2cSlaveAddr    1    2[BANK0 ] unsigned char 
  2505 ;;  ErrorCode       2    0[BANK0 ] unsigned int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2515 ;;      Params:         2       0       0       0
  2516 ;;      Locals:         0       3       0       0
  2517 ;;      Temps:          0       0       0       0
  2518 ;;      Totals:         2       3       0       0
  2519 ;;Total ram usage:        5 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		_i2c_Address
  2524 ;;		_i2c_Start
  2525 ;;		_i2c_Stop
  2526 ;;		_i2c_Write
  2527 ;; This function is called by:
  2528 ;;		_Setup_MPU6050
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _LDByteWriteI2C
  2534  0B99                     _LDByteWriteI2C:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _LDByteWriteI2C: [wreg+status,2+status,0+pclath+cstack]
  2538                           ;LDByteWriteI2C@i2cSlaveAddress stored from wreg
  2539  0B99  0020               	movlb	0	; select bank0
  2540  0B9A  00A2               	movwf	LDByteWriteI2C@i2cSlaveAddress
  2541                           
  2542                           ;i2cMaster.c: 101: unsigned int ErrorCode=0;
  2543  0B9B  01A0               	clrf	LDByteWriteI2C@ErrorCode
  2544  0B9C  01A1               	clrf	LDByteWriteI2C@ErrorCode+1
  2545                           
  2546                           ;i2cMaster.c: 103: i2c_Start();
  2547  0B9D  318B  230B  318B   	fcall	_i2c_Start
  2548                           
  2549                           ;i2cMaster.c: 104: i2c_Address(i2cSlaveAddress,0x00);
  2550  0BA0  01F2               	clrf	i2c_Address@mode
  2551  0BA1  0020               	movlb	0	; select bank0
  2552  0BA2  0822               	movf	LDByteWriteI2C@i2cSlaveAddress,w
  2553  0BA3  318B  233D  318B   	fcall	_i2c_Address
  2554                           
  2555                           ;i2cMaster.c: 105: i2c_Write(LowAdd);
  2556  0BA6  0876               	movf	LDByteWriteI2C@LowAdd,w
  2557  0BA7  318B  231B  318B   	fcall	_i2c_Write
  2558                           
  2559                           ;i2cMaster.c: 106: i2c_Write(data);
  2560  0BAA  0877               	movf	LDByteWriteI2C@data,w
  2561  0BAB  318B  231B  318B   	fcall	_i2c_Write
  2562                           
  2563                           ;i2cMaster.c: 107: i2c_Stop();
  2564  0BAE  318B  2310         	fcall	_i2c_Stop
  2565  0BB0  0008               	return
  2566  0BB1                     __end_of_LDByteWriteI2C:	
  2567                           
  2568                           	psect	text6
  2569  0C0E                     __ptext6:	
  2570 ;; *************** function _MPU6050_Test_I2C *****************
  2571 ;; Defined at:
  2572 ;;		line 8 in file "MPU6050.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  Data            1    3[BANK0 ] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2   78[None  ] int 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2586 ;;      Params:         0       0       0       0
  2587 ;;      Locals:         0       1       0       0
  2588 ;;      Temps:          0       2       0       0
  2589 ;;      Totals:         0       3       0       0
  2590 ;;Total ram usage:        3 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    4
  2593 ;; This function calls:
  2594 ;;		_LDByteReadI2C
  2595 ;;		_cputs
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _MPU6050_Test_I2C
  2603  0C0E                     _MPU6050_Test_I2C:	
  2604                           
  2605                           ;MPU6050.c: 10: unsigned char Data = 0x00;
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _MPU6050_Test_I2C: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2609  0C0E  0020               	movlb	0	; select bank0
  2610  0C0F  01A3               	clrf	MPU6050_Test_I2C@Data
  2611                           
  2612                           ;MPU6050.c: 11: LDByteReadI2C(0x68, 0x75, &Data, 1);
  2613  0C10  3075               	movlw	117
  2614  0C11  00A1               	movwf	??_MPU6050_Test_I2C
  2615  0C12  0821               	movf	??_MPU6050_Test_I2C,w
  2616  0C13  00F6               	movwf	LDByteReadI2C@Address
  2617  0C14  3023               	movlw	(low (MPU6050_Test_I2C@Data| 0))& (0+255)
  2618  0C15  00A2               	movwf	??_MPU6050_Test_I2C+1
  2619  0C16  0822               	movf	??_MPU6050_Test_I2C+1,w
  2620  0C17  00F7               	movwf	LDByteReadI2C@Data
  2621  0C18  01F8               	clrf	LDByteReadI2C@Length
  2622  0C19  0AF8               	incf	LDByteReadI2C@Length,f
  2623  0C1A  3068               	movlw	104
  2624  0C1B  318D  256F  318C   	fcall	_LDByteReadI2C
  2625                           
  2626                           ;MPU6050.c: 13: if(Data == 0x68)
  2627  0C1E  3068               	movlw	104
  2628  0C1F  0020               	movlb	0	; select bank0
  2629  0C20  0623               	xorwf	MPU6050_Test_I2C@Data,w
  2630  0C21  1D03               	btfss	3,2
  2631  0C22  2C2A               	goto	l2699
  2632                           
  2633                           ;MPU6050.c: 14: {
  2634                           ;MPU6050.c: 15: cputs("I2C Read Test Passed, MPU6050 Address: 0x68\r\n");
  2635  0C23  30A0               	movlw	low (STR_1| (0+32768))
  2636  0C24  00F5               	movwf	cputs@s
  2637  0C25  3080               	movlw	high (STR_1| (0+32768))
  2638  0C26  00F6               	movwf	cputs@s+1
  2639  0C27  318B  235B         	fcall	_cputs
  2640                           
  2641                           ;MPU6050.c: 16: return(1);
  2642                           ;	Return value of _MPU6050_Test_I2C is never used
  2643  0C29  0008               	return
  2644  0C2A                     l2699:	
  2645                           
  2646                           ;MPU6050.c: 17: }
  2647                           ;MPU6050.c: 19: cputs("ERROR: I2C Read Test Failed, Stopping\r\n");
  2648  0C2A  30CE               	movlw	low (STR_2| (0+32768))
  2649  0C2B  00F5               	movwf	cputs@s
  2650  0C2C  3080               	movlw	high (STR_2| (0+32768))
  2651  0C2D  00F6               	movwf	cputs@s+1
  2652  0C2E  318B  235B         	fcall	_cputs
  2653  0C30  0008               	return
  2654  0C31                     __end_of_MPU6050_Test_I2C:	
  2655                           ;MPU6050.c: 21: return(0);
  2656                           ;	Return value of _MPU6050_Test_I2C is never used
  2657                           
  2658                           
  2659                           	psect	text7
  2660  0B4C                     __ptext7:	
  2661 ;; *************** function _Init1msTimer *****************
  2662 ;; Defined at:
  2663 ;;		line 169 in file "blueGyro.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, status,2
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2677 ;;      Params:         0       0       0       0
  2678 ;;      Locals:         0       0       0       0
  2679 ;;      Temps:          0       0       0       0
  2680 ;;      Totals:         0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _Init1msTimer
  2693  0B4C                     _Init1msTimer:	
  2694                           
  2695                           ;blueGyro.c: 176: T2CON=0;
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _Init1msTimer: [wreg+status,2]
  2699  0B4C  0020               	movlb	0	; select bank0
  2700  0B4D  019C               	clrf	28	;volatile
  2701                           
  2702                           ;blueGyro.c: 177: PR2 = 125;
  2703  0B4E  307D               	movlw	125
  2704  0B4F  009B               	movwf	27	;volatile
  2705                           
  2706                           ;blueGyro.c: 178: TMR2=0;
  2707  0B50  019A               	clrf	26	;volatile
  2708                           
  2709                           ;blueGyro.c: 179: T2CON= 0b00000111;
  2710  0B51  3007               	movlw	7
  2711  0B52  009C               	movwf	28	;volatile
  2712                           
  2713                           ;blueGyro.c: 181: TMR2IF=0;
  2714  0B53  1091               	bcf	17,1	;volatile
  2715                           
  2716                           ;blueGyro.c: 182: Timerms=0;
  2717  0B54  01FA               	clrf	_Timerms	;volatile
  2718  0B55  01FB               	clrf	_Timerms+1	;volatile
  2719                           
  2720                           ;blueGyro.c: 183: TMR2IE=1;
  2721  0B56  0021               	movlb	1	; select bank1
  2722  0B57  1491               	bsf	17,1	;volatile
  2723                           
  2724                           ;blueGyro.c: 184: PEIE = 1;
  2725  0B58  170B               	bsf	11,6	;volatile
  2726                           
  2727                           ;blueGyro.c: 185: GIE=1;
  2728  0B59  178B               	bsf	11,7	;volatile
  2729  0B5A  0008               	return
  2730  0B5B                     __end_of_Init1msTimer:	
  2731                           
  2732                           	psect	text8
  2733  0B83                     __ptext8:	
  2734 ;; *************** function _GotInt_MPU6050 *****************
  2735 ;; Defined at:
  2736 ;;		line 169 in file "MPU6050.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  uc_temp         1    3[BANK0 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2750 ;;      Params:         0       0       0       0
  2751 ;;      Locals:         0       1       0       0
  2752 ;;      Temps:          0       2       0       0
  2753 ;;      Totals:         0       3       0       0
  2754 ;;Total ram usage:        3 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    4
  2757 ;; This function calls:
  2758 ;;		_LDByteReadI2C
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _GotInt_MPU6050
  2766  0B83                     _GotInt_MPU6050:	
  2767                           
  2768                           ;MPU6050.c: 171: unsigned char uc_temp;
  2769                           ;MPU6050.c: 175: LDByteReadI2C(0x68,0x3A, &uc_temp, 1);
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _GotInt_MPU6050: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2773  0B83  303A               	movlw	58
  2774  0B84  0020               	movlb	0	; select bank0
  2775  0B85  00A1               	movwf	??_GotInt_MPU6050
  2776  0B86  0821               	movf	??_GotInt_MPU6050,w
  2777  0B87  00F6               	movwf	LDByteReadI2C@Address
  2778  0B88  3023               	movlw	(low (GotInt_MPU6050@uc_temp| 0))& (0+255)
  2779  0B89  00A2               	movwf	??_GotInt_MPU6050+1
  2780  0B8A  0822               	movf	??_GotInt_MPU6050+1,w
  2781  0B8B  00F7               	movwf	LDByteReadI2C@Data
  2782  0B8C  01F8               	clrf	LDByteReadI2C@Length
  2783  0B8D  0AF8               	incf	LDByteReadI2C@Length,f
  2784  0B8E  3068               	movlw	104
  2785  0B8F  318D  256F  318B   	fcall	_LDByteReadI2C
  2786                           
  2787                           ;MPU6050.c: 177: return ((uc_temp & 1) == 1 ? 1 : 0);
  2788  0B92  0020               	movlb	0	; select bank0
  2789  0B93  1C23               	btfss	GotInt_MPU6050@uc_temp,0
  2790  0B94  2B97               	goto	u2490
  2791  0B95  3001               	movlw	1
  2792  0B96  0008               	return
  2793  0B97                     u2490:	
  2794  0B97  3000               	movlw	0
  2795  0B98  0008               	return
  2796  0B99                     __end_of_GotInt_MPU6050:	
  2797                           
  2798                           	psect	text9
  2799  0D30                     __ptext9:	
  2800 ;; *************** function _FindDeltaG *****************
  2801 ;; Defined at:
  2802 ;;		line 372 in file "blueGyro.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      unsigned char 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr0l, fsr0h, pclath
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2816 ;;      Params:         0       0       0       0
  2817 ;;      Locals:         0       0       0       0
  2818 ;;      Temps:          4       0       0       0
  2819 ;;      Totals:         4       0       0       0
  2820 ;;Total ram usage:        4 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _FindDeltaG
  2832  0D30                     _FindDeltaG:	
  2833                           
  2834                           ;blueGyro.c: 376: const long HG = 3072L * 3072L;
  2835                           ;blueGyro.c: 377: const long LG = 1638L * 1638L;
  2836                           ;blueGyro.c: 379: if(CurrentData.SumSquare > HG)
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _FindDeltaG: [wreg-fsr0h+pclath]
  2840  0D30  3098               	movlw	low (FindDeltaG@HG| (0+32768))
  2841  0D31  0084               	movwf	4
  2842  0D32  3080               	movlw	high (FindDeltaG@HG| (0+32768))
  2843  0D33  0085               	movwf	5
  2844  0D34  3F00               	moviw [0]fsr0
  2845  0D35  00F2               	movwf	??_FindDeltaG
  2846  0D36  3F01               	moviw [1]fsr0
  2847  0D37  00F3               	movwf	??_FindDeltaG+1
  2848  0D38  3F02               	moviw [2]fsr0
  2849  0D39  00F4               	movwf	??_FindDeltaG+2
  2850  0D3A  3F03               	moviw [3]fsr0
  2851  0D3B  00F5               	movwf	??_FindDeltaG+3
  2852  0D3C  0021               	movlb	1	; select bank1
  2853  0D3D  0867               	movf	((_CurrentData+3)^(0+128)+16),w
  2854  0D3E  0275               	subwf	??_FindDeltaG+3,w
  2855  0D3F  1D03               	skipz
  2856  0D40  2D4B               	goto	u1765
  2857  0D41  0866               	movf	((_CurrentData+2)^(0+128)+16),w
  2858  0D42  0274               	subwf	??_FindDeltaG+2,w
  2859  0D43  1D03               	skipz
  2860  0D44  2D4B               	goto	u1765
  2861  0D45  0865               	movf	((_CurrentData+1)^(0+128)+16),w
  2862  0D46  0273               	subwf	??_FindDeltaG+1,w
  2863  0D47  1D03               	skipz
  2864  0D48  2D4B               	goto	u1765
  2865  0D49  0864               	movf	(_CurrentData^(0+128)+16),w
  2866  0D4A  0272               	subwf	??_FindDeltaG,w
  2867  0D4B                     u1765:	
  2868  0D4B  1803               	skipnc
  2869  0D4C  2D4F               	goto	l2111
  2870                           
  2871                           ;blueGyro.c: 380: return 1;
  2872  0D4D  3001               	movlw	1
  2873  0D4E  0008               	return
  2874  0D4F                     l2111:	
  2875                           
  2876                           ;blueGyro.c: 381: if(CurrentData.SumSquare < LG)
  2877  0D4F  309C               	movlw	low (FindDeltaG@LG| (0+32768))
  2878  0D50  0084               	movwf	4
  2879  0D51  3080               	movlw	high (FindDeltaG@LG| (0+32768))
  2880  0D52  0085               	movwf	5
  2881  0D53  3F00               	moviw [0]fsr0
  2882  0D54  00F2               	movwf	??_FindDeltaG
  2883  0D55  3F01               	moviw [1]fsr0
  2884  0D56  00F3               	movwf	??_FindDeltaG+1
  2885  0D57  3F02               	moviw [2]fsr0
  2886  0D58  00F4               	movwf	??_FindDeltaG+2
  2887  0D59  3F03               	moviw [3]fsr0
  2888  0D5A  00F5               	movwf	??_FindDeltaG+3
  2889  0D5B  0875               	movf	??_FindDeltaG+3,w
  2890  0D5C  0267               	subwf	((_CurrentData+3)^(0+128)+16),w
  2891  0D5D  1D03               	skipz
  2892  0D5E  2D69               	goto	u1775
  2893  0D5F  0874               	movf	??_FindDeltaG+2,w
  2894  0D60  0266               	subwf	((_CurrentData+2)^(0+128)+16),w
  2895  0D61  1D03               	skipz
  2896  0D62  2D69               	goto	u1775
  2897  0D63  0873               	movf	??_FindDeltaG+1,w
  2898  0D64  0265               	subwf	((_CurrentData+1)^(0+128)+16),w
  2899  0D65  1D03               	skipz
  2900  0D66  2D69               	goto	u1775
  2901  0D67  0872               	movf	??_FindDeltaG,w
  2902  0D68  0264               	subwf	(_CurrentData^(0+128)+16),w
  2903  0D69                     u1775:	
  2904  0D69  1803               	skipnc
  2905  0D6A  2D6D               	goto	l2117
  2906                           
  2907                           ;blueGyro.c: 382: return 1;
  2908  0D6B  3001               	movlw	1
  2909  0D6C  0008               	return
  2910  0D6D                     l2117:	
  2911                           
  2912                           ;blueGyro.c: 383: return 0;
  2913  0D6D  3000               	movlw	0
  2914  0D6E  0008               	return
  2915  0D6F                     __end_of_FindDeltaG:	
  2916                           
  2917                           	psect	text10
  2918  03DB                     __ptext10:	
  2919 ;; *************** function _DisplayInfo *****************
  2920 ;; Defined at:
  2921 ;;		line 388 in file "blueGyro.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  gs              1    wreg     PTR struct .
  2924 ;;		 -> CurrentData(20), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  gs              1   62[BANK0 ] PTR struct .
  2927 ;;		 -> CurrentData(20), 
  2928 ;;  Gt              2   60[BANK0 ] unsigned short 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2938 ;;      Params:         0       0       0       0
  2939 ;;      Locals:         0       3       0       0
  2940 ;;      Temps:          0       2       0       0
  2941 ;;      Totals:         0       5       0       0
  2942 ;;Total ram usage:        5 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    6
  2945 ;; This function calls:
  2946 ;;		_CalculateSumOfSquares
  2947 ;;		_Get_Accel_Values
  2948 ;;		_cputs
  2949 ;;		_isqrt
  2950 ;;		_printGForce
  2951 ;;		_printGyro
  2952 ;;		_printUShort
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _DisplayInfo
  2960  03DB                     _DisplayInfo:	
  2961                           
  2962                           ;incstack = 0
  2963                           ; Regs used in _DisplayInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2964                           ;DisplayInfo@gs stored from wreg
  2965  03DB  0020               	movlb	0	; select bank0
  2966  03DC  00DE               	movwf	DisplayInfo@gs
  2967                           
  2968                           ;blueGyro.c: 390: unsigned short Gt;
  2969                           ;blueGyro.c: 392: Get_Accel_Values();
  2970  03DD  3184  24CA  3183   	fcall	_Get_Accel_Values
  2971                           
  2972                           ;blueGyro.c: 393: CalculateSumOfSquares();
  2973  03E0  3182  22D3  3183   	fcall	_CalculateSumOfSquares
  2974                           
  2975                           ;blueGyro.c: 395: cputs(" Time(ms)=");
  2976  03E3  303F               	movlw	low (STR_4| (0+32768))
  2977  03E4  00F5               	movwf	cputs@s
  2978  03E5  3081               	movlw	high (STR_4| (0+32768))
  2979  03E6  00F6               	movwf	cputs@s+1
  2980  03E7  318B  235B  3183   	fcall	_cputs
  2981                           
  2982                           ;blueGyro.c: 396: printUShort(gs->Timer);
  2983  03EA  0020               	movlb	0	; select bank0
  2984  03EB  085E               	movf	DisplayInfo@gs,w
  2985  03EC  3E0E               	addlw	14
  2986  03ED  0086               	movwf	6
  2987  03EE  0187               	clrf	7
  2988  03EF  3F40               	moviw [0]fsr1
  2989  03F0  00A9               	movwf	printUShort@value
  2990  03F1  3F41               	moviw [1]fsr1
  2991  03F2  00AA               	movwf	printUShort@value+1
  2992  03F3  318B  236F  3183   	fcall	_printUShort
  2993                           
  2994                           ;blueGyro.c: 397: cputs("  Gx=");
  2995  03F6  306D               	movlw	low (STR_5| (0+32768))
  2996  03F7  00F5               	movwf	cputs@s
  2997  03F8  3081               	movlw	high (STR_5| (0+32768))
  2998  03F9  00F6               	movwf	cputs@s+1
  2999  03FA  318B  235B  3183   	fcall	_cputs
  3000                           
  3001                           ;blueGyro.c: 398: printGForce(gs->Gx);
  3002  03FD  0020               	movlb	0	; select bank0
  3003  03FE  085E               	movf	DisplayInfo@gs,w
  3004  03FF  0086               	movwf	6
  3005  0400  0187               	clrf	7
  3006  0401  3F40               	moviw [0]fsr1
  3007  0402  00DA               	movwf	??_DisplayInfo
  3008  0403  3F41               	moviw [1]fsr1
  3009  0404  00DB               	movwf	??_DisplayInfo+1
  3010  0405  085A               	movf	??_DisplayInfo,w
  3011  0406  00D6               	movwf	printGForce@RawG
  3012  0407  085B               	movf	??_DisplayInfo+1,w
  3013  0408  00D7               	movwf	printGForce@RawG+1
  3014  0409  0D89               	rlf	9,f
  3015  040A  3B89               	subwfb	9,f
  3016  040B  0989               	comf	9,f
  3017  040C  00D8               	movwf	printGForce@RawG+2
  3018  040D  00D9               	movwf	printGForce@RawG+3
  3019  040E  318D  25F2  3183   	fcall	_printGForce
  3020                           
  3021                           ;blueGyro.c: 399: cputs("  Gy=");
  3022  0411  3073               	movlw	low (STR_6| (0+32768))
  3023  0412  00F5               	movwf	cputs@s
  3024  0413  3081               	movlw	high (STR_6| (0+32768))
  3025  0414  00F6               	movwf	cputs@s+1
  3026  0415  318B  235B  3183   	fcall	_cputs
  3027                           
  3028                           ;blueGyro.c: 400: printGForce(gs->Gy);
  3029  0418  0020               	movlb	0	; select bank0
  3030  0419  085E               	movf	DisplayInfo@gs,w
  3031  041A  3E02               	addlw	2
  3032  041B  0086               	movwf	6
  3033  041C  0187               	clrf	7
  3034  041D  3F40               	moviw [0]fsr1
  3035  041E  00DA               	movwf	??_DisplayInfo
  3036  041F  3F41               	moviw [1]fsr1
  3037  0420  00DB               	movwf	??_DisplayInfo+1
  3038  0421  085A               	movf	??_DisplayInfo,w
  3039  0422  00D6               	movwf	printGForce@RawG
  3040  0423  085B               	movf	??_DisplayInfo+1,w
  3041  0424  00D7               	movwf	printGForce@RawG+1
  3042  0425  0D89               	rlf	9,f
  3043  0426  3B89               	subwfb	9,f
  3044  0427  0989               	comf	9,f
  3045  0428  00D8               	movwf	printGForce@RawG+2
  3046  0429  00D9               	movwf	printGForce@RawG+3
  3047  042A  318D  25F2  3183   	fcall	_printGForce
  3048                           
  3049                           ;blueGyro.c: 401: cputs("  Gz=");
  3050  042D  3079               	movlw	low (STR_7| (0+32768))
  3051  042E  00F5               	movwf	cputs@s
  3052  042F  3081               	movlw	high (STR_7| (0+32768))
  3053  0430  00F6               	movwf	cputs@s+1
  3054  0431  318B  235B  3183   	fcall	_cputs
  3055                           
  3056                           ;blueGyro.c: 402: printGForce(gs->Gz);
  3057  0434  0020               	movlb	0	; select bank0
  3058  0435  085E               	movf	DisplayInfo@gs,w
  3059  0436  3E04               	addlw	4
  3060  0437  0086               	movwf	6
  3061  0438  0187               	clrf	7
  3062  0439  3F40               	moviw [0]fsr1
  3063  043A  00DA               	movwf	??_DisplayInfo
  3064  043B  3F41               	moviw [1]fsr1
  3065  043C  00DB               	movwf	??_DisplayInfo+1
  3066  043D  085A               	movf	??_DisplayInfo,w
  3067  043E  00D6               	movwf	printGForce@RawG
  3068  043F  085B               	movf	??_DisplayInfo+1,w
  3069  0440  00D7               	movwf	printGForce@RawG+1
  3070  0441  0D89               	rlf	9,f
  3071  0442  3B89               	subwfb	9,f
  3072  0443  0989               	comf	9,f
  3073  0444  00D8               	movwf	printGForce@RawG+2
  3074  0445  00D9               	movwf	printGForce@RawG+3
  3075  0446  318D  25F2  3183   	fcall	_printGForce
  3076                           
  3077                           ;blueGyro.c: 404: Gt = isqrt(gs->SumSquare);
  3078  0449  0020               	movlb	0	; select bank0
  3079  044A  085E               	movf	DisplayInfo@gs,w
  3080  044B  3E10               	addlw	16
  3081  044C  0086               	movwf	6
  3082  044D  0187               	clrf	7
  3083  044E  3F40               	moviw [0]fsr1
  3084  044F  00F2               	movwf	isqrt@val
  3085  0450  3F41               	moviw [1]fsr1
  3086  0451  00F3               	movwf	isqrt@val+1
  3087  0452  3F42               	moviw [2]fsr1
  3088  0453  00F4               	movwf	isqrt@val+2
  3089  0454  3F43               	moviw [3]fsr1
  3090  0455  00F5               	movwf	isqrt@val+3
  3091  0456  3185  25F1  3183   	fcall	_isqrt
  3092  0459  0873               	movf	?_isqrt+1,w
  3093  045A  0020               	movlb	0	; select bank0
  3094  045B  00DD               	movwf	DisplayInfo@Gt+1
  3095  045C  0872               	movf	?_isqrt,w
  3096  045D  00DC               	movwf	DisplayInfo@Gt
  3097                           
  3098                           ;blueGyro.c: 405: cputs("  G=");
  3099  045E  307F               	movlw	low (STR_8| (0+32768))
  3100  045F  00F5               	movwf	cputs@s
  3101  0460  3081               	movlw	high (STR_8| (0+32768))
  3102  0461  00F6               	movwf	cputs@s+1
  3103  0462  318B  235B  3183   	fcall	_cputs
  3104                           
  3105                           ;blueGyro.c: 406: printGForce(Gt);
  3106  0465  0020               	movlb	0	; select bank0
  3107  0466  085C               	movf	DisplayInfo@Gt,w
  3108  0467  00D6               	movwf	printGForce@RawG
  3109  0468  085D               	movf	DisplayInfo@Gt+1,w
  3110  0469  00D7               	movwf	printGForce@RawG+1
  3111  046A  01D8               	clrf	printGForce@RawG+2
  3112  046B  01D9               	clrf	printGForce@RawG+3
  3113  046C  318D  25F2  3183   	fcall	_printGForce
  3114                           
  3115                           ;blueGyro.c: 408: cputs(" Gyro x=");
  3116  046F  305D               	movlw	low (STR_9| (0+32768))
  3117  0470  00F5               	movwf	cputs@s
  3118  0471  3081               	movlw	high (STR_9| (0+32768))
  3119  0472  00F6               	movwf	cputs@s+1
  3120  0473  318B  235B  3183   	fcall	_cputs
  3121                           
  3122                           ;blueGyro.c: 409: printGyro(gs->Gyrox);
  3123  0476  0020               	movlb	0	; select bank0
  3124  0477  085E               	movf	DisplayInfo@gs,w
  3125  0478  3E08               	addlw	8
  3126  0479  0086               	movwf	6
  3127  047A  0187               	clrf	7
  3128  047B  3F40               	moviw [0]fsr1
  3129  047C  00DA               	movwf	??_DisplayInfo
  3130  047D  3F41               	moviw [1]fsr1
  3131  047E  00DB               	movwf	??_DisplayInfo+1
  3132  047F  085A               	movf	??_DisplayInfo,w
  3133  0480  00D6               	movwf	printGyro@RawG
  3134  0481  085B               	movf	??_DisplayInfo+1,w
  3135  0482  00D7               	movwf	printGyro@RawG+1
  3136  0483  0D89               	rlf	9,f
  3137  0484  3B89               	subwfb	9,f
  3138  0485  0989               	comf	9,f
  3139  0486  00D8               	movwf	printGyro@RawG+2
  3140  0487  00D9               	movwf	printGyro@RawG+3
  3141  0488  318E  2636  3183   	fcall	_printGyro
  3142                           
  3143                           ;blueGyro.c: 410: cputs(" y=");
  3144  048B  308C               	movlw	low (STR_10| (0+32768))
  3145  048C  00F5               	movwf	cputs@s
  3146  048D  3081               	movlw	high (STR_10| (0+32768))
  3147  048E  00F6               	movwf	cputs@s+1
  3148  048F  318B  235B  3183   	fcall	_cputs
  3149                           
  3150                           ;blueGyro.c: 411: printGyro(gs->Gyroy);
  3151  0492  0020               	movlb	0	; select bank0
  3152  0493  085E               	movf	DisplayInfo@gs,w
  3153  0494  3E0A               	addlw	10
  3154  0495  0086               	movwf	6
  3155  0496  0187               	clrf	7
  3156  0497  3F40               	moviw [0]fsr1
  3157  0498  00DA               	movwf	??_DisplayInfo
  3158  0499  3F41               	moviw [1]fsr1
  3159  049A  00DB               	movwf	??_DisplayInfo+1
  3160  049B  085A               	movf	??_DisplayInfo,w
  3161  049C  00D6               	movwf	printGyro@RawG
  3162  049D  085B               	movf	??_DisplayInfo+1,w
  3163  049E  00D7               	movwf	printGyro@RawG+1
  3164  049F  0D89               	rlf	9,f
  3165  04A0  3B89               	subwfb	9,f
  3166  04A1  0989               	comf	9,f
  3167  04A2  00D8               	movwf	printGyro@RawG+2
  3168  04A3  00D9               	movwf	printGyro@RawG+3
  3169  04A4  318E  2636  3183   	fcall	_printGyro
  3170                           
  3171                           ;blueGyro.c: 412: cputs(" z=");
  3172  04A7  3090               	movlw	low (STR_11| (0+32768))
  3173  04A8  00F5               	movwf	cputs@s
  3174  04A9  3081               	movlw	high (STR_11| (0+32768))
  3175  04AA  00F6               	movwf	cputs@s+1
  3176  04AB  318B  235B  3183   	fcall	_cputs
  3177                           
  3178                           ;blueGyro.c: 413: printGyro(gs->Gyroz);
  3179  04AE  0020               	movlb	0	; select bank0
  3180  04AF  085E               	movf	DisplayInfo@gs,w
  3181  04B0  3E0C               	addlw	12
  3182  04B1  0086               	movwf	6
  3183  04B2  0187               	clrf	7
  3184  04B3  3F40               	moviw [0]fsr1
  3185  04B4  00DA               	movwf	??_DisplayInfo
  3186  04B5  3F41               	moviw [1]fsr1
  3187  04B6  00DB               	movwf	??_DisplayInfo+1
  3188  04B7  085A               	movf	??_DisplayInfo,w
  3189  04B8  00D6               	movwf	printGyro@RawG
  3190  04B9  085B               	movf	??_DisplayInfo+1,w
  3191  04BA  00D7               	movwf	printGyro@RawG+1
  3192  04BB  0D89               	rlf	9,f
  3193  04BC  3B89               	subwfb	9,f
  3194  04BD  0989               	comf	9,f
  3195  04BE  00D8               	movwf	printGyro@RawG+2
  3196  04BF  00D9               	movwf	printGyro@RawG+3
  3197  04C0  318E  2636  3183   	fcall	_printGyro
  3198                           
  3199                           ;blueGyro.c: 415: cputs("\r\n");
  3200  04C3  303C               	movlw	low ((STR_14+14)| (0+32768))
  3201  04C4  00F5               	movwf	cputs@s
  3202  04C5  3081               	movlw	high ((STR_14+14)| (0+32768))
  3203  04C6  00F6               	movwf	cputs@s+1
  3204  04C7  318B  235B         	fcall	_cputs
  3205  04C9  0008               	return
  3206  04CA                     __end_of_DisplayInfo:	
  3207                           
  3208                           	psect	text11
  3209  0B6F                     __ptext11:	
  3210 ;; *************** function _printUShort *****************
  3211 ;; Defined at:
  3212 ;;		line 335 in file "blueGyro.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  value           2    9[BANK0 ] unsigned short 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  buffer         16   11[BANK0 ] unsigned char [16]
  3217 ;; Return value:  Size  Location     Type
  3218 ;;		None               void
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3226 ;;      Params:         0       2       0       0
  3227 ;;      Locals:         0      16       0       0
  3228 ;;      Temps:          0       0       0       0
  3229 ;;      Totals:         0      18       0       0
  3230 ;;Total ram usage:       18 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    3
  3233 ;; This function calls:
  3234 ;;		_cputs
  3235 ;;		_utoa
  3236 ;; This function is called by:
  3237 ;;		_DisplayInfo
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _printUShort
  3243  0B6F                     _printUShort:	
  3244                           
  3245                           ;blueGyro.c: 337: char buffer[16];
  3246                           ;blueGyro.c: 338: utoa(buffer,value,10); cputs(buffer);
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _printUShort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3250  0B6F  0020               	movlb	0	; select bank0
  3251  0B70  082A               	movf	printUShort@value+1,w
  3252  0B71  00A1               	movwf	utoa@val+1
  3253  0B72  0829               	movf	printUShort@value,w
  3254  0B73  00A0               	movwf	utoa@val
  3255  0B74  300A               	movlw	10
  3256  0B75  00A2               	movwf	utoa@base
  3257  0B76  3000               	movlw	0
  3258  0B77  00A3               	movwf	utoa@base+1
  3259  0B78  302B               	movlw	(low (printUShort@buffer| 0))& (0+255)
  3260  0B79  318E  26CD  318B   	fcall	_utoa
  3261  0B7C  302B               	movlw	low printUShort@buffer
  3262  0B7D  00F5               	movwf	cputs@s
  3263  0B7E  3000               	movlw	high printUShort@buffer
  3264  0B7F  00F6               	movwf	cputs@s+1
  3265  0B80  318B  235B         	fcall	_cputs
  3266  0B82  0008               	return
  3267  0B83                     __end_of_printUShort:	
  3268                           
  3269                           	psect	text12
  3270  0E36                     __ptext12:	
  3271 ;; *************** function _printGyro *****************
  3272 ;; Defined at:
  3273 ;;		line 324 in file "blueGyro.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  RawG            4   54[BANK0 ] long 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3287 ;;      Params:         0       4       0       0
  3288 ;;      Locals:         0       0       0       0
  3289 ;;      Temps:          0       0       0       0
  3290 ;;      Totals:         0       4       0       0
  3291 ;;Total ram usage:        4 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    5
  3294 ;; This function calls:
  3295 ;;		___aldiv
  3296 ;;		___lmul
  3297 ;;		_printDeciValue
  3298 ;; This function is called by:
  3299 ;;		_DisplayInfo
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _printGyro
  3305  0E36                     _printGyro:	
  3306                           
  3307                           ;blueGyro.c: 330: RawG *= 625L;
  3308                           
  3309                           ;incstack = 0
  3310                           ; Regs used in _printGyro: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3311  0E36  3000               	movlw	0
  3312  0E37  00F5               	movwf	___lmul@multiplier+3
  3313  0E38  3000               	movlw	0
  3314  0E39  00F4               	movwf	___lmul@multiplier+2
  3315  0E3A  3002               	movlw	2
  3316  0E3B  00F3               	movwf	___lmul@multiplier+1
  3317  0E3C  3071               	movlw	113
  3318  0E3D  00F2               	movwf	___lmul@multiplier
  3319  0E3E  0020               	movlb	0	; select bank0
  3320  0E3F  0859               	movf	printGyro@RawG+3,w
  3321  0E40  00F9               	movwf	___lmul@multiplicand+3
  3322  0E41  0858               	movf	printGyro@RawG+2,w
  3323  0E42  00F8               	movwf	___lmul@multiplicand+2
  3324  0E43  0857               	movf	printGyro@RawG+1,w
  3325  0E44  00F7               	movwf	___lmul@multiplicand+1
  3326  0E45  0856               	movf	printGyro@RawG,w
  3327  0E46  00F6               	movwf	___lmul@multiplicand
  3328  0E47  318C  248B  318E   	fcall	___lmul
  3329  0E4A  0875               	movf	?___lmul+3,w
  3330  0E4B  0020               	movlb	0	; select bank0
  3331  0E4C  00D9               	movwf	printGyro@RawG+3
  3332  0E4D  0874               	movf	?___lmul+2,w
  3333  0E4E  00D8               	movwf	printGyro@RawG+2
  3334  0E4F  0873               	movf	?___lmul+1,w
  3335  0E50  00D7               	movwf	printGyro@RawG+1
  3336  0E51  0872               	movf	?___lmul,w
  3337  0E52  00D6               	movwf	printGyro@RawG
  3338                           
  3339                           ;blueGyro.c: 331: RawG /= 1024L;
  3340  0E53  3000               	movlw	0
  3341  0E54  00F5               	movwf	___aldiv@divisor+3
  3342  0E55  3000               	movlw	0
  3343  0E56  00F4               	movwf	___aldiv@divisor+2
  3344  0E57  3004               	movlw	4
  3345  0E58  00F3               	movwf	___aldiv@divisor+1
  3346  0E59  3000               	movlw	0
  3347  0E5A  00F2               	movwf	___aldiv@divisor
  3348  0E5B  0859               	movf	printGyro@RawG+3,w
  3349  0E5C  00F9               	movwf	___aldiv@dividend+3
  3350  0E5D  0858               	movf	printGyro@RawG+2,w
  3351  0E5E  00F8               	movwf	___aldiv@dividend+2
  3352  0E5F  0857               	movf	printGyro@RawG+1,w
  3353  0E60  00F7               	movwf	___aldiv@dividend+1
  3354  0E61  0856               	movf	printGyro@RawG,w
  3355  0E62  00F6               	movwf	___aldiv@dividend
  3356  0E63  3186  2679  318E   	fcall	___aldiv
  3357  0E66  0875               	movf	?___aldiv+3,w
  3358  0E67  0020               	movlb	0	; select bank0
  3359  0E68  00D9               	movwf	printGyro@RawG+3
  3360  0E69  0874               	movf	?___aldiv+2,w
  3361  0E6A  00D8               	movwf	printGyro@RawG+2
  3362  0E6B  0873               	movf	?___aldiv+1,w
  3363  0E6C  00D7               	movwf	printGyro@RawG+1
  3364  0E6D  0872               	movf	?___aldiv,w
  3365  0E6E  00D6               	movwf	printGyro@RawG
  3366                           
  3367                           ;blueGyro.c: 332: printDeciValue(RawG);
  3368  0E6F  0859               	movf	printGyro@RawG+3,w
  3369  0E70  00BF               	movwf	printDeciValue@value+3
  3370  0E71  0858               	movf	printGyro@RawG+2,w
  3371  0E72  00BE               	movwf	printDeciValue@value+2
  3372  0E73  0857               	movf	printGyro@RawG+1,w
  3373  0E74  00BD               	movwf	printDeciValue@value+1
  3374  0E75  0856               	movf	printGyro@RawG,w
  3375  0E76  00BC               	movwf	printDeciValue@value
  3376  0E77  3187  277A         	fcall	_printDeciValue
  3377  0E79  0008               	return
  3378  0E7A                     __end_of_printGyro:	
  3379                           
  3380                           	psect	text13
  3381  077A                     __ptext13:	
  3382 ;; *************** function _printDeciValue *****************
  3383 ;; Defined at:
  3384 ;;		line 291 in file "blueGyro.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  value           4   28[BANK0 ] long 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  3389 ;;  _lvalue         4   50[BANK0 ] long 
  3390 ;;  T               2   48[BANK0 ] unsigned short 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3400 ;;      Params:         0       4       0       0
  3401 ;;      Locals:         0      22       0       0
  3402 ;;      Temps:          0       0       0       0
  3403 ;;      Totals:         0      26       0       0
  3404 ;;Total ram usage:       26 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    4
  3407 ;; This function calls:
  3408 ;;		___aldiv
  3409 ;;		___lwmod
  3410 ;;		_cputs
  3411 ;;		_ltoa
  3412 ;;		_putch
  3413 ;;		_utoa
  3414 ;; This function is called by:
  3415 ;;		_printGyro
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _printDeciValue
  3421  077A                     _printDeciValue:	
  3422                           
  3423                           ;blueGyro.c: 293: char buffer[16];
  3424                           ;blueGyro.c: 294: long _lvalue;
  3425                           ;blueGyro.c: 295: unsigned short T;
  3426                           ;blueGyro.c: 297: if(value <0)
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _printDeciValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3430  077A  0020               	movlb	0	; select bank0
  3431  077B  1FBF               	btfss	printDeciValue@value+3,7
  3432  077C  2F92               	goto	l2619
  3433                           
  3434                           ;blueGyro.c: 298: {
  3435                           ;blueGyro.c: 299: putch('-');
  3436  077D  302D               	movlw	45
  3437  077E  318B  23CD  3187   	fcall	_putch
  3438                           
  3439                           ;blueGyro.c: 300: _lvalue = (-value);
  3440  0781  0020               	movlb	0	; select bank0
  3441  0782  093C               	comf	printDeciValue@value,w
  3442  0783  00D2               	movwf	printDeciValue@_lvalue
  3443  0784  093D               	comf	printDeciValue@value+1,w
  3444  0785  00D3               	movwf	printDeciValue@_lvalue+1
  3445  0786  093E               	comf	printDeciValue@value+2,w
  3446  0787  00D4               	movwf	printDeciValue@_lvalue+2
  3447  0788  093F               	comf	printDeciValue@value+3,w
  3448  0789  00D5               	movwf	printDeciValue@_lvalue+3
  3449  078A  0AD2               	incf	printDeciValue@_lvalue,f
  3450  078B  1903               	skipnz
  3451  078C  0AD3               	incf	printDeciValue@_lvalue+1,f
  3452  078D  1903               	skipnz
  3453  078E  0AD4               	incf	printDeciValue@_lvalue+2,f
  3454  078F  1903               	skipnz
  3455  0790  0AD5               	incf	printDeciValue@_lvalue+3,f
  3456                           
  3457                           ;blueGyro.c: 301: }
  3458  0791  2F9A               	goto	l2621
  3459  0792                     l2619:	
  3460                           
  3461                           ;blueGyro.c: 302: else
  3462                           ;blueGyro.c: 303: _lvalue = value;
  3463  0792  083F               	movf	printDeciValue@value+3,w
  3464  0793  00D5               	movwf	printDeciValue@_lvalue+3
  3465  0794  083E               	movf	printDeciValue@value+2,w
  3466  0795  00D4               	movwf	printDeciValue@_lvalue+2
  3467  0796  083D               	movf	printDeciValue@value+1,w
  3468  0797  00D3               	movwf	printDeciValue@_lvalue+1
  3469  0798  083C               	movf	printDeciValue@value,w
  3470  0799  00D2               	movwf	printDeciValue@_lvalue
  3471  079A                     l2621:	
  3472                           
  3473                           ;blueGyro.c: 305: ltoa(buffer,_lvalue /10,10);cputs(buffer);
  3474  079A  3000               	movlw	0
  3475  079B  00F5               	movwf	___aldiv@divisor+3
  3476  079C  3000               	movlw	0
  3477  079D  00F4               	movwf	___aldiv@divisor+2
  3478  079E  3000               	movlw	0
  3479  079F  00F3               	movwf	___aldiv@divisor+1
  3480  07A0  300A               	movlw	10
  3481  07A1  00F2               	movwf	___aldiv@divisor
  3482  07A2  0855               	movf	printDeciValue@_lvalue+3,w
  3483  07A3  00F9               	movwf	___aldiv@dividend+3
  3484  07A4  0854               	movf	printDeciValue@_lvalue+2,w
  3485  07A5  00F8               	movwf	___aldiv@dividend+2
  3486  07A6  0853               	movf	printDeciValue@_lvalue+1,w
  3487  07A7  00F7               	movwf	___aldiv@dividend+1
  3488  07A8  0852               	movf	printDeciValue@_lvalue,w
  3489  07A9  00F6               	movwf	___aldiv@dividend
  3490  07AA  3186  2679  3187   	fcall	___aldiv
  3491  07AD  0875               	movf	?___aldiv+3,w
  3492  07AE  0020               	movlb	0	; select bank0
  3493  07AF  00B6               	movwf	ltoa@val+3
  3494  07B0  0874               	movf	?___aldiv+2,w
  3495  07B1  00B5               	movwf	ltoa@val+2
  3496  07B2  0873               	movf	?___aldiv+1,w
  3497  07B3  00B4               	movwf	ltoa@val+1
  3498  07B4  0872               	movf	?___aldiv,w
  3499  07B5  00B3               	movwf	ltoa@val
  3500  07B6  300A               	movlw	10
  3501  07B7  00B7               	movwf	ltoa@base
  3502  07B8  3000               	movlw	0
  3503  07B9  00B8               	movwf	ltoa@base+1
  3504  07BA  3040               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  3505  07BB  318C  245D  3187   	fcall	_ltoa
  3506  07BE  3040               	movlw	low printDeciValue@buffer
  3507  07BF  00F5               	movwf	cputs@s
  3508  07C0  3000               	movlw	high printDeciValue@buffer
  3509  07C1  00F6               	movwf	cputs@s+1
  3510  07C2  318B  235B  3187   	fcall	_cputs
  3511                           
  3512                           ;blueGyro.c: 306: putch('.');
  3513  07C5  302E               	movlw	46
  3514  07C6  318B  23CD  3187   	fcall	_putch
  3515                           
  3516                           ;blueGyro.c: 308: T = (unsigned short) _lvalue % 10;
  3517  07C9  300A               	movlw	10
  3518  07CA  00F2               	movwf	___lwmod@divisor
  3519  07CB  3000               	movlw	0
  3520  07CC  00F3               	movwf	___lwmod@divisor+1
  3521  07CD  0020               	movlb	0	; select bank0
  3522  07CE  0853               	movf	printDeciValue@_lvalue+1,w
  3523  07CF  00F5               	movwf	___lwmod@dividend+1
  3524  07D0  0852               	movf	printDeciValue@_lvalue,w
  3525  07D1  00F4               	movwf	___lwmod@dividend
  3526  07D2  318C  2431  3187   	fcall	___lwmod
  3527  07D5  0873               	movf	?___lwmod+1,w
  3528  07D6  0020               	movlb	0	; select bank0
  3529  07D7  00D1               	movwf	printDeciValue@T+1
  3530  07D8  0872               	movf	?___lwmod,w
  3531  07D9  00D0               	movwf	printDeciValue@T
  3532                           
  3533                           ;blueGyro.c: 310: utoa(buffer,T,10);cputs(buffer);
  3534  07DA  0851               	movf	printDeciValue@T+1,w
  3535  07DB  00A1               	movwf	utoa@val+1
  3536  07DC  0850               	movf	printDeciValue@T,w
  3537  07DD  00A0               	movwf	utoa@val
  3538  07DE  300A               	movlw	10
  3539  07DF  00A2               	movwf	utoa@base
  3540  07E0  3000               	movlw	0
  3541  07E1  00A3               	movwf	utoa@base+1
  3542  07E2  3040               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  3543  07E3  318E  26CD  3187   	fcall	_utoa
  3544  07E6  3040               	movlw	low printDeciValue@buffer
  3545  07E7  00F5               	movwf	cputs@s
  3546  07E8  3000               	movlw	high printDeciValue@buffer
  3547  07E9  00F6               	movwf	cputs@s+1
  3548  07EA  318B  235B         	fcall	_cputs
  3549  07EC  0008               	return
  3550  07ED                     __end_of_printDeciValue:	
  3551                           
  3552                           	psect	text14
  3553  0DF2                     __ptext14:	
  3554 ;; *************** function _printGForce *****************
  3555 ;; Defined at:
  3556 ;;		line 314 in file "blueGyro.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  RawG            4   54[BANK0 ] long 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;		None               void
  3563 ;; Registers used:
  3564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3570 ;;      Params:         0       4       0       0
  3571 ;;      Locals:         0       0       0       0
  3572 ;;      Temps:          0       0       0       0
  3573 ;;      Totals:         0       4       0       0
  3574 ;;Total ram usage:        4 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    5
  3577 ;; This function calls:
  3578 ;;		___aldiv
  3579 ;;		___lmul
  3580 ;;		_printCentiValue
  3581 ;; This function is called by:
  3582 ;;		_DisplayInfo
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _printGForce
  3588  0DF2                     _printGForce:	
  3589                           
  3590                           ;blueGyro.c: 319: RawG *= 50L;
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in _printGForce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3594  0DF2  3000               	movlw	0
  3595  0DF3  00F5               	movwf	___lmul@multiplier+3
  3596  0DF4  3000               	movlw	0
  3597  0DF5  00F4               	movwf	___lmul@multiplier+2
  3598  0DF6  3000               	movlw	0
  3599  0DF7  00F3               	movwf	___lmul@multiplier+1
  3600  0DF8  3032               	movlw	50
  3601  0DF9  00F2               	movwf	___lmul@multiplier
  3602  0DFA  0020               	movlb	0	; select bank0
  3603  0DFB  0859               	movf	printGForce@RawG+3,w
  3604  0DFC  00F9               	movwf	___lmul@multiplicand+3
  3605  0DFD  0858               	movf	printGForce@RawG+2,w
  3606  0DFE  00F8               	movwf	___lmul@multiplicand+2
  3607  0DFF  0857               	movf	printGForce@RawG+1,w
  3608  0E00  00F7               	movwf	___lmul@multiplicand+1
  3609  0E01  0856               	movf	printGForce@RawG,w
  3610  0E02  00F6               	movwf	___lmul@multiplicand
  3611  0E03  318C  248B  318D   	fcall	___lmul
  3612  0E06  0875               	movf	?___lmul+3,w
  3613  0E07  0020               	movlb	0	; select bank0
  3614  0E08  00D9               	movwf	printGForce@RawG+3
  3615  0E09  0874               	movf	?___lmul+2,w
  3616  0E0A  00D8               	movwf	printGForce@RawG+2
  3617  0E0B  0873               	movf	?___lmul+1,w
  3618  0E0C  00D7               	movwf	printGForce@RawG+1
  3619  0E0D  0872               	movf	?___lmul,w
  3620  0E0E  00D6               	movwf	printGForce@RawG
  3621                           
  3622                           ;blueGyro.c: 320: RawG /= 1024L;
  3623  0E0F  3000               	movlw	0
  3624  0E10  00F5               	movwf	___aldiv@divisor+3
  3625  0E11  3000               	movlw	0
  3626  0E12  00F4               	movwf	___aldiv@divisor+2
  3627  0E13  3004               	movlw	4
  3628  0E14  00F3               	movwf	___aldiv@divisor+1
  3629  0E15  3000               	movlw	0
  3630  0E16  00F2               	movwf	___aldiv@divisor
  3631  0E17  0859               	movf	printGForce@RawG+3,w
  3632  0E18  00F9               	movwf	___aldiv@dividend+3
  3633  0E19  0858               	movf	printGForce@RawG+2,w
  3634  0E1A  00F8               	movwf	___aldiv@dividend+2
  3635  0E1B  0857               	movf	printGForce@RawG+1,w
  3636  0E1C  00F7               	movwf	___aldiv@dividend+1
  3637  0E1D  0856               	movf	printGForce@RawG,w
  3638  0E1E  00F6               	movwf	___aldiv@dividend
  3639  0E1F  3186  2679  318D   	fcall	___aldiv
  3640  0E22  0875               	movf	?___aldiv+3,w
  3641  0E23  0020               	movlb	0	; select bank0
  3642  0E24  00D9               	movwf	printGForce@RawG+3
  3643  0E25  0874               	movf	?___aldiv+2,w
  3644  0E26  00D8               	movwf	printGForce@RawG+2
  3645  0E27  0873               	movf	?___aldiv+1,w
  3646  0E28  00D7               	movwf	printGForce@RawG+1
  3647  0E29  0872               	movf	?___aldiv,w
  3648  0E2A  00D6               	movwf	printGForce@RawG
  3649                           
  3650                           ;blueGyro.c: 321: printCentiValue(RawG);
  3651  0E2B  0859               	movf	printGForce@RawG+3,w
  3652  0E2C  00BF               	movwf	printCentiValue@value+3
  3653  0E2D  0858               	movf	printGForce@RawG+2,w
  3654  0E2E  00BE               	movwf	printCentiValue@value+2
  3655  0E2F  0857               	movf	printGForce@RawG+1,w
  3656  0E30  00BD               	movwf	printCentiValue@value+1
  3657  0E31  0856               	movf	printGForce@RawG,w
  3658  0E32  00BC               	movwf	printCentiValue@value
  3659  0E33  3186  26FB         	fcall	_printCentiValue
  3660  0E35  0008               	return
  3661  0E36                     __end_of_printGForce:	
  3662                           
  3663                           	psect	text15
  3664  06FB                     __ptext15:	
  3665 ;; *************** function _printCentiValue *****************
  3666 ;; Defined at:
  3667 ;;		line 266 in file "blueGyro.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  value           4   28[BANK0 ] long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  3672 ;;  _lvalue         4   50[BANK0 ] long 
  3673 ;;  T               2   48[BANK0 ] unsigned short 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3683 ;;      Params:         0       4       0       0
  3684 ;;      Locals:         0      22       0       0
  3685 ;;      Temps:          0       0       0       0
  3686 ;;      Totals:         0      26       0       0
  3687 ;;Total ram usage:       26 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    4
  3690 ;; This function calls:
  3691 ;;		___aldiv
  3692 ;;		___lwmod
  3693 ;;		_cputs
  3694 ;;		_ltoa
  3695 ;;		_putch
  3696 ;;		_utoa
  3697 ;; This function is called by:
  3698 ;;		_printGForce
  3699 ;;		_printVoltage
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _printCentiValue
  3705  06FB                     _printCentiValue:	
  3706                           
  3707                           ;blueGyro.c: 268: char buffer[16];
  3708                           ;blueGyro.c: 269: long _lvalue;
  3709                           ;blueGyro.c: 270: unsigned short T;
  3710                           ;blueGyro.c: 272: if(value <0)
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _printCentiValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3714  06FB  0020               	movlb	0	; select bank0
  3715  06FC  1FBF               	btfss	printCentiValue@value+3,7
  3716  06FD  2F13               	goto	l2597
  3717                           
  3718                           ;blueGyro.c: 273: {
  3719                           ;blueGyro.c: 274: putch('-');
  3720  06FE  302D               	movlw	45
  3721  06FF  318B  23CD  3186   	fcall	_putch
  3722                           
  3723                           ;blueGyro.c: 275: _lvalue = (-value);
  3724  0702  0020               	movlb	0	; select bank0
  3725  0703  093C               	comf	printCentiValue@value,w
  3726  0704  00D2               	movwf	printCentiValue@_lvalue
  3727  0705  093D               	comf	printCentiValue@value+1,w
  3728  0706  00D3               	movwf	printCentiValue@_lvalue+1
  3729  0707  093E               	comf	printCentiValue@value+2,w
  3730  0708  00D4               	movwf	printCentiValue@_lvalue+2
  3731  0709  093F               	comf	printCentiValue@value+3,w
  3732  070A  00D5               	movwf	printCentiValue@_lvalue+3
  3733  070B  0AD2               	incf	printCentiValue@_lvalue,f
  3734  070C  1903               	skipnz
  3735  070D  0AD3               	incf	printCentiValue@_lvalue+1,f
  3736  070E  1903               	skipnz
  3737  070F  0AD4               	incf	printCentiValue@_lvalue+2,f
  3738  0710  1903               	skipnz
  3739  0711  0AD5               	incf	printCentiValue@_lvalue+3,f
  3740                           
  3741                           ;blueGyro.c: 276: }
  3742  0712  2F1B               	goto	l2599
  3743  0713                     l2597:	
  3744                           
  3745                           ;blueGyro.c: 277: else
  3746                           ;blueGyro.c: 278: _lvalue = value;
  3747  0713  083F               	movf	printCentiValue@value+3,w
  3748  0714  00D5               	movwf	printCentiValue@_lvalue+3
  3749  0715  083E               	movf	printCentiValue@value+2,w
  3750  0716  00D4               	movwf	printCentiValue@_lvalue+2
  3751  0717  083D               	movf	printCentiValue@value+1,w
  3752  0718  00D3               	movwf	printCentiValue@_lvalue+1
  3753  0719  083C               	movf	printCentiValue@value,w
  3754  071A  00D2               	movwf	printCentiValue@_lvalue
  3755  071B                     l2599:	
  3756                           
  3757                           ;blueGyro.c: 280: ltoa(buffer,_lvalue /100,10);cputs(buffer);
  3758  071B  3000               	movlw	0
  3759  071C  00F5               	movwf	___aldiv@divisor+3
  3760  071D  3000               	movlw	0
  3761  071E  00F4               	movwf	___aldiv@divisor+2
  3762  071F  3000               	movlw	0
  3763  0720  00F3               	movwf	___aldiv@divisor+1
  3764  0721  3064               	movlw	100
  3765  0722  00F2               	movwf	___aldiv@divisor
  3766  0723  0855               	movf	printCentiValue@_lvalue+3,w
  3767  0724  00F9               	movwf	___aldiv@dividend+3
  3768  0725  0854               	movf	printCentiValue@_lvalue+2,w
  3769  0726  00F8               	movwf	___aldiv@dividend+2
  3770  0727  0853               	movf	printCentiValue@_lvalue+1,w
  3771  0728  00F7               	movwf	___aldiv@dividend+1
  3772  0729  0852               	movf	printCentiValue@_lvalue,w
  3773  072A  00F6               	movwf	___aldiv@dividend
  3774  072B  3186  2679  3186   	fcall	___aldiv
  3775  072E  0875               	movf	?___aldiv+3,w
  3776  072F  0020               	movlb	0	; select bank0
  3777  0730  00B6               	movwf	ltoa@val+3
  3778  0731  0874               	movf	?___aldiv+2,w
  3779  0732  00B5               	movwf	ltoa@val+2
  3780  0733  0873               	movf	?___aldiv+1,w
  3781  0734  00B4               	movwf	ltoa@val+1
  3782  0735  0872               	movf	?___aldiv,w
  3783  0736  00B3               	movwf	ltoa@val
  3784  0737  300A               	movlw	10
  3785  0738  00B7               	movwf	ltoa@base
  3786  0739  3000               	movlw	0
  3787  073A  00B8               	movwf	ltoa@base+1
  3788  073B  3040               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  3789  073C  318C  245D  3186   	fcall	_ltoa
  3790  073F  3040               	movlw	low printCentiValue@buffer
  3791  0740  00F5               	movwf	cputs@s
  3792  0741  3000               	movlw	high printCentiValue@buffer
  3793  0742  00F6               	movwf	cputs@s+1
  3794  0743  318B  235B  3186   	fcall	_cputs
  3795                           
  3796                           ;blueGyro.c: 281: putch('.');
  3797  0746  302E               	movlw	46
  3798  0747  318B  23CD  3186   	fcall	_putch
  3799                           
  3800                           ;blueGyro.c: 283: T = (unsigned short) _lvalue % 100;
  3801  074A  3064               	movlw	100
  3802  074B  00F2               	movwf	___lwmod@divisor
  3803  074C  3000               	movlw	0
  3804  074D  00F3               	movwf	___lwmod@divisor+1
  3805  074E  0020               	movlb	0	; select bank0
  3806  074F  0853               	movf	printCentiValue@_lvalue+1,w
  3807  0750  00F5               	movwf	___lwmod@dividend+1
  3808  0751  0852               	movf	printCentiValue@_lvalue,w
  3809  0752  00F4               	movwf	___lwmod@dividend
  3810  0753  318C  2431  3186   	fcall	___lwmod
  3811  0756  0873               	movf	?___lwmod+1,w
  3812  0757  0020               	movlb	0	; select bank0
  3813  0758  00D1               	movwf	printCentiValue@T+1
  3814  0759  0872               	movf	?___lwmod,w
  3815  075A  00D0               	movwf	printCentiValue@T
  3816                           
  3817                           ;blueGyro.c: 285: if(T < 10)
  3818  075B  3000               	movlw	0
  3819  075C  0251               	subwf	printCentiValue@T+1,w
  3820  075D  300A               	movlw	10
  3821  075E  1903               	skipnz
  3822  075F  0250               	subwf	printCentiValue@T,w
  3823  0760  1803               	skipnc
  3824  0761  2F66               	goto	l241
  3825                           
  3826                           ;blueGyro.c: 286: putch('0');
  3827  0762  3030               	movlw	48
  3828  0763  318B  23CD  3186   	fcall	_putch
  3829  0766                     l241:	
  3830                           
  3831                           ;blueGyro.c: 287: utoa(buffer,T,10);cputs(buffer);
  3832  0766  0020               	movlb	0	; select bank0
  3833  0767  0851               	movf	printCentiValue@T+1,w
  3834  0768  00A1               	movwf	utoa@val+1
  3835  0769  0850               	movf	printCentiValue@T,w
  3836  076A  00A0               	movwf	utoa@val
  3837  076B  300A               	movlw	10
  3838  076C  00A2               	movwf	utoa@base
  3839  076D  3000               	movlw	0
  3840  076E  00A3               	movwf	utoa@base+1
  3841  076F  3040               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  3842  0770  318E  26CD  3186   	fcall	_utoa
  3843  0773  3040               	movlw	low printCentiValue@buffer
  3844  0774  00F5               	movwf	cputs@s
  3845  0775  3000               	movlw	high printCentiValue@buffer
  3846  0776  00F6               	movwf	cputs@s+1
  3847  0777  318B  235B         	fcall	_cputs
  3848  0779  0008               	return
  3849  077A                     __end_of_printCentiValue:	
  3850                           
  3851                           	psect	text16
  3852  0ECD                     __ptext16:	
  3853 ;; *************** function _utoa *****************
  3854 ;; Defined at:
  3855 ;;		line 17 in file "/Applications/microchip/xc8/v1.35/sources/common/itoa.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  buf             1    wreg     PTR unsigned char 
  3858 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), 
  3859 ;;  val             2    0[BANK0 ] unsigned int 
  3860 ;;  base            2    2[BANK0 ] int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  3863 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), 
  3864 ;;  v               2    5[BANK0 ] unsigned int 
  3865 ;;  c               1    7[BANK0 ] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      PTR unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3875 ;;      Params:         0       4       0       0
  3876 ;;      Locals:         0       4       0       0
  3877 ;;      Temps:          0       1       0       0
  3878 ;;      Totals:         0       9       0       0
  3879 ;;Total ram usage:        9 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    2
  3882 ;; This function calls:
  3883 ;;		___lwdiv
  3884 ;;		___lwmod
  3885 ;; This function is called by:
  3886 ;;		_printCentiValue
  3887 ;;		_printDeciValue
  3888 ;;		_printUShort
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function _utoa
  3894  0ECD                     _utoa:	
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3898                           ;utoa@buf stored from wreg
  3899  0ECD  0020               	movlb	0	; select bank0
  3900  0ECE  00A8               	movwf	utoa@buf
  3901  0ECF  0821               	movf	utoa@val+1,w
  3902  0ED0  00A6               	movwf	utoa@v+1
  3903  0ED1  0820               	movf	utoa@val,w
  3904  0ED2  00A5               	movwf	utoa@v
  3905  0ED3                     l2509:	
  3906  0ED3  0823               	movf	utoa@base+1,w
  3907  0ED4  00F3               	movwf	___lwdiv@divisor+1
  3908  0ED5  0822               	movf	utoa@base,w
  3909  0ED6  00F2               	movwf	___lwdiv@divisor
  3910  0ED7  0826               	movf	utoa@v+1,w
  3911  0ED8  00F5               	movwf	___lwdiv@dividend+1
  3912  0ED9  0825               	movf	utoa@v,w
  3913  0EDA  00F4               	movwf	___lwdiv@dividend
  3914  0EDB  318C  24BD  318E   	fcall	___lwdiv
  3915  0EDE  0873               	movf	?___lwdiv+1,w
  3916  0EDF  0020               	movlb	0	; select bank0
  3917  0EE0  00A6               	movwf	utoa@v+1
  3918  0EE1  0872               	movf	?___lwdiv,w
  3919  0EE2  00A5               	movwf	utoa@v
  3920  0EE3  3001               	movlw	1
  3921  0EE4  00A4               	movwf	??_utoa
  3922  0EE5  0824               	movf	??_utoa,w
  3923  0EE6  07A8               	addwf	utoa@buf,f
  3924  0EE7  0825               	movf	utoa@v,w
  3925  0EE8  0426               	iorwf	utoa@v+1,w
  3926  0EE9  1D03               	btfss	3,2
  3927  0EEA  2ED3               	goto	l2509
  3928  0EEB  0828               	movf	utoa@buf,w
  3929  0EEC  0086               	movwf	6
  3930  0EED  0187               	clrf	7
  3931  0EEE  0181               	clrf	1
  3932  0EEF  3001               	movlw	1
  3933  0EF0  02A8               	subwf	utoa@buf,f
  3934  0EF1                     l2519:	
  3935  0EF1  0823               	movf	utoa@base+1,w
  3936  0EF2  00F3               	movwf	___lwmod@divisor+1
  3937  0EF3  0822               	movf	utoa@base,w
  3938  0EF4  00F2               	movwf	___lwmod@divisor
  3939  0EF5  0821               	movf	utoa@val+1,w
  3940  0EF6  00F5               	movwf	___lwmod@dividend+1
  3941  0EF7  0820               	movf	utoa@val,w
  3942  0EF8  00F4               	movwf	___lwmod@dividend
  3943  0EF9  318C  2431  318E   	fcall	___lwmod
  3944  0EFC  0872               	movf	?___lwmod,w
  3945  0EFD  0020               	movlb	0	; select bank0
  3946  0EFE  00A4               	movwf	??_utoa
  3947  0EFF  0824               	movf	??_utoa,w
  3948  0F00  00A7               	movwf	utoa@c
  3949  0F01  0823               	movf	utoa@base+1,w
  3950  0F02  00F3               	movwf	___lwdiv@divisor+1
  3951  0F03  0822               	movf	utoa@base,w
  3952  0F04  00F2               	movwf	___lwdiv@divisor
  3953  0F05  0821               	movf	utoa@val+1,w
  3954  0F06  00F5               	movwf	___lwdiv@dividend+1
  3955  0F07  0820               	movf	utoa@val,w
  3956  0F08  00F4               	movwf	___lwdiv@dividend
  3957  0F09  318C  24BD  318E   	fcall	___lwdiv
  3958  0F0C  0873               	movf	?___lwdiv+1,w
  3959  0F0D  0020               	movlb	0	; select bank0
  3960  0F0E  00A1               	movwf	utoa@val+1
  3961  0F0F  0872               	movf	?___lwdiv,w
  3962  0F10  00A0               	movwf	utoa@val
  3963  0F11  300A               	movlw	10
  3964  0F12  0227               	subwf	utoa@c,w
  3965  0F13  1C03               	skipc
  3966  0F14  2F19               	goto	l704
  3967  0F15  3007               	movlw	7
  3968  0F16  00A4               	movwf	??_utoa
  3969  0F17  0824               	movf	??_utoa,w
  3970  0F18  07A7               	addwf	utoa@c,f
  3971  0F19                     l704:	
  3972  0F19  3030               	movlw	48
  3973  0F1A  00A4               	movwf	??_utoa
  3974  0F1B  0824               	movf	??_utoa,w
  3975  0F1C  07A7               	addwf	utoa@c,f
  3976  0F1D  0827               	movf	utoa@c,w
  3977  0F1E  00A4               	movwf	??_utoa
  3978  0F1F  0828               	movf	utoa@buf,w
  3979  0F20  0086               	movwf	6
  3980  0F21  0187               	clrf	7
  3981  0F22  0824               	movf	??_utoa,w
  3982  0F23  0081               	movwf	1
  3983  0F24  3001               	movlw	1
  3984  0F25  02A8               	subwf	utoa@buf,f
  3985  0F26  0820               	movf	utoa@val,w
  3986  0F27  0421               	iorwf	utoa@val+1,w
  3987  0F28  1D03               	btfss	3,2
  3988  0F29  2EF1               	goto	l2519
  3989                           
  3990                           ;	Return value of _utoa is never used
  3991  0F2A  3001               	movlw	1
  3992  0F2B  00A4               	movwf	??_utoa
  3993  0F2C  0824               	movf	??_utoa,w
  3994  0F2D  07A8               	addwf	utoa@buf,f
  3995  0F2E  0008               	return
  3996  0F2F                     __end_of_utoa:	
  3997                           
  3998                           	psect	text17
  3999  0C31                     __ptext17:	
  4000 ;; *************** function ___lwmod *****************
  4001 ;; Defined at:
  4002 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwmod.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  divisor         2    2[COMMON] unsigned int 
  4005 ;;  dividend        2    4[COMMON] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  counter         1    7[COMMON] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    2[COMMON] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4017 ;;      Params:         4       0       0       0
  4018 ;;      Locals:         1       0       0       0
  4019 ;;      Temps:          1       0       0       0
  4020 ;;      Totals:         6       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_printCentiValue
  4028 ;;		_printDeciValue
  4029 ;;		_utoa
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function ___lwmod
  4035  0C31                     ___lwmod:	
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4039  0C31  0872               	movf	___lwmod@divisor,w
  4040  0C32  0473               	iorwf	___lwmod@divisor+1,w
  4041  0C33  1903               	btfsc	3,2
  4042  0C34  2C58               	goto	l1733
  4043  0C35  01F7               	clrf	___lwmod@counter
  4044  0C36  0AF7               	incf	___lwmod@counter,f
  4045  0C37                     l1723:	
  4046  0C37  1BF3               	btfsc	___lwmod@divisor+1,7
  4047  0C38  2C43               	goto	l1725
  4048  0C39  3001               	movlw	1
  4049  0C3A                     u1315:	
  4050  0C3A  35F2               	lslf	___lwmod@divisor,f
  4051  0C3B  0DF3               	rlf	___lwmod@divisor+1,f
  4052  0C3C  0B89               	decfsz	9,f
  4053  0C3D  2C3A               	goto	u1315
  4054  0C3E  3001               	movlw	1
  4055  0C3F  00F6               	movwf	??___lwmod
  4056  0C40  0876               	movf	??___lwmod,w
  4057  0C41  07F7               	addwf	___lwmod@counter,f
  4058  0C42  2C37               	goto	l1723
  4059  0C43                     l1725:	
  4060  0C43  0873               	movf	___lwmod@divisor+1,w
  4061  0C44  0275               	subwf	___lwmod@dividend+1,w
  4062  0C45  1D03               	skipz
  4063  0C46  2C49               	goto	u1335
  4064  0C47  0872               	movf	___lwmod@divisor,w
  4065  0C48  0274               	subwf	___lwmod@dividend,w
  4066  0C49                     u1335:	
  4067  0C49  1C03               	skipc
  4068  0C4A  2C4F               	goto	l1729
  4069  0C4B  0872               	movf	___lwmod@divisor,w
  4070  0C4C  02F4               	subwf	___lwmod@dividend,f
  4071  0C4D  0873               	movf	___lwmod@divisor+1,w
  4072  0C4E  3BF5               	subwfb	___lwmod@dividend+1,f
  4073  0C4F                     l1729:	
  4074  0C4F  3001               	movlw	1
  4075  0C50                     u1345:	
  4076  0C50  36F3               	lsrf	___lwmod@divisor+1,f
  4077  0C51  0CF2               	rrf	___lwmod@divisor,f
  4078  0C52  0B89               	decfsz	9,f
  4079  0C53  2C50               	goto	u1345
  4080  0C54  3001               	movlw	1
  4081  0C55  02F7               	subwf	___lwmod@counter,f
  4082  0C56  1D03               	btfss	3,2
  4083  0C57  2C43               	goto	l1725
  4084  0C58                     l1733:	
  4085  0C58  0875               	movf	___lwmod@dividend+1,w
  4086  0C59  00F3               	movwf	?___lwmod+1
  4087  0C5A  0874               	movf	___lwmod@dividend,w
  4088  0C5B  00F2               	movwf	?___lwmod
  4089  0C5C  0008               	return
  4090  0C5D                     __end_of___lwmod:	
  4091                           
  4092                           	psect	text18
  4093  0CBD                     __ptext18:	
  4094 ;; *************** function ___lwdiv *****************
  4095 ;; Defined at:
  4096 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwdiv.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  divisor         2    2[COMMON] unsigned int 
  4099 ;;  dividend        2    4[COMMON] unsigned int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  quotient        2    7[COMMON] unsigned int 
  4102 ;;  counter         1    9[COMMON] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    2[COMMON] unsigned int 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4112 ;;      Params:         4       0       0       0
  4113 ;;      Locals:         3       0       0       0
  4114 ;;      Temps:          1       0       0       0
  4115 ;;      Totals:         8       0       0       0
  4116 ;;Total ram usage:        8 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_utoa
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function ___lwdiv
  4128  0CBD                     ___lwdiv:	
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4132  0CBD  01F7               	clrf	___lwdiv@quotient
  4133  0CBE  01F8               	clrf	___lwdiv@quotient+1
  4134  0CBF  0872               	movf	___lwdiv@divisor,w
  4135  0CC0  0473               	iorwf	___lwdiv@divisor+1,w
  4136  0CC1  1903               	btfsc	3,2
  4137  0CC2  2CEC               	goto	l1711
  4138  0CC3  01F9               	clrf	___lwdiv@counter
  4139  0CC4  0AF9               	incf	___lwdiv@counter,f
  4140  0CC5                     l1699:	
  4141  0CC5  1BF3               	btfsc	___lwdiv@divisor+1,7
  4142  0CC6  2CD1               	goto	l1701
  4143  0CC7  3001               	movlw	1
  4144  0CC8                     u1245:	
  4145  0CC8  35F2               	lslf	___lwdiv@divisor,f
  4146  0CC9  0DF3               	rlf	___lwdiv@divisor+1,f
  4147  0CCA  0B89               	decfsz	9,f
  4148  0CCB  2CC8               	goto	u1245
  4149  0CCC  3001               	movlw	1
  4150  0CCD  00F6               	movwf	??___lwdiv
  4151  0CCE  0876               	movf	??___lwdiv,w
  4152  0CCF  07F9               	addwf	___lwdiv@counter,f
  4153  0CD0  2CC5               	goto	l1699
  4154  0CD1                     l1701:	
  4155  0CD1  3001               	movlw	1
  4156  0CD2                     u1265:	
  4157  0CD2  35F7               	lslf	___lwdiv@quotient,f
  4158  0CD3  0DF8               	rlf	___lwdiv@quotient+1,f
  4159  0CD4  0B89               	decfsz	9,f
  4160  0CD5  2CD2               	goto	u1265
  4161  0CD6  0873               	movf	___lwdiv@divisor+1,w
  4162  0CD7  0275               	subwf	___lwdiv@dividend+1,w
  4163  0CD8  1D03               	skipz
  4164  0CD9  2CDC               	goto	u1275
  4165  0CDA  0872               	movf	___lwdiv@divisor,w
  4166  0CDB  0274               	subwf	___lwdiv@dividend,w
  4167  0CDC                     u1275:	
  4168  0CDC  1C03               	skipc
  4169  0CDD  2CE3               	goto	l1707
  4170  0CDE  0872               	movf	___lwdiv@divisor,w
  4171  0CDF  02F4               	subwf	___lwdiv@dividend,f
  4172  0CE0  0873               	movf	___lwdiv@divisor+1,w
  4173  0CE1  3BF5               	subwfb	___lwdiv@dividend+1,f
  4174  0CE2  1477               	bsf	___lwdiv@quotient,0
  4175  0CE3                     l1707:	
  4176  0CE3  3001               	movlw	1
  4177  0CE4                     u1285:	
  4178  0CE4  36F3               	lsrf	___lwdiv@divisor+1,f
  4179  0CE5  0CF2               	rrf	___lwdiv@divisor,f
  4180  0CE6  0B89               	decfsz	9,f
  4181  0CE7  2CE4               	goto	u1285
  4182  0CE8  3001               	movlw	1
  4183  0CE9  02F9               	subwf	___lwdiv@counter,f
  4184  0CEA  1D03               	btfss	3,2
  4185  0CEB  2CD1               	goto	l1701
  4186  0CEC                     l1711:	
  4187  0CEC  0878               	movf	___lwdiv@quotient+1,w
  4188  0CED  00F3               	movwf	?___lwdiv+1
  4189  0CEE  0877               	movf	___lwdiv@quotient,w
  4190  0CEF  00F2               	movwf	?___lwdiv
  4191  0CF0  0008               	return
  4192  0CF1                     __end_of___lwdiv:	
  4193                           
  4194                           	psect	text19
  4195  0C5D                     __ptext19:	
  4196 ;; *************** function _ltoa *****************
  4197 ;; Defined at:
  4198 ;;		line 7 in file "/Applications/microchip/xc8/v1.35/sources/common/ltoa.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  buf             1    wreg     PTR unsigned char 
  4201 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), 
  4202 ;;  val             4   19[BANK0 ] long 
  4203 ;;  base            2   23[BANK0 ] int 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  4206 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), 
  4207 ;;  cp              1   26[BANK0 ] PTR unsigned char 
  4208 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      PTR unsigned char 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4218 ;;      Params:         0       6       0       0
  4219 ;;      Locals:         0       2       0       0
  4220 ;;      Temps:          0       1       0       0
  4221 ;;      Totals:         0       9       0       0
  4222 ;;Total ram usage:        9 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    3
  4225 ;; This function calls:
  4226 ;;		_ultoa
  4227 ;; This function is called by:
  4228 ;;		_printCentiValue
  4229 ;;		_printDeciValue
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           
  4234                           ;psect for function _ltoa
  4235  0C5D                     _ltoa:	
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _ltoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4239                           ;ltoa@buf stored from wreg
  4240  0C5D  0020               	movlb	0	; select bank0
  4241  0C5E  00BB               	movwf	ltoa@buf
  4242  0C5F  083B               	movf	ltoa@buf,w
  4243  0C60  00B9               	movwf	??_ltoa
  4244  0C61  0839               	movf	??_ltoa,w
  4245  0C62  00BA               	movwf	ltoa@cp
  4246  0C63  1FB6               	btfss	ltoa@val+3,7
  4247  0C64  2C7B               	goto	l2503
  4248  0C65  302D               	movlw	45
  4249  0C66  00B9               	movwf	??_ltoa
  4250  0C67  083B               	movf	ltoa@buf,w
  4251  0C68  0086               	movwf	6
  4252  0C69  0187               	clrf	7
  4253  0C6A  0839               	movf	??_ltoa,w
  4254  0C6B  0081               	movwf	1
  4255  0C6C  3001               	movlw	1
  4256  0C6D  00B9               	movwf	??_ltoa
  4257  0C6E  0839               	movf	??_ltoa,w
  4258  0C6F  07BB               	addwf	ltoa@buf,f
  4259  0C70  09B3               	comf	ltoa@val,f
  4260  0C71  09B4               	comf	ltoa@val+1,f
  4261  0C72  09B5               	comf	ltoa@val+2,f
  4262  0C73  09B6               	comf	ltoa@val+3,f
  4263  0C74  0AB3               	incf	ltoa@val,f
  4264  0C75  1903               	skipnz
  4265  0C76  0AB4               	incf	ltoa@val+1,f
  4266  0C77  1903               	skipnz
  4267  0C78  0AB5               	incf	ltoa@val+2,f
  4268  0C79  1903               	skipnz
  4269  0C7A  0AB6               	incf	ltoa@val+3,f
  4270  0C7B                     l2503:	
  4271  0C7B  0836               	movf	ltoa@val+3,w
  4272  0C7C  00A9               	movwf	ultoa@val+3
  4273  0C7D  0835               	movf	ltoa@val+2,w
  4274  0C7E  00A8               	movwf	ultoa@val+2
  4275  0C7F  0834               	movf	ltoa@val+1,w
  4276  0C80  00A7               	movwf	ultoa@val+1
  4277  0C81  0833               	movf	ltoa@val,w
  4278  0C82  00A6               	movwf	ultoa@val
  4279  0C83  0838               	movf	ltoa@base+1,w
  4280  0C84  00AB               	movwf	ultoa@base+1
  4281  0C85  0837               	movf	ltoa@base,w
  4282  0C86  00AA               	movwf	ultoa@base
  4283  0C87  083B               	movf	ltoa@buf,w
  4284  0C88  3185  2568         	fcall	_ultoa
  4285  0C8A  0008               	return
  4286  0C8B                     __end_of_ltoa:	
  4287                           ;	Return value of _ltoa is never used
  4288                           
  4289                           
  4290                           	psect	text20
  4291  0568                     __ptext20:	
  4292 ;; *************** function _ultoa *****************
  4293 ;; Defined at:
  4294 ;;		line 32 in file "/Applications/microchip/xc8/v1.35/sources/common/ltoa.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  buf             1    wreg     PTR unsigned char 
  4297 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), 
  4298 ;;  val             4    6[BANK0 ] unsigned long 
  4299 ;;  base            2   10[BANK0 ] int 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  4302 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), 
  4303 ;;  v               4   13[BANK0 ] unsigned long 
  4304 ;;  c               1   17[BANK0 ] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      PTR unsigned char 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4314 ;;      Params:         0       6       0       0
  4315 ;;      Locals:         0       6       0       0
  4316 ;;      Temps:          0       1       0       0
  4317 ;;      Totals:         0      13       0       0
  4318 ;;Total ram usage:       13 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    2
  4321 ;; This function calls:
  4322 ;;		___lldiv
  4323 ;;		___llmod
  4324 ;; This function is called by:
  4325 ;;		_ltoa
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _ultoa
  4331  0568                     _ultoa:	
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in _ultoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4335                           ;ultoa@buf stored from wreg
  4336  0568  0020               	movlb	0	; select bank0
  4337  0569  00B2               	movwf	ultoa@buf
  4338  056A  0829               	movf	ultoa@val+3,w
  4339  056B  00B0               	movwf	ultoa@v+3
  4340  056C  0828               	movf	ultoa@val+2,w
  4341  056D  00AF               	movwf	ultoa@v+2
  4342  056E  0827               	movf	ultoa@val+1,w
  4343  056F  00AE               	movwf	ultoa@v+1
  4344  0570  0826               	movf	ultoa@val,w
  4345  0571  00AD               	movwf	ultoa@v
  4346  0572                     l2423:	
  4347  0572  082A               	movf	ultoa@base,w
  4348  0573  00F2               	movwf	___lldiv@divisor
  4349  0574  082B               	movf	ultoa@base+1,w
  4350  0575  00F3               	movwf	___lldiv@divisor+1
  4351  0576  0D89               	rlf	9,f
  4352  0577  3B89               	subwfb	9,f
  4353  0578  0989               	comf	9,f
  4354  0579  00F4               	movwf	___lldiv@divisor+2
  4355  057A  00F5               	movwf	___lldiv@divisor+3
  4356  057B  0830               	movf	ultoa@v+3,w
  4357  057C  00F9               	movwf	___lldiv@dividend+3
  4358  057D  082F               	movf	ultoa@v+2,w
  4359  057E  00F8               	movwf	___lldiv@dividend+2
  4360  057F  082E               	movf	ultoa@v+1,w
  4361  0580  00F7               	movwf	___lldiv@dividend+1
  4362  0581  082D               	movf	ultoa@v,w
  4363  0582  00F6               	movwf	___lldiv@dividend
  4364  0583  318E  267A  3185   	fcall	___lldiv
  4365  0586  0875               	movf	?___lldiv+3,w
  4366  0587  0020               	movlb	0	; select bank0
  4367  0588  00B0               	movwf	ultoa@v+3
  4368  0589  0874               	movf	?___lldiv+2,w
  4369  058A  00AF               	movwf	ultoa@v+2
  4370  058B  0873               	movf	?___lldiv+1,w
  4371  058C  00AE               	movwf	ultoa@v+1
  4372  058D  0872               	movf	?___lldiv,w
  4373  058E  00AD               	movwf	ultoa@v
  4374  058F  3001               	movlw	1
  4375  0590  00AC               	movwf	??_ultoa
  4376  0591  082C               	movf	??_ultoa,w
  4377  0592  07B2               	addwf	ultoa@buf,f
  4378  0593  0830               	movf	ultoa@v+3,w
  4379  0594  042F               	iorwf	ultoa@v+2,w
  4380  0595  042E               	iorwf	ultoa@v+1,w
  4381  0596  042D               	iorwf	ultoa@v,w
  4382  0597  1D03               	skipz
  4383  0598  2D72               	goto	l2423
  4384  0599  0832               	movf	ultoa@buf,w
  4385  059A  0086               	movwf	6
  4386  059B  0187               	clrf	7
  4387  059C  0181               	clrf	1
  4388  059D  3001               	movlw	1
  4389  059E  02B2               	subwf	ultoa@buf,f
  4390  059F                     l2433:	
  4391  059F  082A               	movf	ultoa@base,w
  4392  05A0  00F2               	movwf	___llmod@divisor
  4393  05A1  082B               	movf	ultoa@base+1,w
  4394  05A2  00F3               	movwf	___llmod@divisor+1
  4395  05A3  0D89               	rlf	9,f
  4396  05A4  3B89               	subwfb	9,f
  4397  05A5  0989               	comf	9,f
  4398  05A6  00F4               	movwf	___llmod@divisor+2
  4399  05A7  00F5               	movwf	___llmod@divisor+3
  4400  05A8  0829               	movf	ultoa@val+3,w
  4401  05A9  00F9               	movwf	___llmod@dividend+3
  4402  05AA  0828               	movf	ultoa@val+2,w
  4403  05AB  00F8               	movwf	___llmod@dividend+2
  4404  05AC  0827               	movf	ultoa@val+1,w
  4405  05AD  00F7               	movwf	___llmod@dividend+1
  4406  05AE  0826               	movf	ultoa@val,w
  4407  05AF  00F6               	movwf	___llmod@dividend
  4408  05B0  318D  25AF  3185   	fcall	___llmod
  4409  05B3  0872               	movf	?___llmod,w
  4410  05B4  0020               	movlb	0	; select bank0
  4411  05B5  00AC               	movwf	??_ultoa
  4412  05B6  082C               	movf	??_ultoa,w
  4413  05B7  00B1               	movwf	ultoa@c
  4414  05B8  082A               	movf	ultoa@base,w
  4415  05B9  00F2               	movwf	___lldiv@divisor
  4416  05BA  082B               	movf	ultoa@base+1,w
  4417  05BB  00F3               	movwf	___lldiv@divisor+1
  4418  05BC  0D89               	rlf	9,f
  4419  05BD  3B89               	subwfb	9,f
  4420  05BE  0989               	comf	9,f
  4421  05BF  00F4               	movwf	___lldiv@divisor+2
  4422  05C0  00F5               	movwf	___lldiv@divisor+3
  4423  05C1  0829               	movf	ultoa@val+3,w
  4424  05C2  00F9               	movwf	___lldiv@dividend+3
  4425  05C3  0828               	movf	ultoa@val+2,w
  4426  05C4  00F8               	movwf	___lldiv@dividend+2
  4427  05C5  0827               	movf	ultoa@val+1,w
  4428  05C6  00F7               	movwf	___lldiv@dividend+1
  4429  05C7  0826               	movf	ultoa@val,w
  4430  05C8  00F6               	movwf	___lldiv@dividend
  4431  05C9  318E  267A  3185   	fcall	___lldiv
  4432  05CC  0875               	movf	?___lldiv+3,w
  4433  05CD  0020               	movlb	0	; select bank0
  4434  05CE  00A9               	movwf	ultoa@val+3
  4435  05CF  0874               	movf	?___lldiv+2,w
  4436  05D0  00A8               	movwf	ultoa@val+2
  4437  05D1  0873               	movf	?___lldiv+1,w
  4438  05D2  00A7               	movwf	ultoa@val+1
  4439  05D3  0872               	movf	?___lldiv,w
  4440  05D4  00A6               	movwf	ultoa@val
  4441  05D5  300A               	movlw	10
  4442  05D6  0231               	subwf	ultoa@c,w
  4443  05D7  1C03               	skipc
  4444  05D8  2DDD               	goto	l787
  4445  05D9  3007               	movlw	7
  4446  05DA  00AC               	movwf	??_ultoa
  4447  05DB  082C               	movf	??_ultoa,w
  4448  05DC  07B1               	addwf	ultoa@c,f
  4449  05DD                     l787:	
  4450  05DD  3030               	movlw	48
  4451  05DE  00AC               	movwf	??_ultoa
  4452  05DF  082C               	movf	??_ultoa,w
  4453  05E0  07B1               	addwf	ultoa@c,f
  4454  05E1  0831               	movf	ultoa@c,w
  4455  05E2  00AC               	movwf	??_ultoa
  4456  05E3  0832               	movf	ultoa@buf,w
  4457  05E4  0086               	movwf	6
  4458  05E5  0187               	clrf	7
  4459  05E6  082C               	movf	??_ultoa,w
  4460  05E7  0081               	movwf	1
  4461  05E8  3001               	movlw	1
  4462  05E9  02B2               	subwf	ultoa@buf,f
  4463  05EA  0829               	movf	ultoa@val+3,w
  4464  05EB  0428               	iorwf	ultoa@val+2,w
  4465  05EC  0427               	iorwf	ultoa@val+1,w
  4466  05ED  0426               	iorwf	ultoa@val,w
  4467  05EE  1903               	btfsc	3,2
  4468  05EF  0008               	return
  4469  05F0  2D9F               	goto	l2433
  4470  05F1                     __end_of_ultoa:	
  4471                           ;	Return value of _ultoa is never used
  4472                           
  4473                           
  4474                           	psect	text21
  4475  0DAF                     __ptext21:	
  4476 ;; *************** function ___llmod *****************
  4477 ;; Defined at:
  4478 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/llmod.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  divisor         4    2[COMMON] unsigned long 
  4481 ;;  dividend        4    6[COMMON] unsigned long 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  counter         1    1[BANK0 ] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  4    2[COMMON] unsigned long 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4493 ;;      Params:         8       0       0       0
  4494 ;;      Locals:         0       1       0       0
  4495 ;;      Temps:          0       1       0       0
  4496 ;;      Totals:         8       2       0       0
  4497 ;;Total ram usage:       10 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_ultoa
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function ___llmod
  4509  0DAF                     ___llmod:	
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4513  0DAF  0875               	movf	___llmod@divisor+3,w
  4514  0DB0  0474               	iorwf	___llmod@divisor+2,w
  4515  0DB1  0473               	iorwf	___llmod@divisor+1,w
  4516  0DB2  0472               	iorwf	___llmod@divisor,w
  4517  0DB3  1903               	skipnz
  4518  0DB4  2DE9               	goto	l2397
  4519  0DB5  0020               	movlb	0	; select bank0
  4520  0DB6  01A1               	clrf	___llmod@counter
  4521  0DB7  0AA1               	incf	___llmod@counter,f
  4522  0DB8                     l2387:	
  4523  0DB8  1BF5               	btfsc	___llmod@divisor+3,7
  4524  0DB9  2DC6               	goto	l2389
  4525  0DBA  3001               	movlw	1
  4526  0DBB                     u2135:	
  4527  0DBB  35F2               	lslf	___llmod@divisor,f
  4528  0DBC  0DF3               	rlf	___llmod@divisor+1,f
  4529  0DBD  0DF4               	rlf	___llmod@divisor+2,f
  4530  0DBE  0DF5               	rlf	___llmod@divisor+3,f
  4531  0DBF  0B89               	decfsz	9,f
  4532  0DC0  2DBB               	goto	u2135
  4533  0DC1  3001               	movlw	1
  4534  0DC2  00A0               	movwf	??___llmod
  4535  0DC3  0820               	movf	??___llmod,w
  4536  0DC4  07A1               	addwf	___llmod@counter,f
  4537  0DC5  2DB8               	goto	l2387
  4538  0DC6                     l2389:	
  4539  0DC6  0875               	movf	___llmod@divisor+3,w
  4540  0DC7  0279               	subwf	___llmod@dividend+3,w
  4541  0DC8  1D03               	skipz
  4542  0DC9  2DD4               	goto	u2155
  4543  0DCA  0874               	movf	___llmod@divisor+2,w
  4544  0DCB  0278               	subwf	___llmod@dividend+2,w
  4545  0DCC  1D03               	skipz
  4546  0DCD  2DD4               	goto	u2155
  4547  0DCE  0873               	movf	___llmod@divisor+1,w
  4548  0DCF  0277               	subwf	___llmod@dividend+1,w
  4549  0DD0  1D03               	skipz
  4550  0DD1  2DD4               	goto	u2155
  4551  0DD2  0872               	movf	___llmod@divisor,w
  4552  0DD3  0276               	subwf	___llmod@dividend,w
  4553  0DD4                     u2155:	
  4554  0DD4  1C03               	skipc
  4555  0DD5  2DDE               	goto	l2393
  4556  0DD6  0872               	movf	___llmod@divisor,w
  4557  0DD7  02F6               	subwf	___llmod@dividend,f
  4558  0DD8  0873               	movf	___llmod@divisor+1,w
  4559  0DD9  3BF7               	subwfb	___llmod@dividend+1,f
  4560  0DDA  0874               	movf	___llmod@divisor+2,w
  4561  0DDB  3BF8               	subwfb	___llmod@dividend+2,f
  4562  0DDC  0875               	movf	___llmod@divisor+3,w
  4563  0DDD  3BF9               	subwfb	___llmod@dividend+3,f
  4564  0DDE                     l2393:	
  4565  0DDE  3001               	movlw	1
  4566  0DDF                     u2165:	
  4567  0DDF  36F5               	lsrf	___llmod@divisor+3,f
  4568  0DE0  0CF4               	rrf	___llmod@divisor+2,f
  4569  0DE1  0CF3               	rrf	___llmod@divisor+1,f
  4570  0DE2  0CF2               	rrf	___llmod@divisor,f
  4571  0DE3  0B89               	decfsz	9,f
  4572  0DE4  2DDF               	goto	u2165
  4573  0DE5  3001               	movlw	1
  4574  0DE6  02A1               	subwf	___llmod@counter,f
  4575  0DE7  1D03               	btfss	3,2
  4576  0DE8  2DC6               	goto	l2389
  4577  0DE9                     l2397:	
  4578  0DE9  0879               	movf	___llmod@dividend+3,w
  4579  0DEA  00F5               	movwf	?___llmod+3
  4580  0DEB  0878               	movf	___llmod@dividend+2,w
  4581  0DEC  00F4               	movwf	?___llmod+2
  4582  0DED  0877               	movf	___llmod@dividend+1,w
  4583  0DEE  00F3               	movwf	?___llmod+1
  4584  0DEF  0876               	movf	___llmod@dividend,w
  4585  0DF0  00F2               	movwf	?___llmod
  4586  0DF1  0008               	return
  4587  0DF2                     __end_of___llmod:	
  4588                           
  4589                           	psect	text22
  4590  0E7A                     __ptext22:	
  4591 ;; *************** function ___lldiv *****************
  4592 ;; Defined at:
  4593 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lldiv.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  divisor         4    2[COMMON] unsigned long 
  4596 ;;  dividend        4    6[COMMON] unsigned long 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  quotient        4    1[BANK0 ] unsigned long 
  4599 ;;  counter         1    5[BANK0 ] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  4    2[COMMON] unsigned long 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4609 ;;      Params:         8       0       0       0
  4610 ;;      Locals:         0       5       0       0
  4611 ;;      Temps:          0       1       0       0
  4612 ;;      Totals:         8       6       0       0
  4613 ;;Total ram usage:       14 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    1
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_ultoa
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function ___lldiv
  4625  0E7A                     ___lldiv:	
  4626                           
  4627                           ;incstack = 0
  4628                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4629  0E7A  3000               	movlw	0
  4630  0E7B  0020               	movlb	0	; select bank0
  4631  0E7C  00A4               	movwf	___lldiv@quotient+3
  4632  0E7D  3000               	movlw	0
  4633  0E7E  00A3               	movwf	___lldiv@quotient+2
  4634  0E7F  3000               	movlw	0
  4635  0E80  00A2               	movwf	___lldiv@quotient+1
  4636  0E81  3000               	movlw	0
  4637  0E82  00A1               	movwf	___lldiv@quotient
  4638  0E83  0875               	movf	___lldiv@divisor+3,w
  4639  0E84  0474               	iorwf	___lldiv@divisor+2,w
  4640  0E85  0473               	iorwf	___lldiv@divisor+1,w
  4641  0E86  0472               	iorwf	___lldiv@divisor,w
  4642  0E87  1903               	skipnz
  4643  0E88  2EC4               	goto	l2377
  4644  0E89  01A5               	clrf	___lldiv@counter
  4645  0E8A  0AA5               	incf	___lldiv@counter,f
  4646  0E8B                     l2363:	
  4647  0E8B  1BF5               	btfsc	___lldiv@divisor+3,7
  4648  0E8C  2E99               	goto	l2365
  4649  0E8D  3001               	movlw	1
  4650  0E8E                     u2065:	
  4651  0E8E  35F2               	lslf	___lldiv@divisor,f
  4652  0E8F  0DF3               	rlf	___lldiv@divisor+1,f
  4653  0E90  0DF4               	rlf	___lldiv@divisor+2,f
  4654  0E91  0DF5               	rlf	___lldiv@divisor+3,f
  4655  0E92  0B89               	decfsz	9,f
  4656  0E93  2E8E               	goto	u2065
  4657  0E94  3001               	movlw	1
  4658  0E95  00A0               	movwf	??___lldiv
  4659  0E96  0820               	movf	??___lldiv,w
  4660  0E97  07A5               	addwf	___lldiv@counter,f
  4661  0E98  2E8B               	goto	l2363
  4662  0E99                     l2365:	
  4663  0E99  3001               	movlw	1
  4664  0E9A                     u2085:	
  4665  0E9A  35A1               	lslf	___lldiv@quotient,f
  4666  0E9B  0DA2               	rlf	___lldiv@quotient+1,f
  4667  0E9C  0DA3               	rlf	___lldiv@quotient+2,f
  4668  0E9D  0DA4               	rlf	___lldiv@quotient+3,f
  4669  0E9E  0B89               	decfsz	9,f
  4670  0E9F  2E9A               	goto	u2085
  4671  0EA0  0875               	movf	___lldiv@divisor+3,w
  4672  0EA1  0279               	subwf	___lldiv@dividend+3,w
  4673  0EA2  1D03               	skipz
  4674  0EA3  2EAE               	goto	u2095
  4675  0EA4  0874               	movf	___lldiv@divisor+2,w
  4676  0EA5  0278               	subwf	___lldiv@dividend+2,w
  4677  0EA6  1D03               	skipz
  4678  0EA7  2EAE               	goto	u2095
  4679  0EA8  0873               	movf	___lldiv@divisor+1,w
  4680  0EA9  0277               	subwf	___lldiv@dividend+1,w
  4681  0EAA  1D03               	skipz
  4682  0EAB  2EAE               	goto	u2095
  4683  0EAC  0872               	movf	___lldiv@divisor,w
  4684  0EAD  0276               	subwf	___lldiv@dividend,w
  4685  0EAE                     u2095:	
  4686  0EAE  1C03               	skipc
  4687  0EAF  2EB9               	goto	l2373
  4688  0EB0  0872               	movf	___lldiv@divisor,w
  4689  0EB1  02F6               	subwf	___lldiv@dividend,f
  4690  0EB2  0873               	movf	___lldiv@divisor+1,w
  4691  0EB3  3BF7               	subwfb	___lldiv@dividend+1,f
  4692  0EB4  0874               	movf	___lldiv@divisor+2,w
  4693  0EB5  3BF8               	subwfb	___lldiv@dividend+2,f
  4694  0EB6  0875               	movf	___lldiv@divisor+3,w
  4695  0EB7  3BF9               	subwfb	___lldiv@dividend+3,f
  4696  0EB8  1421               	bsf	___lldiv@quotient,0
  4697  0EB9                     l2373:	
  4698  0EB9  3001               	movlw	1
  4699  0EBA                     u2105:	
  4700  0EBA  36F5               	lsrf	___lldiv@divisor+3,f
  4701  0EBB  0CF4               	rrf	___lldiv@divisor+2,f
  4702  0EBC  0CF3               	rrf	___lldiv@divisor+1,f
  4703  0EBD  0CF2               	rrf	___lldiv@divisor,f
  4704  0EBE  0B89               	decfsz	9,f
  4705  0EBF  2EBA               	goto	u2105
  4706  0EC0  3001               	movlw	1
  4707  0EC1  02A5               	subwf	___lldiv@counter,f
  4708  0EC2  1D03               	btfss	3,2
  4709  0EC3  2E99               	goto	l2365
  4710  0EC4                     l2377:	
  4711  0EC4  0824               	movf	___lldiv@quotient+3,w
  4712  0EC5  00F5               	movwf	?___lldiv+3
  4713  0EC6  0823               	movf	___lldiv@quotient+2,w
  4714  0EC7  00F4               	movwf	?___lldiv+2
  4715  0EC8  0822               	movf	___lldiv@quotient+1,w
  4716  0EC9  00F3               	movwf	?___lldiv+1
  4717  0ECA  0821               	movf	___lldiv@quotient,w
  4718  0ECB  00F2               	movwf	?___lldiv
  4719  0ECC  0008               	return
  4720  0ECD                     __end_of___lldiv:	
  4721                           
  4722                           	psect	text23
  4723  0679                     __ptext23:	
  4724 ;; *************** function ___aldiv *****************
  4725 ;; Defined at:
  4726 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/aldiv.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  divisor         4    2[COMMON] long 
  4729 ;;  dividend        4    6[COMMON] long 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  quotient        4    3[BANK0 ] long 
  4732 ;;  sign            1    2[BANK0 ] unsigned char 
  4733 ;;  counter         1    1[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  4    2[COMMON] long 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4743 ;;      Params:         8       0       0       0
  4744 ;;      Locals:         0       6       0       0
  4745 ;;      Temps:          0       1       0       0
  4746 ;;      Totals:         8       7       0       0
  4747 ;;Total ram usage:       15 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_printCentiValue
  4754 ;;		_printDeciValue
  4755 ;;		_printGForce
  4756 ;;		_printGyro
  4757 ;;		_printVoltage
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function ___aldiv
  4763  0679                     ___aldiv:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4767  0679  0020               	movlb	0	; select bank0
  4768  067A  01A2               	clrf	___aldiv@sign
  4769  067B  1FF5               	btfss	___aldiv@divisor+3,7
  4770  067C  2E8A               	goto	l484
  4771  067D  09F2               	comf	___aldiv@divisor,f
  4772  067E  09F3               	comf	___aldiv@divisor+1,f
  4773  067F  09F4               	comf	___aldiv@divisor+2,f
  4774  0680  09F5               	comf	___aldiv@divisor+3,f
  4775  0681  0AF2               	incf	___aldiv@divisor,f
  4776  0682  1903               	skipnz
  4777  0683  0AF3               	incf	___aldiv@divisor+1,f
  4778  0684  1903               	skipnz
  4779  0685  0AF4               	incf	___aldiv@divisor+2,f
  4780  0686  1903               	skipnz
  4781  0687  0AF5               	incf	___aldiv@divisor+3,f
  4782  0688  01A2               	clrf	___aldiv@sign
  4783  0689  0AA2               	incf	___aldiv@sign,f
  4784  068A                     l484:	
  4785  068A  1FF9               	btfss	___aldiv@dividend+3,7
  4786  068B  2E9B               	goto	l2547
  4787  068C  09F6               	comf	___aldiv@dividend,f
  4788  068D  09F7               	comf	___aldiv@dividend+1,f
  4789  068E  09F8               	comf	___aldiv@dividend+2,f
  4790  068F  09F9               	comf	___aldiv@dividend+3,f
  4791  0690  0AF6               	incf	___aldiv@dividend,f
  4792  0691  1903               	skipnz
  4793  0692  0AF7               	incf	___aldiv@dividend+1,f
  4794  0693  1903               	skipnz
  4795  0694  0AF8               	incf	___aldiv@dividend+2,f
  4796  0695  1903               	skipnz
  4797  0696  0AF9               	incf	___aldiv@dividend+3,f
  4798  0697  3001               	movlw	1
  4799  0698  00A0               	movwf	??___aldiv
  4800  0699  0820               	movf	??___aldiv,w
  4801  069A  06A2               	xorwf	___aldiv@sign,f
  4802  069B                     l2547:	
  4803  069B  3000               	movlw	0
  4804  069C  00A6               	movwf	___aldiv@quotient+3
  4805  069D  3000               	movlw	0
  4806  069E  00A5               	movwf	___aldiv@quotient+2
  4807  069F  3000               	movlw	0
  4808  06A0  00A4               	movwf	___aldiv@quotient+1
  4809  06A1  3000               	movlw	0
  4810  06A2  00A3               	movwf	___aldiv@quotient
  4811  06A3  0875               	movf	___aldiv@divisor+3,w
  4812  06A4  0474               	iorwf	___aldiv@divisor+2,w
  4813  06A5  0473               	iorwf	___aldiv@divisor+1,w
  4814  06A6  0472               	iorwf	___aldiv@divisor,w
  4815  06A7  1903               	skipnz
  4816  06A8  2EE4               	goto	l2569
  4817  06A9  01A1               	clrf	___aldiv@counter
  4818  06AA  0AA1               	incf	___aldiv@counter,f
  4819  06AB                     l2555:	
  4820  06AB  1BF5               	btfsc	___aldiv@divisor+3,7
  4821  06AC  2EB9               	goto	l2557
  4822  06AD  3001               	movlw	1
  4823  06AE                     u2345:	
  4824  06AE  35F2               	lslf	___aldiv@divisor,f
  4825  06AF  0DF3               	rlf	___aldiv@divisor+1,f
  4826  06B0  0DF4               	rlf	___aldiv@divisor+2,f
  4827  06B1  0DF5               	rlf	___aldiv@divisor+3,f
  4828  06B2  0B89               	decfsz	9,f
  4829  06B3  2EAE               	goto	u2345
  4830  06B4  3001               	movlw	1
  4831  06B5  00A0               	movwf	??___aldiv
  4832  06B6  0820               	movf	??___aldiv,w
  4833  06B7  07A1               	addwf	___aldiv@counter,f
  4834  06B8  2EAB               	goto	l2555
  4835  06B9                     l2557:	
  4836  06B9  3001               	movlw	1
  4837  06BA                     u2365:	
  4838  06BA  35A3               	lslf	___aldiv@quotient,f
  4839  06BB  0DA4               	rlf	___aldiv@quotient+1,f
  4840  06BC  0DA5               	rlf	___aldiv@quotient+2,f
  4841  06BD  0DA6               	rlf	___aldiv@quotient+3,f
  4842  06BE  0B89               	decfsz	9,f
  4843  06BF  2EBA               	goto	u2365
  4844  06C0  0875               	movf	___aldiv@divisor+3,w
  4845  06C1  0279               	subwf	___aldiv@dividend+3,w
  4846  06C2  1D03               	skipz
  4847  06C3  2ECE               	goto	u2375
  4848  06C4  0874               	movf	___aldiv@divisor+2,w
  4849  06C5  0278               	subwf	___aldiv@dividend+2,w
  4850  06C6  1D03               	skipz
  4851  06C7  2ECE               	goto	u2375
  4852  06C8  0873               	movf	___aldiv@divisor+1,w
  4853  06C9  0277               	subwf	___aldiv@dividend+1,w
  4854  06CA  1D03               	skipz
  4855  06CB  2ECE               	goto	u2375
  4856  06CC  0872               	movf	___aldiv@divisor,w
  4857  06CD  0276               	subwf	___aldiv@dividend,w
  4858  06CE                     u2375:	
  4859  06CE  1C03               	skipc
  4860  06CF  2ED9               	goto	l2565
  4861  06D0  0872               	movf	___aldiv@divisor,w
  4862  06D1  02F6               	subwf	___aldiv@dividend,f
  4863  06D2  0873               	movf	___aldiv@divisor+1,w
  4864  06D3  3BF7               	subwfb	___aldiv@dividend+1,f
  4865  06D4  0874               	movf	___aldiv@divisor+2,w
  4866  06D5  3BF8               	subwfb	___aldiv@dividend+2,f
  4867  06D6  0875               	movf	___aldiv@divisor+3,w
  4868  06D7  3BF9               	subwfb	___aldiv@dividend+3,f
  4869  06D8  1423               	bsf	___aldiv@quotient,0
  4870  06D9                     l2565:	
  4871  06D9  3001               	movlw	1
  4872  06DA                     u2385:	
  4873  06DA  36F5               	lsrf	___aldiv@divisor+3,f
  4874  06DB  0CF4               	rrf	___aldiv@divisor+2,f
  4875  06DC  0CF3               	rrf	___aldiv@divisor+1,f
  4876  06DD  0CF2               	rrf	___aldiv@divisor,f
  4877  06DE  0B89               	decfsz	9,f
  4878  06DF  2EDA               	goto	u2385
  4879  06E0  3001               	movlw	1
  4880  06E1  02A1               	subwf	___aldiv@counter,f
  4881  06E2  1D03               	btfss	3,2
  4882  06E3  2EB9               	goto	l2557
  4883  06E4                     l2569:	
  4884  06E4  0822               	movf	___aldiv@sign,w
  4885  06E5  1903               	btfsc	3,2
  4886  06E6  2EF2               	goto	l2573
  4887  06E7  09A3               	comf	___aldiv@quotient,f
  4888  06E8  09A4               	comf	___aldiv@quotient+1,f
  4889  06E9  09A5               	comf	___aldiv@quotient+2,f
  4890  06EA  09A6               	comf	___aldiv@quotient+3,f
  4891  06EB  0AA3               	incf	___aldiv@quotient,f
  4892  06EC  1903               	skipnz
  4893  06ED  0AA4               	incf	___aldiv@quotient+1,f
  4894  06EE  1903               	skipnz
  4895  06EF  0AA5               	incf	___aldiv@quotient+2,f
  4896  06F0  1903               	skipnz
  4897  06F1  0AA6               	incf	___aldiv@quotient+3,f
  4898  06F2                     l2573:	
  4899  06F2  0826               	movf	___aldiv@quotient+3,w
  4900  06F3  00F5               	movwf	?___aldiv+3
  4901  06F4  0825               	movf	___aldiv@quotient+2,w
  4902  06F5  00F4               	movwf	?___aldiv+2
  4903  06F6  0824               	movf	___aldiv@quotient+1,w
  4904  06F7  00F3               	movwf	?___aldiv+1
  4905  06F8  0823               	movf	___aldiv@quotient,w
  4906  06F9  00F2               	movwf	?___aldiv
  4907  06FA  0008               	return
  4908  06FB                     __end_of___aldiv:	
  4909                           
  4910                           	psect	text24
  4911  05F1                     __ptext24:	
  4912 ;; *************** function _isqrt *****************
  4913 ;; Defined at:
  4914 ;;		line 254 in file "blueGyro.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  val             4    2[COMMON] unsigned long 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  b               4   24[BANK0 ] unsigned long 
  4919 ;;  g               4   20[BANK0 ] unsigned long 
  4920 ;;  bshft           4   16[BANK0 ] unsigned long 
  4921 ;;  temp            4   12[BANK0 ] unsigned long 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  2    2[COMMON] unsigned short 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4931 ;;      Params:         4       0       0       0
  4932 ;;      Locals:         0      16       0       0
  4933 ;;      Temps:          0      12       0       0
  4934 ;;      Totals:         4      28       0       0
  4935 ;;Total ram usage:       32 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_DisplayInfo
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _isqrt
  4947  05F1                     _isqrt:	
  4948                           
  4949                           ;blueGyro.c: 255: unsigned long temp, g=0, b = 0x8000, bshft = 15;
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _isqrt: [wreg+status,2+status,0]
  4953  05F1  3000               	movlw	0
  4954  05F2  0020               	movlb	0	; select bank0
  4955  05F3  00B7               	movwf	isqrt@g+3
  4956  05F4  3000               	movlw	0
  4957  05F5  00B6               	movwf	isqrt@g+2
  4958  05F6  3000               	movlw	0
  4959  05F7  00B5               	movwf	isqrt@g+1
  4960  05F8  3000               	movlw	0
  4961  05F9  00B4               	movwf	isqrt@g
  4962  05FA  3000               	movlw	0
  4963  05FB  00BB               	movwf	isqrt@b+3
  4964  05FC  3000               	movlw	0
  4965  05FD  00BA               	movwf	isqrt@b+2
  4966  05FE  3080               	movlw	128
  4967  05FF  00B9               	movwf	isqrt@b+1
  4968  0600  3000               	movlw	0
  4969  0601  00B8               	movwf	isqrt@b
  4970  0602  3000               	movlw	0
  4971  0603  00B3               	movwf	isqrt@bshft+3
  4972  0604  3000               	movlw	0
  4973  0605  00B2               	movwf	isqrt@bshft+2
  4974  0606  3000               	movlw	0
  4975  0607  00B1               	movwf	isqrt@bshft+1
  4976  0608  300F               	movlw	15
  4977  0609  00B0               	movwf	isqrt@bshft
  4978  060A                     l1981:	
  4979                           ;blueGyro.c: 256: do {
  4980                           
  4981                           
  4982                           ;blueGyro.c: 257: if (val >= (temp = (((g << 1) + b)<<bshft--))) {
  4983  060A  0838               	movf	isqrt@b,w
  4984  060B  00A0               	movwf	??_isqrt
  4985  060C  0839               	movf	isqrt@b+1,w
  4986  060D  00A1               	movwf	??_isqrt+1
  4987  060E  083A               	movf	isqrt@b+2,w
  4988  060F  00A2               	movwf	??_isqrt+2
  4989  0610  083B               	movf	isqrt@b+3,w
  4990  0611  00A3               	movwf	??_isqrt+3
  4991  0612  0834               	movf	isqrt@g,w
  4992  0613  00A4               	movwf	??_isqrt+4
  4993  0614  0835               	movf	isqrt@g+1,w
  4994  0615  00A5               	movwf	??_isqrt+5
  4995  0616  0836               	movf	isqrt@g+2,w
  4996  0617  00A6               	movwf	??_isqrt+6
  4997  0618  0837               	movf	isqrt@g+3,w
  4998  0619  00A7               	movwf	??_isqrt+7
  4999  061A  3001               	movlw	1
  5000  061B                     u1615:	
  5001  061B  35A4               	lslf	??_isqrt+4,f
  5002  061C  0DA5               	rlf	??_isqrt+5,f
  5003  061D  0DA6               	rlf	??_isqrt+6,f
  5004  061E  0DA7               	rlf	??_isqrt+7,f
  5005  061F  0B89               	decfsz	9,f
  5006  0620  2E1B               	goto	u1615
  5007  0621  0824               	movf	??_isqrt+4,w
  5008  0622  07A0               	addwf	??_isqrt,f
  5009  0623  0825               	movf	??_isqrt+5,w
  5010  0624  3DA1               	addwfc	??_isqrt+1,f
  5011  0625  0826               	movf	??_isqrt+6,w
  5012  0626  3DA2               	addwfc	??_isqrt+2,f
  5013  0627  0827               	movf	??_isqrt+7,w
  5014  0628  3DA3               	addwfc	??_isqrt+3,f
  5015  0629  0833               	movf	isqrt@bshft+3,w
  5016  062A  00AB               	movwf	??_isqrt+11
  5017  062B  0832               	movf	isqrt@bshft+2,w
  5018  062C  00AA               	movwf	??_isqrt+10
  5019  062D  0831               	movf	isqrt@bshft+1,w
  5020  062E  00A9               	movwf	??_isqrt+9
  5021  062F  0830               	movf	isqrt@bshft,w
  5022  0630  00A8               	movwf	??_isqrt+8
  5023  0631  3001               	movlw	1
  5024  0632  02B0               	subwf	isqrt@bshft,f
  5025  0633  3000               	movlw	0
  5026  0634  3BB1               	subwfb	isqrt@bshft+1,f
  5027  0635  3BB2               	subwfb	isqrt@bshft+2,f
  5028  0636  3BB3               	subwfb	isqrt@bshft+3,f
  5029  0637  0A28               	incf	??_isqrt+8,w
  5030  0638  2E3D               	goto	u1620
  5031  0639                     u1625:	
  5032  0639  35A0               	lslf	??_isqrt,f
  5033  063A  0DA1               	rlf	??_isqrt+1,f
  5034  063B  0DA2               	rlf	??_isqrt+2,f
  5035  063C  0DA3               	rlf	??_isqrt+3,f
  5036  063D                     u1620:	
  5037  063D  0B89               	decfsz	9,f
  5038  063E  2E39               	goto	u1625
  5039  063F  0823               	movf	??_isqrt+3,w
  5040  0640  00AF               	movwf	isqrt@temp+3
  5041  0641  0822               	movf	??_isqrt+2,w
  5042  0642  00AE               	movwf	isqrt@temp+2
  5043  0643  0821               	movf	??_isqrt+1,w
  5044  0644  00AD               	movwf	isqrt@temp+1
  5045  0645  0820               	movf	??_isqrt,w
  5046  0646  00AC               	movwf	isqrt@temp
  5047  0647  082F               	movf	isqrt@temp+3,w
  5048  0648  0275               	subwf	isqrt@val+3,w
  5049  0649  1D03               	skipz
  5050  064A  2E55               	goto	u1635
  5051  064B  082E               	movf	isqrt@temp+2,w
  5052  064C  0274               	subwf	isqrt@val+2,w
  5053  064D  1D03               	skipz
  5054  064E  2E55               	goto	u1635
  5055  064F  082D               	movf	isqrt@temp+1,w
  5056  0650  0273               	subwf	isqrt@val+1,w
  5057  0651  1D03               	skipz
  5058  0652  2E55               	goto	u1635
  5059  0653  082C               	movf	isqrt@temp,w
  5060  0654  0272               	subwf	isqrt@val,w
  5061  0655                     u1635:	
  5062  0655  1C03               	skipc
  5063  0656  2E67               	goto	l1985
  5064                           
  5065                           ;blueGyro.c: 258: g += b;
  5066  0657  0838               	movf	isqrt@b,w
  5067  0658  07B4               	addwf	isqrt@g,f
  5068  0659  0839               	movf	isqrt@b+1,w
  5069  065A  3DB5               	addwfc	isqrt@g+1,f
  5070  065B  083A               	movf	isqrt@b+2,w
  5071  065C  3DB6               	addwfc	isqrt@g+2,f
  5072  065D  083B               	movf	isqrt@b+3,w
  5073  065E  3DB7               	addwfc	isqrt@g+3,f
  5074                           
  5075                           ;blueGyro.c: 259: val -= temp;
  5076  065F  082C               	movf	isqrt@temp,w
  5077  0660  02F2               	subwf	isqrt@val,f
  5078  0661  082D               	movf	isqrt@temp+1,w
  5079  0662  3BF3               	subwfb	isqrt@val+1,f
  5080  0663  082E               	movf	isqrt@temp+2,w
  5081  0664  3BF4               	subwfb	isqrt@val+2,f
  5082  0665  082F               	movf	isqrt@temp+3,w
  5083  0666  3BF5               	subwfb	isqrt@val+3,f
  5084  0667                     l1985:	
  5085                           
  5086                           ;blueGyro.c: 260: }
  5087                           ;blueGyro.c: 261: } while (b >>= 1);
  5088  0667  3001               	movlw	1
  5089  0668                     u1645:	
  5090  0668  36BB               	lsrf	isqrt@b+3,f
  5091  0669  0CBA               	rrf	isqrt@b+2,f
  5092  066A  0CB9               	rrf	isqrt@b+1,f
  5093  066B  0CB8               	rrf	isqrt@b,f
  5094  066C  0B89               	decfsz	9,f
  5095  066D  2E68               	goto	u1645
  5096  066E  083B               	movf	isqrt@b+3,w
  5097  066F  043A               	iorwf	isqrt@b+2,w
  5098  0670  0439               	iorwf	isqrt@b+1,w
  5099  0671  0438               	iorwf	isqrt@b,w
  5100  0672  1D03               	skipz
  5101  0673  2E0A               	goto	l1981
  5102                           
  5103                           ;blueGyro.c: 262: return g;
  5104  0674  0835               	movf	isqrt@g+1,w
  5105  0675  00F3               	movwf	?_isqrt+1
  5106  0676  0834               	movf	isqrt@g,w
  5107  0677  00F2               	movwf	?_isqrt
  5108  0678  0008               	return
  5109  0679                     __end_of_isqrt:	
  5110                           
  5111                           	psect	text25
  5112  04CA                     __ptext25:	
  5113 ;; *************** function _Get_Accel_Values *****************
  5114 ;; Defined at:
  5115 ;;		line 150 in file "MPU6050.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  cval           14    6[BANK0 ] unsigned char [14]
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5129 ;;      Params:         0       0       0       0
  5130 ;;      Locals:         0      14       0       0
  5131 ;;      Temps:          0       5       0       0
  5132 ;;      Totals:         0      19       0       0
  5133 ;;Total ram usage:       19 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    4
  5136 ;; This function calls:
  5137 ;;		_LDByteReadI2C
  5138 ;; This function is called by:
  5139 ;;		_DisplayInfo
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           
  5145                           ;psect for function _Get_Accel_Values
  5146  04CA                     _Get_Accel_Values:	
  5147                           
  5148                           ;MPU6050.c: 152: char cval[14];
  5149                           ;MPU6050.c: 153: LDByteReadI2C(0x68, 0x3B, cval, 14);
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _Get_Accel_Values: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5153  04CA  303B               	movlw	59
  5154  04CB  0020               	movlb	0	; select bank0
  5155  04CC  00A1               	movwf	??_Get_Accel_Values
  5156  04CD  0821               	movf	??_Get_Accel_Values,w
  5157  04CE  00F6               	movwf	LDByteReadI2C@Address
  5158  04CF  3026               	movlw	(low (Get_Accel_Values@cval| 0))& (0+255)
  5159  04D0  00A2               	movwf	??_Get_Accel_Values+1
  5160  04D1  0822               	movf	??_Get_Accel_Values+1,w
  5161  04D2  00F7               	movwf	LDByteReadI2C@Data
  5162  04D3  300E               	movlw	14
  5163  04D4  00A3               	movwf	??_Get_Accel_Values+2
  5164  04D5  0823               	movf	??_Get_Accel_Values+2,w
  5165  04D6  00F8               	movwf	LDByteReadI2C@Length
  5166  04D7  3068               	movlw	104
  5167  04D8  318D  256F  3184   	fcall	_LDByteReadI2C
  5168                           
  5169                           ;MPU6050.c: 154: (GIE = 0);
  5170  04DB  138B               	bcf	11,7	;volatile
  5171                           
  5172                           ;MPU6050.c: 155: CurrentData.Timer = Timerms;
  5173  04DC  087B               	movf	_Timerms+1,w	;volatile
  5174  04DD  0021               	movlb	1	; select bank1
  5175  04DE  00E3               	movwf	((_CurrentData+1)^(0+128)+14)
  5176  04DF  087A               	movf	_Timerms,w	;volatile
  5177  04E0  00E2               	movwf	(_CurrentData^(0+128)+14)
  5178                           
  5179                           ;MPU6050.c: 156: (GIE = 1);
  5180  04E1  178B               	bsf	11,7	;volatile
  5181                           
  5182                           ;MPU6050.c: 157: CurrentData.Gx = ((cval[0]<<8)|cval[1]);
  5183  04E2  0020               	movlb	0	; select bank0
  5184  04E3  0827               	movf	Get_Accel_Values@cval+1,w
  5185  04E4  00A1               	movwf	??_Get_Accel_Values
  5186  04E5  01A2               	clrf	??_Get_Accel_Values+1
  5187  04E6  0826               	movf	Get_Accel_Values@cval,w
  5188  04E7  00A3               	movwf	??_Get_Accel_Values+2
  5189  04E8  01A4               	clrf	??_Get_Accel_Values+3
  5190  04E9  0823               	movf	??_Get_Accel_Values+2,w
  5191  04EA  00A4               	movwf	??_Get_Accel_Values+3
  5192  04EB  01A3               	clrf	??_Get_Accel_Values+2
  5193  04EC  0821               	movf	??_Get_Accel_Values,w
  5194  04ED  0423               	iorwf	??_Get_Accel_Values+2,w
  5195  04EE  0021               	movlb	1	; select bank1
  5196  04EF  00D4               	movwf	_CurrentData^(0+128)
  5197  04F0  0020               	movlb	0	; select bank0
  5198  04F1  0822               	movf	??_Get_Accel_Values+1,w
  5199  04F2  0424               	iorwf	??_Get_Accel_Values+3,w
  5200  04F3  0021               	movlb	1	; select bank1
  5201  04F4  00D5               	movwf	(_CurrentData+1)^(0+128)
  5202                           
  5203                           ;MPU6050.c: 158: CurrentData.Gy = ((cval[2]<<8)|cval[3]);
  5204  04F5  0020               	movlb	0	; select bank0
  5205  04F6  0829               	movf	Get_Accel_Values@cval+3,w
  5206  04F7  00A1               	movwf	??_Get_Accel_Values
  5207  04F8  01A2               	clrf	??_Get_Accel_Values+1
  5208  04F9  0828               	movf	Get_Accel_Values@cval+2,w
  5209  04FA  00A3               	movwf	??_Get_Accel_Values+2
  5210  04FB  01A4               	clrf	??_Get_Accel_Values+3
  5211  04FC  0823               	movf	??_Get_Accel_Values+2,w
  5212  04FD  00A4               	movwf	??_Get_Accel_Values+3
  5213  04FE  01A3               	clrf	??_Get_Accel_Values+2
  5214  04FF  0821               	movf	??_Get_Accel_Values,w
  5215  0500  0423               	iorwf	??_Get_Accel_Values+2,w
  5216  0501  0021               	movlb	1	; select bank1
  5217  0502  00D6               	movwf	(_CurrentData^(0+128)+2)
  5218  0503  0020               	movlb	0	; select bank0
  5219  0504  0822               	movf	??_Get_Accel_Values+1,w
  5220  0505  0424               	iorwf	??_Get_Accel_Values+3,w
  5221  0506  0021               	movlb	1	; select bank1
  5222  0507  00D7               	movwf	((_CurrentData+1)^(0+128)+2)
  5223                           
  5224                           ;MPU6050.c: 159: CurrentData.Gz = ((cval[4]<<8)|cval[5]);
  5225  0508  0020               	movlb	0	; select bank0
  5226  0509  082B               	movf	Get_Accel_Values@cval+5,w
  5227  050A  00A1               	movwf	??_Get_Accel_Values
  5228  050B  01A2               	clrf	??_Get_Accel_Values+1
  5229  050C  082A               	movf	Get_Accel_Values@cval+4,w
  5230  050D  00A3               	movwf	??_Get_Accel_Values+2
  5231  050E  01A4               	clrf	??_Get_Accel_Values+3
  5232  050F  0823               	movf	??_Get_Accel_Values+2,w
  5233  0510  00A4               	movwf	??_Get_Accel_Values+3
  5234  0511  01A3               	clrf	??_Get_Accel_Values+2
  5235  0512  0821               	movf	??_Get_Accel_Values,w
  5236  0513  0423               	iorwf	??_Get_Accel_Values+2,w
  5237  0514  0021               	movlb	1	; select bank1
  5238  0515  00D8               	movwf	(_CurrentData^(0+128)+4)
  5239  0516  0020               	movlb	0	; select bank0
  5240  0517  0822               	movf	??_Get_Accel_Values+1,w
  5241  0518  0424               	iorwf	??_Get_Accel_Values+3,w
  5242  0519  0021               	movlb	1	; select bank1
  5243  051A  00D9               	movwf	((_CurrentData+1)^(0+128)+4)
  5244                           
  5245                           ;MPU6050.c: 160: CurrentData.temp = ((cval[6]<<8)|cval[7]);
  5246  051B  0020               	movlb	0	; select bank0
  5247  051C  082D               	movf	Get_Accel_Values@cval+7,w
  5248  051D  00A1               	movwf	??_Get_Accel_Values
  5249  051E  01A2               	clrf	??_Get_Accel_Values+1
  5250  051F  082C               	movf	Get_Accel_Values@cval+6,w
  5251  0520  00A3               	movwf	??_Get_Accel_Values+2
  5252  0521  01A4               	clrf	??_Get_Accel_Values+3
  5253  0522  0823               	movf	??_Get_Accel_Values+2,w
  5254  0523  00A4               	movwf	??_Get_Accel_Values+3
  5255  0524  01A3               	clrf	??_Get_Accel_Values+2
  5256  0525  0821               	movf	??_Get_Accel_Values,w
  5257  0526  0423               	iorwf	??_Get_Accel_Values+2,w
  5258  0527  0021               	movlb	1	; select bank1
  5259  0528  00DA               	movwf	(_CurrentData^(0+128)+6)
  5260  0529  0020               	movlb	0	; select bank0
  5261  052A  0822               	movf	??_Get_Accel_Values+1,w
  5262  052B  0424               	iorwf	??_Get_Accel_Values+3,w
  5263  052C  0021               	movlb	1	; select bank1
  5264  052D  00DB               	movwf	((_CurrentData+1)^(0+128)+6)
  5265                           
  5266                           ;MPU6050.c: 161: CurrentData.Gyrox = ((cval[8]<<8) | cval[9]);
  5267  052E  0020               	movlb	0	; select bank0
  5268  052F  082F               	movf	Get_Accel_Values@cval+9,w
  5269  0530  00A1               	movwf	??_Get_Accel_Values
  5270  0531  01A2               	clrf	??_Get_Accel_Values+1
  5271  0532  082E               	movf	Get_Accel_Values@cval+8,w
  5272  0533  00A3               	movwf	??_Get_Accel_Values+2
  5273  0534  01A4               	clrf	??_Get_Accel_Values+3
  5274  0535  0823               	movf	??_Get_Accel_Values+2,w
  5275  0536  00A4               	movwf	??_Get_Accel_Values+3
  5276  0537  01A3               	clrf	??_Get_Accel_Values+2
  5277  0538  0821               	movf	??_Get_Accel_Values,w
  5278  0539  0423               	iorwf	??_Get_Accel_Values+2,w
  5279  053A  0021               	movlb	1	; select bank1
  5280  053B  00DC               	movwf	(_CurrentData^(0+128)+8)
  5281  053C  0020               	movlb	0	; select bank0
  5282  053D  0822               	movf	??_Get_Accel_Values+1,w
  5283  053E  0424               	iorwf	??_Get_Accel_Values+3,w
  5284  053F  0021               	movlb	1	; select bank1
  5285  0540  00DD               	movwf	((_CurrentData+1)^(0+128)+8)
  5286                           
  5287                           ;MPU6050.c: 162: CurrentData.Gyroy = ((cval[10]<<8) | cval[11]);
  5288  0541  0020               	movlb	0	; select bank0
  5289  0542  0831               	movf	Get_Accel_Values@cval+11,w
  5290  0543  00A1               	movwf	??_Get_Accel_Values
  5291  0544  01A2               	clrf	??_Get_Accel_Values+1
  5292  0545  0830               	movf	Get_Accel_Values@cval+10,w
  5293  0546  00A3               	movwf	??_Get_Accel_Values+2
  5294  0547  01A4               	clrf	??_Get_Accel_Values+3
  5295  0548  0823               	movf	??_Get_Accel_Values+2,w
  5296  0549  00A4               	movwf	??_Get_Accel_Values+3
  5297  054A  01A3               	clrf	??_Get_Accel_Values+2
  5298  054B  0821               	movf	??_Get_Accel_Values,w
  5299  054C  0423               	iorwf	??_Get_Accel_Values+2,w
  5300  054D  0021               	movlb	1	; select bank1
  5301  054E  00DE               	movwf	(_CurrentData^(0+128)+10)
  5302  054F  0020               	movlb	0	; select bank0
  5303  0550  0822               	movf	??_Get_Accel_Values+1,w
  5304  0551  0424               	iorwf	??_Get_Accel_Values+3,w
  5305  0552  0021               	movlb	1	; select bank1
  5306  0553  00DF               	movwf	((_CurrentData+1)^(0+128)+10)
  5307                           
  5308                           ;MPU6050.c: 163: CurrentData.Gyroz = ((cval[12]<<8) | cval[13]);
  5309  0554  0020               	movlb	0	; select bank0
  5310  0555  0833               	movf	Get_Accel_Values@cval+13,w
  5311  0556  00A1               	movwf	??_Get_Accel_Values
  5312  0557  01A2               	clrf	??_Get_Accel_Values+1
  5313  0558  0832               	movf	Get_Accel_Values@cval+12,w
  5314  0559  00A3               	movwf	??_Get_Accel_Values+2
  5315  055A  01A4               	clrf	??_Get_Accel_Values+3
  5316  055B  0823               	movf	??_Get_Accel_Values+2,w
  5317  055C  00A4               	movwf	??_Get_Accel_Values+3
  5318  055D  01A3               	clrf	??_Get_Accel_Values+2
  5319  055E  0821               	movf	??_Get_Accel_Values,w
  5320  055F  0423               	iorwf	??_Get_Accel_Values+2,w
  5321  0560  0021               	movlb	1	; select bank1
  5322  0561  00E0               	movwf	(_CurrentData^(0+128)+12)
  5323  0562  0020               	movlb	0	; select bank0
  5324  0563  0822               	movf	??_Get_Accel_Values+1,w
  5325  0564  0424               	iorwf	??_Get_Accel_Values+3,w
  5326  0565  0021               	movlb	1	; select bank1
  5327  0566  00E1               	movwf	((_CurrentData+1)^(0+128)+12)
  5328  0567  0008               	return
  5329  0568                     __end_of_Get_Accel_Values:	
  5330                           
  5331                           	psect	text26
  5332  0D6F                     __ptext26:	
  5333 ;; *************** function _LDByteReadI2C *****************
  5334 ;; Defined at:
  5335 ;;		line 117 in file "i2cMaster.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  5338 ;;  Address         1    6[COMMON] unsigned char 
  5339 ;;  Data            1    7[COMMON] PTR unsigned char 
  5340 ;;		 -> GotInt_MPU6050@uc_temp(1), Get_Accel_Values@cval(14), MPU6050_Test_I2C@Data(1), 
  5341 ;;  Length          1    8[COMMON] unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  i2cSlaveAddr    1    0[BANK0 ] unsigned char 
  5344 ;;  read_byte       1    0        unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;		None               void
  5347 ;; Registers used:
  5348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5354 ;;      Params:         3       0       0       0
  5355 ;;      Locals:         0       1       0       0
  5356 ;;      Temps:          1       0       0       0
  5357 ;;      Totals:         4       1       0       0
  5358 ;;Total ram usage:        5 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		_i2c_Address
  5363 ;;		_i2c_Read
  5364 ;;		_i2c_Restart
  5365 ;;		_i2c_Start
  5366 ;;		_i2c_Stop
  5367 ;;		_i2c_Write
  5368 ;; This function is called by:
  5369 ;;		_MPU6050_Test_I2C
  5370 ;;		_Get_Accel_Values
  5371 ;;		_GotInt_MPU6050
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _LDByteReadI2C
  5377  0D6F                     _LDByteReadI2C:	
  5378                           
  5379                           ;incstack = 0
  5380                           ; Regs used in _LDByteReadI2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5381                           ;LDByteReadI2C@i2cSlaveAddress stored from wreg
  5382  0D6F  0020               	movlb	0	; select bank0
  5383  0D70  00A0               	movwf	LDByteReadI2C@i2cSlaveAddress
  5384                           
  5385                           ;i2cMaster.c: 119: unsigned char read_byte;
  5386                           ;i2cMaster.c: 120: i2c_Start();
  5387  0D71  318B  230B  318D   	fcall	_i2c_Start
  5388                           
  5389                           ;i2cMaster.c: 121: i2c_Address(i2cSlaveAddress, 0x00);
  5390  0D74  01F2               	clrf	i2c_Address@mode
  5391  0D75  0020               	movlb	0	; select bank0
  5392  0D76  0820               	movf	LDByteReadI2C@i2cSlaveAddress,w
  5393  0D77  318B  233D  318D   	fcall	_i2c_Address
  5394                           
  5395                           ;i2cMaster.c: 122: i2c_Write(Address);
  5396  0D7A  0876               	movf	LDByteReadI2C@Address,w
  5397  0D7B  318B  231B  318D   	fcall	_i2c_Write
  5398                           
  5399                           ;i2cMaster.c: 123: i2c_Restart();
  5400  0D7E  318B  2306  318D   	fcall	_i2c_Restart
  5401                           
  5402                           ;i2cMaster.c: 124: i2c_Address(i2cSlaveAddress, 0x01);
  5403  0D81  01F2               	clrf	i2c_Address@mode
  5404  0D82  0AF2               	incf	i2c_Address@mode,f
  5405  0D83  0020               	movlb	0	; select bank0
  5406  0D84  0820               	movf	LDByteReadI2C@i2cSlaveAddress,w
  5407  0D85  318B  233D  318D   	fcall	_i2c_Address
  5408  0D88                     l2583:	
  5409                           ;i2cMaster.c: 126: while(Length-- > 1)
  5410                           
  5411  0D88  0878               	movf	LDByteReadI2C@Length,w
  5412  0D89  03F8               	decf	LDByteReadI2C@Length,f
  5413  0D8A  00F9               	movwf	??_LDByteReadI2C
  5414  0D8B  3002               	movlw	2
  5415  0D8C  0279               	subwf	??_LDByteReadI2C,w
  5416  0D8D  1C03               	btfss	3,0
  5417  0D8E  2D9E               	goto	l2585
  5418                           
  5419                           ;i2cMaster.c: 127: *(Data++) = i2c_Read(1);
  5420  0D8F  3001               	movlw	1
  5421  0D90  318B  23B1  318D   	fcall	_i2c_Read
  5422  0D93  00F9               	movwf	??_LDByteReadI2C
  5423  0D94  0877               	movf	LDByteReadI2C@Data,w
  5424  0D95  0086               	movwf	6
  5425  0D96  0187               	clrf	7
  5426  0D97  0879               	movf	??_LDByteReadI2C,w
  5427  0D98  0081               	movwf	1
  5428  0D99  3001               	movlw	1
  5429  0D9A  00F9               	movwf	??_LDByteReadI2C
  5430  0D9B  0879               	movf	??_LDByteReadI2C,w
  5431  0D9C  07F7               	addwf	LDByteReadI2C@Data,f
  5432  0D9D  2D88               	goto	l2583
  5433  0D9E                     l2585:	
  5434                           
  5435                           ;i2cMaster.c: 128: *(Data++) = i2c_Read(0);
  5436  0D9E  3000               	movlw	0
  5437  0D9F  318B  23B1  318D   	fcall	_i2c_Read
  5438  0DA2  00F9               	movwf	??_LDByteReadI2C
  5439  0DA3  0877               	movf	LDByteReadI2C@Data,w
  5440  0DA4  0086               	movwf	6
  5441  0DA5  0187               	clrf	7
  5442  0DA6  0879               	movf	??_LDByteReadI2C,w
  5443  0DA7  0081               	movwf	1
  5444  0DA8  3001               	movlw	1
  5445  0DA9  00F9               	movwf	??_LDByteReadI2C
  5446  0DAA  0879               	movf	??_LDByteReadI2C,w
  5447  0DAB  07F7               	addwf	LDByteReadI2C@Data,f
  5448                           
  5449                           ;i2cMaster.c: 129: i2c_Stop();
  5450  0DAC  318B  2310         	fcall	_i2c_Stop
  5451  0DAE  0008               	return
  5452  0DAF                     __end_of_LDByteReadI2C:	
  5453                           
  5454                           	psect	text27
  5455  0B1B                     __ptext27:	
  5456 ;; *************** function _i2c_Write *****************
  5457 ;; Defined at:
  5458 ;;		line 55 in file "i2cMaster.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  data            1    wreg     unsigned char 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  data            1    2[COMMON] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;		None               void
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5472 ;;      Params:         0       0       0       0
  5473 ;;      Locals:         1       0       0       0
  5474 ;;      Temps:          0       0       0       0
  5475 ;;      Totals:         1       0       0       0
  5476 ;;Total ram usage:        1 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		_i2c_Wait
  5481 ;; This function is called by:
  5482 ;;		_LDByteWriteI2C
  5483 ;;		_LDByteReadI2C
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _i2c_Write
  5489  0B1B                     _i2c_Write:	
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  5493                           ;i2c_Write@data stored from wreg
  5494  0B1B  00F2               	movwf	i2c_Write@data
  5495                           
  5496                           ;i2cMaster.c: 57: i2c_Wait();
  5497  0B1C  318B  2329         	fcall	_i2c_Wait
  5498                           
  5499                           ;i2cMaster.c: 58: SSPBUF = data;
  5500  0B1E  0872               	movf	i2c_Write@data,w
  5501  0B1F  0024               	movlb	4	; select bank4
  5502  0B20  0091               	movwf	17	;volatile
  5503  0B21  0008               	return
  5504  0B22                     __end_of_i2c_Write:	
  5505                           
  5506                           	psect	text28
  5507  0B10                     __ptext28:	
  5508 ;; *************** function _i2c_Stop *****************
  5509 ;; Defined at:
  5510 ;;		line 48 in file "i2cMaster.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5524 ;;      Params:         0       0       0       0
  5525 ;;      Locals:         0       0       0       0
  5526 ;;      Temps:          0       0       0       0
  5527 ;;      Totals:         0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    2
  5531 ;; This function calls:
  5532 ;;		_i2c_Wait
  5533 ;; This function is called by:
  5534 ;;		_LDByteWriteI2C
  5535 ;;		_LDByteReadI2C
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _i2c_Stop
  5541  0B10                     _i2c_Stop:	
  5542                           
  5543                           ;i2cMaster.c: 50: i2c_Wait();
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  5547  0B10  318B  2329         	fcall	_i2c_Wait
  5548                           
  5549                           ;i2cMaster.c: 51: PEN=1;
  5550  0B12  0024               	movlb	4	; select bank4
  5551  0B13  1516               	bsf	22,2	;volatile
  5552  0B14  0008               	return
  5553  0B15                     __end_of_i2c_Stop:	
  5554                           
  5555                           	psect	text29
  5556  0B0B                     __ptext29:	
  5557 ;; *************** function _i2c_Start *****************
  5558 ;; Defined at:
  5559 ;;		line 34 in file "i2cMaster.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;		None               void
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, pclath, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5573 ;;      Params:         0       0       0       0
  5574 ;;      Locals:         0       0       0       0
  5575 ;;      Temps:          0       0       0       0
  5576 ;;      Totals:         0       0       0       0
  5577 ;;Total ram usage:        0 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    2
  5580 ;; This function calls:
  5581 ;;		_i2c_Wait
  5582 ;; This function is called by:
  5583 ;;		_LDByteWriteI2C
  5584 ;;		_LDByteReadI2C
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _i2c_Start
  5590  0B0B                     _i2c_Start:	
  5591                           
  5592                           ;i2cMaster.c: 36: i2c_Wait();
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  5596  0B0B  318B  2329         	fcall	_i2c_Wait
  5597                           
  5598                           ;i2cMaster.c: 37: SEN=1;
  5599  0B0D  0024               	movlb	4	; select bank4
  5600  0B0E  1416               	bsf	22,0	;volatile
  5601  0B0F  0008               	return
  5602  0B10                     __end_of_i2c_Start:	
  5603                           
  5604                           	psect	text30
  5605  0B06                     __ptext30:	
  5606 ;; *************** function _i2c_Restart *****************
  5607 ;; Defined at:
  5608 ;;		line 41 in file "i2cMaster.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;		None               void
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5622 ;;      Params:         0       0       0       0
  5623 ;;      Locals:         0       0       0       0
  5624 ;;      Temps:          0       0       0       0
  5625 ;;      Totals:         0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    2
  5629 ;; This function calls:
  5630 ;;		_i2c_Wait
  5631 ;; This function is called by:
  5632 ;;		_LDByteReadI2C
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _i2c_Restart
  5638  0B06                     _i2c_Restart:	
  5639                           
  5640                           ;i2cMaster.c: 42: i2c_Wait();
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  5644  0B06  318B  2329         	fcall	_i2c_Wait
  5645                           
  5646                           ;i2cMaster.c: 43: RSEN=1;
  5647  0B08  0024               	movlb	4	; select bank4
  5648  0B09  1496               	bsf	22,1	;volatile
  5649  0B0A  0008               	return
  5650  0B0B                     __end_of_i2c_Restart:	
  5651                           
  5652                           	psect	text31
  5653  0BB1                     __ptext31:	
  5654 ;; *************** function _i2c_Read *****************
  5655 ;; Defined at:
  5656 ;;		line 74 in file "i2cMaster.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  ack             1    wreg     unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  ack             1    3[COMMON] unsigned char 
  5661 ;;  i2cReadData     1    4[COMMON] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      unsigned char 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5671 ;;      Params:         0       0       0       0
  5672 ;;      Locals:         2       0       0       0
  5673 ;;      Temps:          1       0       0       0
  5674 ;;      Totals:         3       0       0       0
  5675 ;;Total ram usage:        3 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    2
  5678 ;; This function calls:
  5679 ;;		_i2c_Wait
  5680 ;; This function is called by:
  5681 ;;		_LDByteReadI2C
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           
  5686                           ;psect for function _i2c_Read
  5687  0BB1                     _i2c_Read:	
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  5691                           ;i2c_Read@ack stored from wreg
  5692  0BB1  00F3               	movwf	i2c_Read@ack
  5693                           
  5694                           ;i2cMaster.c: 79: unsigned char i2cReadData;
  5695                           ;i2cMaster.c: 81: i2c_Wait();
  5696  0BB2  318B  2329  318B   	fcall	_i2c_Wait
  5697                           
  5698                           ;i2cMaster.c: 82: RCEN=1;
  5699  0BB5  0024               	movlb	4	; select bank4
  5700  0BB6  1596               	bsf	22,3	;volatile
  5701                           
  5702                           ;i2cMaster.c: 83: i2c_Wait();
  5703  0BB7  318B  2329  318B   	fcall	_i2c_Wait
  5704                           
  5705                           ;i2cMaster.c: 84: i2cReadData = SSPBUF;
  5706  0BBA  0024               	movlb	4	; select bank4
  5707  0BBB  0811               	movf	17,w	;volatile
  5708  0BBC  00F2               	movwf	??_i2c_Read
  5709  0BBD  0872               	movf	??_i2c_Read,w
  5710  0BBE  00F4               	movwf	i2c_Read@i2cReadData
  5711                           
  5712                           ;i2cMaster.c: 85: i2c_Wait();
  5713  0BBF  318B  2329  318B   	fcall	_i2c_Wait
  5714                           
  5715                           ;i2cMaster.c: 86: if ( ack ) ACKDT=0;
  5716  0BC2  0873               	movf	i2c_Read@ack,w
  5717  0BC3  1903               	btfsc	3,2
  5718  0BC4  2BC8               	goto	l55
  5719  0BC5  0024               	movlb	4	; select bank4
  5720  0BC6  1296               	bcf	22,5	;volatile
  5721  0BC7  2BCA               	goto	l56
  5722  0BC8                     l55:	
  5723                           
  5724                           ;i2cMaster.c: 87: else ACKDT=1;
  5725  0BC8  0024               	movlb	4	; select bank4
  5726  0BC9  1696               	bsf	22,5	;volatile
  5727  0BCA                     l56:	
  5728                           
  5729                           ;i2cMaster.c: 88: ACKEN=1;
  5730  0BCA  1616               	bsf	22,4	;volatile
  5731                           
  5732                           ;i2cMaster.c: 90: return( i2cReadData );
  5733  0BCB  0874               	movf	i2c_Read@i2cReadData,w
  5734  0BCC  0008               	return
  5735  0BCD                     __end_of_i2c_Read:	
  5736                           
  5737                           	psect	text32
  5738  0B3D                     __ptext32:	
  5739 ;; *************** function _i2c_Address *****************
  5740 ;; Defined at:
  5741 ;;		line 63 in file "i2cMaster.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  address         1    wreg     unsigned char 
  5744 ;;  mode            1    2[COMMON] unsigned char 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  address         1    4[COMMON] unsigned char 
  5747 ;;  l_address       1    5[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5757 ;;      Params:         1       0       0       0
  5758 ;;      Locals:         2       0       0       0
  5759 ;;      Temps:          1       0       0       0
  5760 ;;      Totals:         4       0       0       0
  5761 ;;Total ram usage:        4 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    2
  5764 ;; This function calls:
  5765 ;;		_i2c_Wait
  5766 ;; This function is called by:
  5767 ;;		_LDByteWriteI2C
  5768 ;;		_LDByteReadI2C
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _i2c_Address
  5774  0B3D                     _i2c_Address:	
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  5778                           ;i2c_Address@address stored from wreg
  5779  0B3D  00F4               	movwf	i2c_Address@address
  5780                           
  5781                           ;i2cMaster.c: 65: unsigned char l_address;
  5782                           ;i2cMaster.c: 67: l_address=address<<1;
  5783  0B3E  3574               	lslf	i2c_Address@address,w
  5784  0B3F  00F3               	movwf	??_i2c_Address
  5785  0B40  0873               	movf	??_i2c_Address,w
  5786  0B41  00F5               	movwf	i2c_Address@l_address
  5787                           
  5788                           ;i2cMaster.c: 68: l_address+=mode;
  5789  0B42  0872               	movf	i2c_Address@mode,w
  5790  0B43  00F3               	movwf	??_i2c_Address
  5791  0B44  0873               	movf	??_i2c_Address,w
  5792  0B45  07F5               	addwf	i2c_Address@l_address,f
  5793                           
  5794                           ;i2cMaster.c: 69: i2c_Wait();
  5795  0B46  318B  2329         	fcall	_i2c_Wait
  5796                           
  5797                           ;i2cMaster.c: 70: SSPBUF = l_address;
  5798  0B48  0875               	movf	i2c_Address@l_address,w
  5799  0B49  0024               	movlb	4	; select bank4
  5800  0B4A  0091               	movwf	17	;volatile
  5801  0B4B  0008               	return
  5802  0B4C                     __end_of_i2c_Address:	
  5803                           
  5804                           	psect	text33
  5805  0B29                     __ptext33:	
  5806 ;; *************** function _i2c_Wait *****************
  5807 ;; Defined at:
  5808 ;;		line 29 in file "i2cMaster.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;		None               void
  5815 ;; Registers used:
  5816 ;;		wreg, status,2
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5822 ;;      Params:         0       0       0       0
  5823 ;;      Locals:         0       0       0       0
  5824 ;;      Temps:          0       0       0       0
  5825 ;;      Totals:         0       0       0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    1
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_i2c_Start
  5833 ;;		_i2c_Restart
  5834 ;;		_i2c_Stop
  5835 ;;		_i2c_Write
  5836 ;;		_i2c_Address
  5837 ;;		_i2c_Read
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function _i2c_Wait
  5843  0B29                     _i2c_Wait:	
  5844  0B29                     l2403:	
  5845                           ;i2cMaster.c: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSPSTAT & 0x04 ) );
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _i2c_Wait: [wreg+status,2]
  5849                           
  5850  0B29  0024               	movlb	4	; select bank4
  5851  0B2A  0816               	movf	22,w	;volatile
  5852  0B2B  391F               	andlw	31
  5853  0B2C  1D03               	btfss	3,2
  5854  0B2D  2B29               	goto	l2403
  5855  0B2E  1D14               	btfss	20,2	;volatile
  5856  0B2F  0008               	return
  5857  0B30  2B29               	goto	l2403
  5858  0B31                     __end_of_i2c_Wait:	
  5859                           
  5860                           	psect	text34
  5861  02D3                     __ptext34:	
  5862 ;; *************** function _CalculateSumOfSquares *****************
  5863 ;; Defined at:
  5864 ;;		line 344 in file "blueGyro.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  GzSquare        4   26[BANK0 ] unsigned long 
  5869 ;;  GySquare        4   22[BANK0 ] unsigned long 
  5870 ;;  GxSquare        4   18[BANK0 ] unsigned long 
  5871 ;;  temp            4    0        long 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;		None               void
  5874 ;; Registers used:
  5875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5881 ;;      Params:         0       0       0       0
  5882 ;;      Locals:         0      18       0       0
  5883 ;;      Temps:          0       8       0       0
  5884 ;;      Totals:         0      26       0       0
  5885 ;;Total ram usage:       26 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    2
  5888 ;; This function calls:
  5889 ;;		___lmul
  5890 ;; This function is called by:
  5891 ;;		_DisplayInfo
  5892 ;;		_main
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function _CalculateSumOfSquares
  5898  02D3                     _CalculateSumOfSquares:	
  5899                           
  5900                           ;blueGyro.c: 347: unsigned long GxSquare, GySquare, GzSquare;
  5901                           ;blueGyro.c: 348: long temp;
  5902                           ;blueGyro.c: 356: GxSquare = (unsigned long) (CurrentData.Gx<0 ? (-CurrentData.Gx) : Cur
      +                          rentData.Gx);
  5903                           
  5904                           ;incstack = 0
  5905                           ; Regs used in _CalculateSumOfSquares: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5906  02D3  0021               	movlb	1	; select bank1
  5907  02D4  1BD5               	btfsc	(_CurrentData+1)^(0+128),7
  5908  02D5  2ADE               	goto	l2007
  5909  02D6  0855               	movf	(_CurrentData+1)^(0+128),w
  5910  02D7  0020               	movlb	0	; select bank0
  5911  02D8  00AD               	movwf	_CalculateSumOfSquares$239+1
  5912  02D9  0021               	movlb	1	; select bank1
  5913  02DA  0854               	movf	_CurrentData^(0+128),w
  5914  02DB  0020               	movlb	0	; select bank0
  5915  02DC  00AC               	movwf	_CalculateSumOfSquares$239
  5916  02DD  2AED               	goto	l2009
  5917  02DE                     l2007:	
  5918  02DE  0021               	movlb	1	; select bank1
  5919  02DF  0954               	comf	_CurrentData^(0+128),w
  5920  02E0  0020               	movlb	0	; select bank0
  5921  02E1  00A4               	movwf	??_CalculateSumOfSquares
  5922  02E2  0021               	movlb	1	; select bank1
  5923  02E3  0955               	comf	(_CurrentData+1)^(0+128),w
  5924  02E4  0020               	movlb	0	; select bank0
  5925  02E5  00A5               	movwf	??_CalculateSumOfSquares+1
  5926  02E6  0AA4               	incf	??_CalculateSumOfSquares,f
  5927  02E7  1903               	skipnz
  5928  02E8  0AA5               	incf	??_CalculateSumOfSquares+1,f
  5929  02E9  0824               	movf	??_CalculateSumOfSquares,w
  5930  02EA  00AC               	movwf	_CalculateSumOfSquares$239
  5931  02EB  0825               	movf	??_CalculateSumOfSquares+1,w
  5932  02EC  00AD               	movwf	_CalculateSumOfSquares$239+1
  5933  02ED                     l2009:	
  5934  02ED  082C               	movf	_CalculateSumOfSquares$239,w
  5935  02EE  00B2               	movwf	CalculateSumOfSquares@GxSquare
  5936  02EF  082D               	movf	_CalculateSumOfSquares$239+1,w
  5937  02F0  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  5938  02F1  0D89               	rlf	9,f
  5939  02F2  3B89               	subwfb	9,f
  5940  02F3  0989               	comf	9,f
  5941  02F4  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  5942  02F5  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  5943                           
  5944                           ;blueGyro.c: 357: GySquare = (unsigned long) (CurrentData.Gy<0 ? (-CurrentData.Gy) : Cur
      +                          rentData.Gy);
  5945  02F6  0021               	movlb	1	; select bank1
  5946  02F7  1BD7               	btfsc	((_CurrentData+1)^(0+128)+2),7
  5947  02F8  2B01               	goto	l2015
  5948  02F9  0857               	movf	((_CurrentData+1)^(0+128)+2),w
  5949  02FA  0020               	movlb	0	; select bank0
  5950  02FB  00AF               	movwf	_CalculateSumOfSquares$240+1
  5951  02FC  0021               	movlb	1	; select bank1
  5952  02FD  0856               	movf	(_CurrentData^(0+128)+2),w
  5953  02FE  0020               	movlb	0	; select bank0
  5954  02FF  00AE               	movwf	_CalculateSumOfSquares$240
  5955  0300  2B10               	goto	l2017
  5956  0301                     l2015:	
  5957  0301  0021               	movlb	1	; select bank1
  5958  0302  0956               	comf	(_CurrentData^(0+128)+2),w
  5959  0303  0020               	movlb	0	; select bank0
  5960  0304  00A4               	movwf	??_CalculateSumOfSquares
  5961  0305  0021               	movlb	1	; select bank1
  5962  0306  0957               	comf	((_CurrentData+1)^(0+128)+2),w
  5963  0307  0020               	movlb	0	; select bank0
  5964  0308  00A5               	movwf	??_CalculateSumOfSquares+1
  5965  0309  0AA4               	incf	??_CalculateSumOfSquares,f
  5966  030A  1903               	skipnz
  5967  030B  0AA5               	incf	??_CalculateSumOfSquares+1,f
  5968  030C  0824               	movf	??_CalculateSumOfSquares,w
  5969  030D  00AE               	movwf	_CalculateSumOfSquares$240
  5970  030E  0825               	movf	??_CalculateSumOfSquares+1,w
  5971  030F  00AF               	movwf	_CalculateSumOfSquares$240+1
  5972  0310                     l2017:	
  5973  0310  082E               	movf	_CalculateSumOfSquares$240,w
  5974  0311  00B6               	movwf	CalculateSumOfSquares@GySquare
  5975  0312  082F               	movf	_CalculateSumOfSquares$240+1,w
  5976  0313  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  5977  0314  0D89               	rlf	9,f
  5978  0315  3B89               	subwfb	9,f
  5979  0316  0989               	comf	9,f
  5980  0317  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  5981  0318  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  5982                           
  5983                           ;blueGyro.c: 358: GzSquare = (unsigned long) (CurrentData.Gz<0 ? (-CurrentData.Gz) : Cur
      +                          rentData.Gz);
  5984  0319  0021               	movlb	1	; select bank1
  5985  031A  1BD9               	btfsc	((_CurrentData+1)^(0+128)+4),7
  5986  031B  2B24               	goto	l2023
  5987  031C  0859               	movf	((_CurrentData+1)^(0+128)+4),w
  5988  031D  0020               	movlb	0	; select bank0
  5989  031E  00B1               	movwf	_CalculateSumOfSquares$241+1
  5990  031F  0021               	movlb	1	; select bank1
  5991  0320  0858               	movf	(_CurrentData^(0+128)+4),w
  5992  0321  0020               	movlb	0	; select bank0
  5993  0322  00B0               	movwf	_CalculateSumOfSquares$241
  5994  0323  2B33               	goto	l2025
  5995  0324                     l2023:	
  5996  0324  0021               	movlb	1	; select bank1
  5997  0325  0958               	comf	(_CurrentData^(0+128)+4),w
  5998  0326  0020               	movlb	0	; select bank0
  5999  0327  00A4               	movwf	??_CalculateSumOfSquares
  6000  0328  0021               	movlb	1	; select bank1
  6001  0329  0959               	comf	((_CurrentData+1)^(0+128)+4),w
  6002  032A  0020               	movlb	0	; select bank0
  6003  032B  00A5               	movwf	??_CalculateSumOfSquares+1
  6004  032C  0AA4               	incf	??_CalculateSumOfSquares,f
  6005  032D  1903               	skipnz
  6006  032E  0AA5               	incf	??_CalculateSumOfSquares+1,f
  6007  032F  0824               	movf	??_CalculateSumOfSquares,w
  6008  0330  00B0               	movwf	_CalculateSumOfSquares$241
  6009  0331  0825               	movf	??_CalculateSumOfSquares+1,w
  6010  0332  00B1               	movwf	_CalculateSumOfSquares$241+1
  6011  0333                     l2025:	
  6012  0333  0830               	movf	_CalculateSumOfSquares$241,w
  6013  0334  00BA               	movwf	CalculateSumOfSquares@GzSquare
  6014  0335  0831               	movf	_CalculateSumOfSquares$241+1,w
  6015  0336  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  6016  0337  0D89               	rlf	9,f
  6017  0338  3B89               	subwfb	9,f
  6018  0339  0989               	comf	9,f
  6019  033A  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  6020  033B  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  6021                           
  6022                           ;blueGyro.c: 362: GxSquare *= GxSquare;
  6023  033C  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6024  033D  00F5               	movwf	___lmul@multiplier+3
  6025  033E  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6026  033F  00F4               	movwf	___lmul@multiplier+2
  6027  0340  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6028  0341  00F3               	movwf	___lmul@multiplier+1
  6029  0342  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6030  0343  00F2               	movwf	___lmul@multiplier
  6031  0344  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6032  0345  00F9               	movwf	___lmul@multiplicand+3
  6033  0346  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6034  0347  00F8               	movwf	___lmul@multiplicand+2
  6035  0348  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6036  0349  00F7               	movwf	___lmul@multiplicand+1
  6037  034A  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6038  034B  00F6               	movwf	___lmul@multiplicand
  6039  034C  318C  248B  3182   	fcall	___lmul
  6040  034F  0875               	movf	?___lmul+3,w
  6041  0350  0020               	movlb	0	; select bank0
  6042  0351  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  6043  0352  0874               	movf	?___lmul+2,w
  6044  0353  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  6045  0354  0873               	movf	?___lmul+1,w
  6046  0355  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  6047  0356  0872               	movf	?___lmul,w
  6048  0357  00B2               	movwf	CalculateSumOfSquares@GxSquare
  6049                           
  6050                           ;blueGyro.c: 363: GySquare *= GySquare;
  6051  0358  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  6052  0359  00F5               	movwf	___lmul@multiplier+3
  6053  035A  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  6054  035B  00F4               	movwf	___lmul@multiplier+2
  6055  035C  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  6056  035D  00F3               	movwf	___lmul@multiplier+1
  6057  035E  0836               	movf	CalculateSumOfSquares@GySquare,w
  6058  035F  00F2               	movwf	___lmul@multiplier
  6059  0360  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  6060  0361  00F9               	movwf	___lmul@multiplicand+3
  6061  0362  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  6062  0363  00F8               	movwf	___lmul@multiplicand+2
  6063  0364  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  6064  0365  00F7               	movwf	___lmul@multiplicand+1
  6065  0366  0836               	movf	CalculateSumOfSquares@GySquare,w
  6066  0367  00F6               	movwf	___lmul@multiplicand
  6067  0368  318C  248B  3182   	fcall	___lmul
  6068  036B  0875               	movf	?___lmul+3,w
  6069  036C  0020               	movlb	0	; select bank0
  6070  036D  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  6071  036E  0874               	movf	?___lmul+2,w
  6072  036F  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  6073  0370  0873               	movf	?___lmul+1,w
  6074  0371  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  6075  0372  0872               	movf	?___lmul,w
  6076  0373  00B6               	movwf	CalculateSumOfSquares@GySquare
  6077                           
  6078                           ;blueGyro.c: 364: GzSquare *= GzSquare;
  6079  0374  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6080  0375  00F5               	movwf	___lmul@multiplier+3
  6081  0376  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6082  0377  00F4               	movwf	___lmul@multiplier+2
  6083  0378  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6084  0379  00F3               	movwf	___lmul@multiplier+1
  6085  037A  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6086  037B  00F2               	movwf	___lmul@multiplier
  6087  037C  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6088  037D  00F9               	movwf	___lmul@multiplicand+3
  6089  037E  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6090  037F  00F8               	movwf	___lmul@multiplicand+2
  6091  0380  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6092  0381  00F7               	movwf	___lmul@multiplicand+1
  6093  0382  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6094  0383  00F6               	movwf	___lmul@multiplicand
  6095  0384  318C  248B  3182   	fcall	___lmul
  6096  0387  0875               	movf	?___lmul+3,w
  6097  0388  0020               	movlb	0	; select bank0
  6098  0389  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  6099  038A  0874               	movf	?___lmul+2,w
  6100  038B  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  6101  038C  0873               	movf	?___lmul+1,w
  6102  038D  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  6103  038E  0872               	movf	?___lmul,w
  6104  038F  00BA               	movwf	CalculateSumOfSquares@GzSquare
  6105                           
  6106                           ;blueGyro.c: 365: CurrentData.SumSquare = GxSquare + GySquare + GzSquare;
  6107  0390  083A               	movf	CalculateSumOfSquares@GzSquare,w
  6108  0391  00A4               	movwf	??_CalculateSumOfSquares
  6109  0392  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  6110  0393  00A5               	movwf	??_CalculateSumOfSquares+1
  6111  0394  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  6112  0395  00A6               	movwf	??_CalculateSumOfSquares+2
  6113  0396  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  6114  0397  00A7               	movwf	??_CalculateSumOfSquares+3
  6115  0398  0832               	movf	CalculateSumOfSquares@GxSquare,w
  6116  0399  0736               	addwf	CalculateSumOfSquares@GySquare,w
  6117  039A  00A8               	movwf	??_CalculateSumOfSquares+4
  6118  039B  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  6119  039C  3D37               	addwfc	CalculateSumOfSquares@GySquare+1,w
  6120  039D  00A9               	movwf	??_CalculateSumOfSquares+5
  6121  039E  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  6122  039F  3D38               	addwfc	CalculateSumOfSquares@GySquare+2,w
  6123  03A0  00AA               	movwf	??_CalculateSumOfSquares+6
  6124  03A1  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  6125  03A2  3D39               	addwfc	CalculateSumOfSquares@GySquare+3,w
  6126  03A3  00AB               	movwf	??_CalculateSumOfSquares+7
  6127  03A4  0828               	movf	??_CalculateSumOfSquares+4,w
  6128  03A5  07A4               	addwf	??_CalculateSumOfSquares,f
  6129  03A6  0829               	movf	??_CalculateSumOfSquares+5,w
  6130  03A7  3DA5               	addwfc	??_CalculateSumOfSquares+1,f
  6131  03A8  082A               	movf	??_CalculateSumOfSquares+6,w
  6132  03A9  3DA6               	addwfc	??_CalculateSumOfSquares+2,f
  6133  03AA  082B               	movf	??_CalculateSumOfSquares+7,w
  6134  03AB  3DA7               	addwfc	??_CalculateSumOfSquares+3,f
  6135  03AC  0827               	movf	??_CalculateSumOfSquares+3,w
  6136  03AD  0021               	movlb	1	; select bank1
  6137  03AE  00E7               	movwf	((_CurrentData+3)^(0+128)+16)
  6138  03AF  0020               	movlb	0	; select bank0
  6139  03B0  0826               	movf	??_CalculateSumOfSquares+2,w
  6140  03B1  0021               	movlb	1	; select bank1
  6141  03B2  00E6               	movwf	((_CurrentData+2)^(0+128)+16)
  6142  03B3  0020               	movlb	0	; select bank0
  6143  03B4  0825               	movf	??_CalculateSumOfSquares+1,w
  6144  03B5  0021               	movlb	1	; select bank1
  6145  03B6  00E5               	movwf	((_CurrentData+1)^(0+128)+16)
  6146  03B7  0020               	movlb	0	; select bank0
  6147  03B8  0824               	movf	??_CalculateSumOfSquares,w
  6148  03B9  0021               	movlb	1	; select bank1
  6149  03BA  00E4               	movwf	(_CurrentData^(0+128)+16)
  6150                           
  6151                           ;blueGyro.c: 367: if(CurrentData.SumSquare > PeakData.SumSquare)
  6152  03BB  0867               	movf	((_CurrentData+3)^(0+128)+16),w
  6153  03BC  0253               	subwf	((_PeakData+3)^(0+128)+16),w
  6154  03BD  1D03               	skipz
  6155  03BE  2BC9               	goto	u1695
  6156  03BF  0866               	movf	((_CurrentData+2)^(0+128)+16),w
  6157  03C0  0252               	subwf	((_PeakData+2)^(0+128)+16),w
  6158  03C1  1D03               	skipz
  6159  03C2  2BC9               	goto	u1695
  6160  03C3  0865               	movf	((_CurrentData+1)^(0+128)+16),w
  6161  03C4  0251               	subwf	((_PeakData+1)^(0+128)+16),w
  6162  03C5  1D03               	skipz
  6163  03C6  2BC9               	goto	u1695
  6164  03C7  0864               	movf	(_CurrentData^(0+128)+16),w
  6165  03C8  0250               	subwf	(_PeakData^(0+128)+16),w
  6166  03C9                     u1695:	
  6167  03C9  1803               	skipnc
  6168  03CA  0008               	return
  6169                           
  6170                           ;blueGyro.c: 368: PeakData = CurrentData;
  6171  03CB  30D4               	movlw	low _CurrentData
  6172  03CC  0086               	movwf	6
  6173  03CD  3000               	movlw	high _CurrentData
  6174  03CE  0087               	movwf	7
  6175  03CF  30C0               	movlw	low _PeakData
  6176  03D0  0084               	movwf	4
  6177  03D1  3000               	movlw	high _PeakData
  6178  03D2  0085               	movwf	5
  6179  03D3  3014               	movlw	20
  6180  03D4  0020               	movlb	0	; select bank0
  6181  03D5  00A4               	movwf	??_CalculateSumOfSquares
  6182  03D6                     u1700:	
  6183  03D6  0016               	moviw fsr1++
  6184  03D7  001A               	movwi fsr0++
  6185  03D8  0BA4               	decfsz	??_CalculateSumOfSquares,f
  6186  03D9  2BD6               	goto	u1700
  6187  03DA  0008               	return
  6188  03DB                     __end_of_CalculateSumOfSquares:	
  6189                           
  6190                           	psect	text35
  6191  0C8B                     __ptext35:	
  6192 ;; *************** function ___lmul *****************
  6193 ;; Defined at:
  6194 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul32.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  multiplier      4    2[COMMON] unsigned long 
  6197 ;;  multiplicand    4    6[COMMON] unsigned long 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  product         4    0[BANK0 ] unsigned long 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  4    2[COMMON] unsigned long 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6209 ;;      Params:         8       0       0       0
  6210 ;;      Locals:         0       4       0       0
  6211 ;;      Temps:          0       0       0       0
  6212 ;;      Totals:         8       4       0       0
  6213 ;;Total ram usage:       12 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_printGForce
  6220 ;;		_printGyro
  6221 ;;		_CalculateSumOfSquares
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function ___lmul
  6227  0C8B                     ___lmul:	
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6231  0C8B  3000               	movlw	0
  6232  0C8C  0020               	movlb	0	; select bank0
  6233  0C8D  00A3               	movwf	___lmul@product+3
  6234  0C8E  3000               	movlw	0
  6235  0C8F  00A2               	movwf	___lmul@product+2
  6236  0C90  3000               	movlw	0
  6237  0C91  00A1               	movwf	___lmul@product+1
  6238  0C92  3000               	movlw	0
  6239  0C93  00A0               	movwf	___lmul@product
  6240  0C94                     l1933:	
  6241  0C94  1C72               	btfss	___lmul@multiplier,0
  6242  0C95  2C9F               	goto	l1937
  6243  0C96  0876               	movf	___lmul@multiplicand,w
  6244  0C97  0020               	movlb	0	; select bank0
  6245  0C98  07A0               	addwf	___lmul@product,f
  6246  0C99  0877               	movf	___lmul@multiplicand+1,w
  6247  0C9A  3DA1               	addwfc	___lmul@product+1,f
  6248  0C9B  0878               	movf	___lmul@multiplicand+2,w
  6249  0C9C  3DA2               	addwfc	___lmul@product+2,f
  6250  0C9D  0879               	movf	___lmul@multiplicand+3,w
  6251  0C9E  3DA3               	addwfc	___lmul@product+3,f
  6252  0C9F                     l1937:	
  6253  0C9F  3001               	movlw	1
  6254  0CA0                     u1585:	
  6255  0CA0  35F6               	lslf	___lmul@multiplicand,f
  6256  0CA1  0DF7               	rlf	___lmul@multiplicand+1,f
  6257  0CA2  0DF8               	rlf	___lmul@multiplicand+2,f
  6258  0CA3  0DF9               	rlf	___lmul@multiplicand+3,f
  6259  0CA4  0B89               	decfsz	9,f
  6260  0CA5  2CA0               	goto	u1585
  6261  0CA6  3001               	movlw	1
  6262  0CA7                     u1595:	
  6263  0CA7  36F5               	lsrf	___lmul@multiplier+3,f
  6264  0CA8  0CF4               	rrf	___lmul@multiplier+2,f
  6265  0CA9  0CF3               	rrf	___lmul@multiplier+1,f
  6266  0CAA  0CF2               	rrf	___lmul@multiplier,f
  6267  0CAB  0B89               	decfsz	9,f
  6268  0CAC  2CA7               	goto	u1595
  6269  0CAD  0875               	movf	___lmul@multiplier+3,w
  6270  0CAE  0474               	iorwf	___lmul@multiplier+2,w
  6271  0CAF  0473               	iorwf	___lmul@multiplier+1,w
  6272  0CB0  0472               	iorwf	___lmul@multiplier,w
  6273  0CB1  1D03               	skipz
  6274  0CB2  2C94               	goto	l1933
  6275  0CB3  0020               	movlb	0	; select bank0
  6276  0CB4  0823               	movf	___lmul@product+3,w
  6277  0CB5  00F5               	movwf	?___lmul+3
  6278  0CB6  0822               	movf	___lmul@product+2,w
  6279  0CB7  00F4               	movwf	?___lmul+2
  6280  0CB8  0821               	movf	___lmul@product+1,w
  6281  0CB9  00F3               	movwf	?___lmul+1
  6282  0CBA  0820               	movf	___lmul@product,w
  6283  0CBB  00F2               	movwf	?___lmul
  6284  0CBC  0008               	return
  6285  0CBD                     __end_of___lmul:	
  6286                           
  6287                           	psect	text36
  6288  0CF1                     __ptext36:	
  6289 ;; *************** function _DisplayData *****************
  6290 ;; Defined at:
  6291 ;;		line 441 in file "blueGyro.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;		None               void
  6298 ;; Registers used:
  6299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6305 ;;      Params:         0       0       0       0
  6306 ;;      Locals:         0       0       0       0
  6307 ;;      Temps:          0       0       0       0
  6308 ;;      Totals:         0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    4
  6312 ;; This function calls:
  6313 ;;		_cputs
  6314 ;;		_putHex
  6315 ;; This function is called by:
  6316 ;;		_main
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _DisplayData
  6322  0CF1                     _DisplayData:	
  6323                           
  6324                           ;blueGyro.c: 451: putHex(CurrentData.Timer);
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _DisplayData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6328  0CF1  0021               	movlb	1	; select bank1
  6329  0CF2  0863               	movf	((_CurrentData+1)^(0+128)+14),w
  6330  0CF3  00F8               	movwf	putHex@value+1
  6331  0CF4  0862               	movf	(_CurrentData^(0+128)+14),w
  6332  0CF5  00F7               	movwf	putHex@value
  6333  0CF6  318B  23EB  318C   	fcall	_putHex
  6334                           
  6335                           ;blueGyro.c: 452: putHex(CurrentData.Gx);
  6336  0CF9  0021               	movlb	1	; select bank1
  6337  0CFA  0855               	movf	(_CurrentData+1)^(0+128),w
  6338  0CFB  00F8               	movwf	putHex@value+1
  6339  0CFC  0854               	movf	_CurrentData^(0+128),w
  6340  0CFD  00F7               	movwf	putHex@value
  6341  0CFE  318B  23EB  318C   	fcall	_putHex
  6342                           
  6343                           ;blueGyro.c: 453: putHex(CurrentData.Gy);
  6344  0D01  0021               	movlb	1	; select bank1
  6345  0D02  0857               	movf	((_CurrentData+1)^(0+128)+2),w
  6346  0D03  00F8               	movwf	putHex@value+1
  6347  0D04  0856               	movf	(_CurrentData^(0+128)+2),w
  6348  0D05  00F7               	movwf	putHex@value
  6349  0D06  318B  23EB  318C   	fcall	_putHex
  6350                           
  6351                           ;blueGyro.c: 454: putHex(CurrentData.Gz);
  6352  0D09  0021               	movlb	1	; select bank1
  6353  0D0A  0859               	movf	((_CurrentData+1)^(0+128)+4),w
  6354  0D0B  00F8               	movwf	putHex@value+1
  6355  0D0C  0858               	movf	(_CurrentData^(0+128)+4),w
  6356  0D0D  00F7               	movwf	putHex@value
  6357  0D0E  318B  23EB  318C   	fcall	_putHex
  6358                           
  6359                           ;blueGyro.c: 455: putHex(CurrentData.Gyrox);
  6360  0D11  0021               	movlb	1	; select bank1
  6361  0D12  085D               	movf	((_CurrentData+1)^(0+128)+8),w
  6362  0D13  00F8               	movwf	putHex@value+1
  6363  0D14  085C               	movf	(_CurrentData^(0+128)+8),w
  6364  0D15  00F7               	movwf	putHex@value
  6365  0D16  318B  23EB  318C   	fcall	_putHex
  6366                           
  6367                           ;blueGyro.c: 456: putHex(CurrentData.Gyroy);
  6368  0D19  0021               	movlb	1	; select bank1
  6369  0D1A  085F               	movf	((_CurrentData+1)^(0+128)+10),w
  6370  0D1B  00F8               	movwf	putHex@value+1
  6371  0D1C  085E               	movf	(_CurrentData^(0+128)+10),w
  6372  0D1D  00F7               	movwf	putHex@value
  6373  0D1E  318B  23EB  318C   	fcall	_putHex
  6374                           
  6375                           ;blueGyro.c: 457: putHex(CurrentData.Gyroz);
  6376  0D21  0021               	movlb	1	; select bank1
  6377  0D22  0861               	movf	((_CurrentData+1)^(0+128)+12),w
  6378  0D23  00F8               	movwf	putHex@value+1
  6379  0D24  0860               	movf	(_CurrentData^(0+128)+12),w
  6380  0D25  00F7               	movwf	putHex@value
  6381  0D26  318B  23EB  318C   	fcall	_putHex
  6382                           
  6383                           ;blueGyro.c: 458: cputs("\r\n");
  6384  0D29  303C               	movlw	low ((STR_14+14)| (0+32768))
  6385  0D2A  00F5               	movwf	cputs@s
  6386  0D2B  3081               	movlw	high ((STR_14+14)| (0+32768))
  6387  0D2C  00F6               	movwf	cputs@s+1
  6388  0D2D  318B  235B         	fcall	_cputs
  6389  0D2F  0008               	return
  6390  0D30                     __end_of_DisplayData:	
  6391                           
  6392                           	psect	text37
  6393  0BEB                     __ptext37:	
  6394 ;; *************** function _putHex *****************
  6395 ;; Defined at:
  6396 ;;		line 432 in file "blueGyro.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  value           2    7[COMMON] unsigned short 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;		None               void
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6410 ;;      Params:         2       0       0       0
  6411 ;;      Locals:         0       0       0       0
  6412 ;;      Temps:          0       2       0       0
  6413 ;;      Totals:         2       2       0       0
  6414 ;;Total ram usage:        4 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    3
  6417 ;; This function calls:
  6418 ;;		_putHexNibble
  6419 ;; This function is called by:
  6420 ;;		_DisplayData
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function _putHex
  6426  0BEB                     _putHex:	
  6427                           
  6428                           ;blueGyro.c: 435: putHexNibble(value >> 12);
  6429                           
  6430                           ;incstack = 0
  6431                           ; Regs used in _putHex: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6432  0BEB  0878               	movf	putHex@value+1,w
  6433  0BEC  0020               	movlb	0	; select bank0
  6434  0BED  00A1               	movwf	??_putHex+1
  6435  0BEE  0877               	movf	putHex@value,w
  6436  0BEF  00A0               	movwf	??_putHex
  6437  0BF0  0E21               	swapf	??_putHex+1,w
  6438  0BF1  390F               	andlw	15
  6439  0BF2  00A0               	movwf	??_putHex
  6440  0BF3  01A1               	clrf	??_putHex+1
  6441  0BF4  0820               	movf	??_putHex,w
  6442  0BF5  3187  27ED  318B   	fcall	_putHexNibble
  6443                           
  6444                           ;blueGyro.c: 436: putHexNibble(value >> 8);
  6445  0BF8  0878               	movf	putHex@value+1,w
  6446  0BF9  3187  27ED  318B   	fcall	_putHexNibble
  6447                           
  6448                           ;blueGyro.c: 437: putHexNibble(value >> 4);
  6449  0BFC  0878               	movf	putHex@value+1,w
  6450  0BFD  0020               	movlb	0	; select bank0
  6451  0BFE  00A1               	movwf	??_putHex+1
  6452  0BFF  0877               	movf	putHex@value,w
  6453  0C00  00A0               	movwf	??_putHex
  6454  0C01  3004               	movlw	4
  6455  0C02                     u2465:	
  6456  0C02  36A1               	lsrf	??_putHex+1,f
  6457  0C03  0CA0               	rrf	??_putHex,f
  6458  0C04  0B89               	decfsz	9,f
  6459  0C05  2C02               	goto	u2465
  6460  0C06  0820               	movf	??_putHex,w
  6461  0C07  3187  27ED  318B   	fcall	_putHexNibble
  6462                           
  6463                           ;blueGyro.c: 438: putHexNibble(value);
  6464  0C0A  0877               	movf	putHex@value,w
  6465  0C0B  3187  27ED         	fcall	_putHexNibble
  6466  0C0D  0008               	return
  6467  0C0E                     __end_of_putHex:	
  6468                           
  6469                           	psect	text38
  6470  07ED                     __ptext38:	
  6471 ;; *************** function _putHexNibble *****************
  6472 ;; Defined at:
  6473 ;;		line 419 in file "blueGyro.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  value           1    wreg     unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  value           1    6[COMMON] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;		None               void
  6480 ;; Registers used:
  6481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6487 ;;      Params:         0       0       0       0
  6488 ;;      Locals:         1       0       0       0
  6489 ;;      Temps:          1       0       0       0
  6490 ;;      Totals:         2       0       0       0
  6491 ;;Total ram usage:        2 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    2
  6494 ;; This function calls:
  6495 ;;		_putch
  6496 ;; This function is called by:
  6497 ;;		_putHex
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _putHexNibble
  6503  07ED                     _putHexNibble:	
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in _putHexNibble: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6507                           ;putHexNibble@value stored from wreg
  6508  07ED  00F6               	movwf	putHexNibble@value
  6509                           
  6510                           ;blueGyro.c: 421: value &= 0xf;
  6511  07EE  300F               	movlw	15
  6512  07EF  00F5               	movwf	??_putHexNibble
  6513  07F0  0875               	movf	??_putHexNibble,w
  6514  07F1  05F6               	andwf	putHexNibble@value,f
  6515                           
  6516                           ;blueGyro.c: 422: if(value > 9)
  6517  07F2  300A               	movlw	10
  6518  07F3  0276               	subwf	putHexNibble@value,w
  6519  07F4  1C03               	skipc
  6520  07F5  2FF8               	goto	l2637
  6521                           
  6522                           ;blueGyro.c: 423: value += 'A' - 10;
  6523  07F6  3037               	movlw	55
  6524  07F7  2FF9               	goto	L3
  6525  07F8                     l2637:	
  6526                           
  6527                           ;blueGyro.c: 424: else
  6528                           ;blueGyro.c: 425: value += '0';
  6529  07F8  3030               	movlw	48
  6530  07F9                     L3:	
  6531  07F9  00F5               	movwf	??_putHexNibble
  6532  07FA  0875               	movf	??_putHexNibble,w
  6533  07FB  07F6               	addwf	putHexNibble@value,f
  6534                           
  6535                           ;blueGyro.c: 426: putch(value);
  6536  07FC  0876               	movf	putHexNibble@value,w
  6537  07FD  318B  23CD         	fcall	_putch
  6538  07FF  0008               	return
  6539  0800                     __end_of_putHexNibble:	
  6540                           
  6541                           	psect	text39
  6542  0B5B                     __ptext39:	
  6543 ;; *************** function _cputs *****************
  6544 ;; Defined at:
  6545 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/cputs.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  s               2    5[COMMON] PTR const unsigned char 
  6548 ;;		 -> STR_20(10), STR_19(9), STR_18(29), STR_17(4), 
  6549 ;;		 -> STR_16(4), STR_15(7), STR_14(17), STR_13(3), 
  6550 ;;		 -> STR_12(3), STR_11(4), STR_10(4), STR_9(9), 
  6551 ;;		 -> STR_8(5), STR_7(6), STR_6(6), STR_5(6), 
  6552 ;;		 -> STR_4(11), printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), 
  6553 ;;		 -> STR_3(27), STR_2(40), STR_1(46), 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6565 ;;      Params:         2       0       0       0
  6566 ;;      Locals:         0       0       0       0
  6567 ;;      Temps:          1       0       0       0
  6568 ;;      Totals:         3       0       0       0
  6569 ;;Total ram usage:        3 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    2
  6572 ;; This function calls:
  6573 ;;		_putch
  6574 ;; This function is called by:
  6575 ;;		_MPU6050_Test_I2C
  6576 ;;		_Setup_MPU6050
  6577 ;;		_printCentiValue
  6578 ;;		_printDeciValue
  6579 ;;		_printUShort
  6580 ;;		_DisplayInfo
  6581 ;;		_DisplayData
  6582 ;;		_printVersion
  6583 ;;		_printVoltage
  6584 ;;		_main
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _cputs
  6590  0B5B                     _cputs:	
  6591  0B5B                     l2491:	
  6592                           ;incstack = 0
  6593                           ; Regs used in _cputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6594                           
  6595  0B5B  0875               	movf	cputs@s,w
  6596  0B5C  0084               	movwf	4
  6597  0B5D  0876               	movf	cputs@s+1,w
  6598  0B5E  0085               	movwf	5
  6599  0B5F  0012               	moviw fsr0++
  6600  0B60  1903               	btfsc	3,2
  6601  0B61  0008               	return
  6602  0B62  0875               	movf	cputs@s,w
  6603  0B63  0084               	movwf	4
  6604  0B64  0876               	movf	cputs@s+1,w
  6605  0B65  0085               	movwf	5
  6606  0B66  0800               	movf	0,w	;code access
  6607  0B67  318B  23CD  318B   	fcall	_putch
  6608  0B6A  3001               	movlw	1
  6609  0B6B  07F5               	addwf	cputs@s,f
  6610  0B6C  3000               	movlw	0
  6611  0B6D  3DF6               	addwfc	cputs@s+1,f
  6612  0B6E  2B5B               	goto	l2491
  6613  0B6F                     __end_of_cputs:	
  6614                           
  6615                           	psect	text40
  6616  0BCD                     __ptext40:	
  6617 ;; *************** function _putch *****************
  6618 ;; Defined at:
  6619 ;;		line 229 in file "blueGyro.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  char_out        1    wreg     unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  char_out        1    3[COMMON] unsigned char 
  6624 ;;  temp            1    4[COMMON] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;		None               void
  6627 ;; Registers used:
  6628 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6634 ;;      Params:         0       0       0       0
  6635 ;;      Locals:         2       0       0       0
  6636 ;;      Temps:          1       0       0       0
  6637 ;;      Totals:         3       0       0       0
  6638 ;;Total ram usage:        3 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_printCentiValue
  6645 ;;		_printDeciValue
  6646 ;;		_putHexNibble
  6647 ;;		_cputs
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _putch
  6653  0BCD                     _putch:	
  6654                           
  6655                           ;incstack = 0
  6656                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0]
  6657                           ;putch@char_out stored from wreg
  6658  0BCD  00F3               	movwf	putch@char_out
  6659                           
  6660                           ;blueGyro.c: 231: unsigned char temp;
  6661                           ;blueGyro.c: 234: temp = InFiFo + 1;
  6662  0BCE  0020               	movlb	0	; select bank0
  6663  0BCF  0865               	movf	_InFiFo,w	;volatile
  6664  0BD0  3E01               	addlw	1
  6665  0BD1  00F2               	movwf	??_putch
  6666  0BD2  0872               	movf	??_putch,w
  6667  0BD3  00F4               	movwf	putch@temp
  6668                           
  6669                           ;blueGyro.c: 235: if(temp >= 32)
  6670  0BD4  3020               	movlw	32
  6671  0BD5  0274               	subwf	putch@temp,w
  6672  0BD6  1803               	btfsc	3,0
  6673                           
  6674                           ;blueGyro.c: 236: temp = 0;
  6675  0BD7  01F4               	clrf	putch@temp
  6676  0BD8                     l2413:	
  6677                           ;blueGyro.c: 239: while(temp == OutFiFo);
  6678                           
  6679  0BD8  0874               	movf	putch@temp,w
  6680  0BD9  0667               	xorwf	_OutFiFo,w	;volatile
  6681  0BDA  1903               	skipnz
  6682  0BDB  2BD8               	goto	l2413
  6683                           
  6684                           ;blueGyro.c: 242: SerialBuffer[InFiFo]=char_out;
  6685  0BDC  0873               	movf	putch@char_out,w
  6686  0BDD  00F2               	movwf	??_putch
  6687  0BDE  0865               	movf	_InFiFo,w
  6688  0BDF  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  6689  0BE0  0086               	movwf	6
  6690  0BE1  0187               	clrf	7
  6691  0BE2  0872               	movf	??_putch,w
  6692  0BE3  0081               	movwf	1
  6693                           
  6694                           ;blueGyro.c: 244: InFiFo= temp;
  6695  0BE4  0874               	movf	putch@temp,w
  6696  0BE5  00F2               	movwf	??_putch
  6697  0BE6  0872               	movf	??_putch,w
  6698  0BE7  00E5               	movwf	_InFiFo	;volatile
  6699                           
  6700                           ;blueGyro.c: 246: TXIE=1;
  6701  0BE8  0021               	movlb	1	; select bank1
  6702  0BE9  1611               	bsf	17,4	;volatile
  6703  0BEA  0008               	return
  6704  0BEB                     __end_of_putch:	
  6705                           
  6706                           	psect	intentry
  6707  0004                     __pintentry:	
  6708 ;; *************** function _isr *****************
  6709 ;; Defined at:
  6710 ;;		line 198 in file "blueGyro.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6724 ;;      Params:         0       0       0       0
  6725 ;;      Locals:         0       0       0       0
  6726 ;;      Temps:          2       0       0       0
  6727 ;;      Totals:         2       0       0       0
  6728 ;;Total ram usage:        2 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		Interrupt level 1
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737  0004                     _isr:	
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6741  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6742  0005  3180               	pagesel	$
  6743  0006  0020               	movlb	0	; select bank0
  6744  0007  087F               	movf	127,w
  6745  0008  00F1               	movwf	??_isr+1
  6746                           
  6747                           ;blueGyro.c: 200: if(TXIE)
  6748  0009  0021               	movlb	1	; select bank1
  6749  000A  1E11               	btfss	17,4	;volatile
  6750  000B  282B               	goto	i1l216
  6751                           
  6752                           ;blueGyro.c: 201: if(TXIF)
  6753  000C  0020               	movlb	0	; select bank0
  6754  000D  1E11               	btfss	17,4	;volatile
  6755  000E  282B               	goto	i1l216
  6756                           
  6757                           ;blueGyro.c: 202: {
  6758                           ;blueGyro.c: 204: if(InFiFo != OutFiFo)
  6759  000F  0865               	movf	_InFiFo,w	;volatile
  6760  0010  0667               	xorwf	_OutFiFo,w	;volatile
  6761  0011  1903               	skipnz
  6762  0012  2825               	goto	i1l2185
  6763                           
  6764                           ;blueGyro.c: 205: {
  6765                           ;blueGyro.c: 206: TXREG= SerialBuffer[OutFiFo];
  6766  0013  0867               	movf	_OutFiFo,w
  6767  0014  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  6768  0015  0086               	movwf	6
  6769  0016  0187               	clrf	7
  6770  0017  0801               	movf	1,w
  6771  0018  0023               	movlb	3	; select bank3
  6772  0019  009A               	movwf	26	;volatile
  6773                           
  6774                           ;blueGyro.c: 207: OutFiFo++;
  6775  001A  3001               	movlw	1
  6776  001B  00F0               	movwf	??_isr
  6777  001C  0870               	movf	??_isr,w
  6778  001D  0020               	movlb	0	; select bank0
  6779  001E  07E7               	addwf	_OutFiFo,f	;volatile
  6780                           
  6781                           ;blueGyro.c: 208: if(OutFiFo >= 32)
  6782  001F  3020               	movlw	32
  6783  0020  0267               	subwf	_OutFiFo,w	;volatile
  6784  0021  1C03               	skipc
  6785  0022  282B               	goto	i1l216
  6786                           
  6787                           ;blueGyro.c: 209: OutFiFo=0;
  6788  0023  01E7               	clrf	_OutFiFo	;volatile
  6789                           
  6790                           ;blueGyro.c: 210: }
  6791  0024  282B               	goto	i1l216
  6792  0025                     i1l2185:	
  6793                           
  6794                           ;blueGyro.c: 211: else
  6795                           ;blueGyro.c: 212: if(OutFiFo == InFiFo)
  6796  0025  0867               	movf	_OutFiFo,w	;volatile
  6797  0026  0665               	xorwf	_InFiFo,w	;volatile
  6798  0027  1D03               	skipz
  6799  0028  282B               	goto	i1l216
  6800                           
  6801                           ;blueGyro.c: 213: {
  6802                           ;blueGyro.c: 216: TXIE=0;
  6803  0029  0021               	movlb	1	; select bank1
  6804  002A  1211               	bcf	17,4	;volatile
  6805  002B                     i1l216:	
  6806                           
  6807                           ;blueGyro.c: 217: }
  6808                           ;blueGyro.c: 218: }
  6809                           ;blueGyro.c: 221: if(TMR2IF){
  6810  002B  0020               	movlb	0	; select bank0
  6811  002C  1C91               	btfss	17,1	;volatile
  6812  002D  2833               	goto	i1l223
  6813                           
  6814                           ;blueGyro.c: 222: TMR2IF=0;
  6815  002E  1091               	bcf	17,1	;volatile
  6816                           
  6817                           ;blueGyro.c: 223: Timerms++;
  6818  002F  3001               	movlw	1
  6819  0030  07FA               	addwf	_Timerms,f	;volatile
  6820  0031  3000               	movlw	0
  6821  0032  3DFB               	addwfc	_Timerms+1,f	;volatile
  6822  0033                     i1l223:	
  6823  0033  0871               	movf	??_isr+1,w
  6824  0034  00FF               	movwf	127
  6825  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6826  0036  0009               	retfie
  6827  0037                     __end_of_isr:	
  6828  007E                     btemp	set	126	;btemp
  6829  007E                     int$flags	set	126
  6830  007E                     wtemp	set	126
  6831  007E                     wtemp0	set	126
  6832  0080                     wtemp1	set	128
  6833  0082                     wtemp2	set	130
  6834  0084                     wtemp3	set	132
  6835  0086                     wtemp4	set	134
  6836  0088                     wtemp5	set	136
  6837  007F                     wtemp6	set	127
  6838  007E                     ttemp	set	126
  6839  007E                     ttemp0	set	126
  6840  0081                     ttemp1	set	129
  6841  0084                     ttemp2	set	132
  6842  0087                     ttemp3	set	135
  6843  007F                     ttemp4	set	127
  6844  007E                     ltemp	set	126
  6845  007E                     ltemp0	set	126
  6846  0082                     ltemp1	set	130
  6847  0086                     ltemp2	set	134
  6848  0080                     ltemp3	set	128


Data Sizes:
    Strings     244
    Constant    81
    Data        1
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     67      73
    BANK1            80      0      72
    BANK2            80      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    cputs@s	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_20(CODE[10]), STR_19(CODE[9]), STR_18(CODE[29]), STR_17(CODE[4]), 
		 -> STR_16(CODE[4]), STR_15(CODE[7]), STR_14(CODE[17]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[9]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[11]), printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 
		 -> STR_3(CODE[27]), STR_2(CODE[40]), STR_1(CODE[46]), 

    DisplayInfo@gs	PTR struct . size(1) Largest target is 20
		 -> CurrentData(BANK1[20]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    LDByteReadI2C@Data	PTR unsigned char  size(1) Largest target is 14
		 -> GotInt_MPU6050@uc_temp(BANK0[1]), Get_Accel_Values@cval(BANK0[14]), MPU6050_Test_I2C@Data(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_Setup_MPU6050
    _printVoltage->___aldiv
    _printVersion->_cputs
    _Setup_MPU6050->_LDByteWriteI2C
    _Setup_MPU6050->_cputs
    _LDByteWriteI2C->_i2c_Address
    _MPU6050_Test_I2C->_LDByteReadI2C
    _GotInt_MPU6050->_LDByteReadI2C
    _printGyro->___aldiv
    _printGyro->___lmul
    _printDeciValue->___aldiv
    _printGForce->___aldiv
    _printGForce->___lmul
    _printCentiValue->___aldiv
    _utoa->___lwdiv
    _ltoa->___aldiv
    _ultoa->___lldiv
    _ultoa->___llmod
    _Get_Accel_Values->_LDByteReadI2C
    _LDByteReadI2C->_i2c_Address
    _CalculateSumOfSquares->___lmul
    _DisplayData->_putHex
    _putHex->_putHexNibble
    _putHexNibble->_putch
    _cputs->_putch

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DisplayInfo
    _main->_printVoltage
    _printVoltage->_printCentiValue
    _Setup_MPU6050->_LDByteWriteI2C
    _MPU6050_Test_I2C->_LDByteReadI2C
    _GotInt_MPU6050->_LDByteReadI2C
    _DisplayInfo->_printGForce
    _DisplayInfo->_printGyro
    _printUShort->_utoa
    _printGyro->_printDeciValue
    _printDeciValue->_ltoa
    _printGForce->_printCentiValue
    _printCentiValue->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _Get_Accel_Values->_LDByteReadI2C
    _CalculateSumOfSquares->___lmul
    _DisplayData->_putHex

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   56389
                                             63 BANK0      4     4      0
              _CalculateSumOfSquares
                        _DisplayData
                        _DisplayInfo
                         _FindDeltaG
                   _Get_Accel_Values
                     _GotInt_MPU6050
                       _Init1msTimer
                   _MPU6050_Test_I2C
                      _Setup_MPU6050
                              _cputs
                           _i2c_Init
                       _printVersion
                       _printVoltage
 ---------------------------------------------------------------------------------
 (1) _printVoltage                                         9     9      0   10956
                                             54 BANK0      9     9      0
                            ___aldiv
                              _cputs
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (1) _printVersion                                         0     0      0    1820
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup_MPU6050                                        5     5      0    3253
                                              8 COMMON     2     2      0
                                              3 BANK0      3     3      0
                     _LDByteWriteI2C
                              _cputs
 ---------------------------------------------------------------------------------
 (2) _LDByteWriteI2C                                       5     3      2    1331
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Test_I2C                                     3     3      0    3064
                                              1 BANK0      3     3      0
                      _LDByteReadI2C
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _Init1msTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GotInt_MPU6050                                       3     3      0    1241
                                              1 BANK0      3     3      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (1) _FindDeltaG                                           4     4      0       0
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayInfo                                          5     5      0   28710
                                             58 BANK0      5     5      0
              _CalculateSumOfSquares
                   _Get_Accel_Values
                              _cputs
                              _isqrt
                        _printGForce
                          _printGyro
                        _printUShort
 ---------------------------------------------------------------------------------
 (2) _printUShort                                         18    16      2    3887
                                              9 BANK0     18    16      2
                              _cputs
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGyro                                            4     0      4    9857
                                             54 BANK0      4     0      4
                            ___aldiv
                             ___lmul
                     _printDeciValue
 ---------------------------------------------------------------------------------
 (3) _printDeciValue                                      26    22      4    7846
                                             28 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _ltoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGForce                                          4     0      4   10018
                                             54 BANK0      4     0      4
                            ___aldiv
                             ___lmul
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (2) _printCentiValue                                     26    22      4    7942
                                             28 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _ltoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1891
                                              0 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     477
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    2013
                                             19 BANK0      9     3      6
                            ___aldiv (ARG)
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    1460
                                              6 BANK0     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     362
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     501
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1095
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _isqrt                                               32    28      4     235
                                              2 COMMON     4     0      4
                                              0 BANK0     28    28      0
 ---------------------------------------------------------------------------------
 (1) _Get_Accel_Values                                    19    19      0    1683
                                              1 BANK0     19    19      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (2) _LDByteReadI2C                                        6     3      3    1167
                                              6 COMMON     4     1      3
                                              0 BANK0      1     1      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      65
                                              2 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Address                                          4     3      1     294
                                              2 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CalculateSumOfSquares                               30    30      0     898
                                              4 BANK0     26    26      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     622
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayData                                          0     0      0    2600
                              _cputs
                             _putHex
 ---------------------------------------------------------------------------------
 (2) _putHex                                               4     2      2     780
                                              7 COMMON     2     0      2
                                              0 BANK0      2     2      0
                       _putHexNibble
 ---------------------------------------------------------------------------------
 (3) _putHexNibble                                         2     2      0     201
                                              5 COMMON     2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2    1820
                                              5 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                3     3      0     130
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalculateSumOfSquares
     ___lmul
   _DisplayData
     _cputs
       _putch
     _putHex
       _putHexNibble
         _putch
   _DisplayInfo
     _CalculateSumOfSquares
       ___lmul
     _Get_Accel_Values
       _LDByteReadI2C
         _i2c_Address
           _i2c_Wait
         _i2c_Read
           _i2c_Wait
         _i2c_Restart
           _i2c_Wait
         _i2c_Start
           _i2c_Wait
         _i2c_Stop
           _i2c_Wait
         _i2c_Write
           _i2c_Wait
     _cputs
       _putch
     _isqrt
     _printGForce
       ___aldiv
       ___lmul
       _printCentiValue
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _ltoa
           ___aldiv (ARG)
           _ultoa (ARG)
             ___lldiv
             ___llmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printGyro
       ___aldiv
       ___lmul
       _printDeciValue
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _ltoa
           ___aldiv (ARG)
           _ultoa (ARG)
             ___lldiv
             ___llmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printUShort
       _cputs
         _putch
       _utoa
         ___lwdiv
         ___lwmod
   _FindDeltaG
   _Get_Accel_Values
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _GotInt_MPU6050
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Init1msTimer
   _MPU6050_Test_I2C
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _cputs
       _putch
   _Setup_MPU6050
     _LDByteWriteI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _cputs
       _putch
   _cputs
     _putch
   _i2c_Init
   _printVersion
     _cputs
       _putch
   _printVoltage
     ___aldiv
     _cputs
       _putch
     _printCentiValue
       ___aldiv
       ___lwmod
       _cputs
         _putch
       _ltoa
         ___aldiv (ARG)
         _ultoa (ARG)
           ___lldiv
           ___llmod
       _putch
       _utoa
         ___lwdiv
         ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      48       8       90.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      9D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 27 08:27:36 2015

                       ?_Init1msTimer 0070                           __CFG_CP$OFF 0000  
                       ??_i2c_Address 0073                                    l55 0BC8  
                                  l56 0BCA                           __CFG_LVP$ON 0000  
                         i2c_Read@ack 0073                                   l301 0F47  
                                 l241 0766                                   l704 0F19  
                                 l484 068A                                   l787 05DD  
                                 _GIE 005F                                   _PR2 001B  
                                 _PEN 10B2                          __CFG_CPD$OFF 0000  
                                 _SEN 10B0                           main@UserKey 0062  
                                 _isr 0004                          __CFG_BORV$LO 0000  
                                 wreg 0009                         ??_i2c_Restart 0072  
                                l2023 0324                                  l2015 0301  
                                l2007 02DE                                  l2111 0D4F  
                                l2025 0333                                  l2017 0310  
                                l2009 02ED                                  l2117 0D6D  
                                l2403 0B29                                  l2413 0BD8  
                                l1701 0CD1                                  l2423 0572  
                                l2503 0C7B                                  l1711 0CEC  
                                l2433 059F                                  l2363 0E8B  
                                l1707 0CE3                                  l1723 0C37  
                                l2373 0EB9                                  l2365 0E99  
                                l1725 0C43                                  l1733 0C58  
                                l2509 0ED3                                  l2621 079A  
                                l2519 0EF1                                  l2377 0EC4  
                                l2393 0DDE                                  l1729 0C4F  
                                l2491 0B5B                                  l2555 06AB  
                                l2547 069B                                  l2387 0DB8  
                                l2619 0792                                  l2707 0FBC  
                                l2637 07F8                                  l1933 0C94  
                                l2573 06F2                                  l2565 06D9  
                                l2557 06B9                                  l2389 0DC6  
                                l2397 0DE9                                  l2717 0FDA  
                                l2583 0D88                                  l2903 028C  
                                l1937 0C9F                                  l2585 0D9E  
                                l2569 06E4                                  l2905 0294  
                                l1699 0CC5                                  l2771 0F8A  
                                l1981 060A                                  l2597 0713  
                                l2909 0299                                  l2917 02A9  
                                l2599 071B                                  l2767 0F64  
                                l2935 02C6                                  l2863 022E  
                                l2847 0211                                  l1985 0667  
                                l2881 0250                                  l2873 0240  
                                l2857 0226                                  l2699 0C2A  
                                l2891 0266                                  l2883 0254  
                                l2875 0245                                  l2867 0236  
                                l2859 0228                                  l2893 026E  
                                l2869 0238                                  l2887 025C  
                                ?_isr 0070                                  _ADGO 04E9  
                                STR_1 00A0                                  STR_2 00CE  
                                STR_3 0113                                  STR_4 013F  
                                STR_5 016D                                  STR_6 0173  
                                STR_7 0179                                  STR_8 017F  
                                STR_9 015D                                  _BRGH 0CF2  
                                _CREN 0CEC                    LDByteWriteI2C@data 0077  
                                u2105 0EBA                                  u1315 0C3A  
                                u1245 0CC8                                  u2135 0DBB  
                                u1335 0C49                                  u2065 0E8E  
                                u1265 0CD2                                  u1345 0C50  
                                u2155 0DD4                                  u1275 0CDC  
                                u1700 03D6                                  u1620 063D  
                                u2085 0E9A                                  u2165 0DDF  
                                u1285 0CE4                                  u1615 061B  
                                u2095 0EAE                                  u1625 0639  
                                u2345 06AE                                  u1635 0655  
                                u1645 0668                                  u2365 06BA  
                                u2375 06CE                                  u2465 0C02  
                                u1585 0CA0                                  u2385 06DA  
                                u2490 0B97                                  u1595 0CA7  
                                u1765 0D4B                                  u1695 03C9  
                                u1775 0D69                                  u2727 01CF  
                                u2737 01E2                                  u2747 01FA  
                                _PEIE 005E                                  u2757 0F3F  
                                _RCIE 048D                                  _RCEN 10B3  
                                _RCIF 008D                                  _SCKP 0CFC  
                                _TMR2 001A                                  _SPEN 0CEF  
                                _RSEN 10B1                                  _TXIE 048C  
                                _TXEN 0CF5                                  _TXIF 008C  
                                _SYNC 0CF4                                  _WPUA 020C  
                                _Mode 0068                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                                  _main 0194  
                                _ltoa 0C5D                                  fsr0h 0005  
                                fsr1h 0007                                  fsr0l 0004  
                                indf0 0000                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                                _utoa 0ECD                         __CFG_BOREN$ON 0000  
                                ltemp 007E                                  start 0037  
                                ttemp 007E                   Setup_MPU6050@TheReg 0025  
                                wtemp 007E                         __CFG_IESO$OFF 0000  
                       printGyro@RawG 0056                  printVoltage@VDDValue 0059  
                       __CFG_MCLRE$ON 0000                        ??_Init1msTimer 0072  
                          _FindDeltaG 0D30                                 ??_isr 0070  
                 __end_of_DisplayData 0D30                   __end_of_DisplayInfo 04CA  
                     __end_of___aldiv 06FB                                 _ABDEN 0CF8  
                               ?_main 0070                                 _ACKEN 10B4  
                               _ACKDT 10B5                                 _ADRES 009B  
                               STR_10 018C                                 ?_ltoa 0033  
                               STR_11 0190                                 STR_12 013C  
                               STR_20 014A                                 STR_13 013C  
                               STR_14 012E                                 STR_15 0166  
                               STR_16 0188                                 _BRG16 0CFB  
                               STR_17 0184                         __CFG_WDTE$OFF 0000  
                               STR_18 00F6                                 STR_19 0154  
                     __end_of___lldiv 0ECD                                 ?_utoa 0020  
                     __end_of___llmod 0DF2                                 _T2CON 001C  
                     __end_of___lwdiv 0CF1              __size_of_printCentiValue 007F  
                               i1l223 0033                                 i1l216 002B  
                     __end_of___lwmod 0C5D                                 _RCREG 0199  
                               _RCSTA 019D                                 _PORTA 000C  
                               _TRISA 008C                                 _TXREG 019A  
                               _TXSTA 019E                   __end_of_i2c_Address 0B4C  
                 ___lmul@multiplicand 0076                      printCentiValue@T 0050  
                    ??_printDeciValue 007A                                 _cputs 0B5B  
                               _isqrt 05F1                      ??_LDByteWriteI2C 0078  
                               _putch 0BCD                                 _ultoa 0568  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                 __end_of_i2c_Restart 0B0B                                 ttemp4 007F  
                               utoa@c 0027                                 utoa@v 0025  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                     __initialization 0039                          __end_of_main 02D3  
                    __end_of_i2c_Init 0B3D                      __end_of_i2c_Read 0BCD  
                        __end_of_ltoa 0C8B                      __end_of_i2c_Wait 0B31  
                        __end_of_utoa 0F2F                      __end_of_i2c_Stop 0B15  
               printCentiValue@buffer 0040                                ??_main 005F  
                              ??_ltoa 0039                                ??_utoa 0024  
                      __CFG_PLLEN$OFF 0000                  LDByteWriteI2C@LowAdd 0076  
                              _ADCON0 009D                                _ADCON1 009E  
                              ?_cputs 0075                      ___llmod@dividend 0076  
                              ?_isqrt 0072                                _APFCON 011D  
                              _ANSELA 018C                                ?_putch 0070  
                              ?_ultoa 0026                    __size_of_i2c_Start 0005  
                              i1l2185 0025                    __size_of_i2c_Write 0007  
                              _INTCON 000B                                _FVRCON 0117  
                              _OSCCON 0099                                _TMR2IE 0489  
                              _TMR2IF 0089                                _SPBRGH 019C  
                              _SPBRGL 019B                      ??_GotInt_MPU6050 0021  
                              _SSPADD 0212                                _TRISA1 0461  
                              _TRISA2 0462                                _SSPBUF 0211  
                              _InFiFo 0065                      _MPU6050_Test_I2C 0C0E  
                      __CFG_PWRTE$OFF 0000                           _DisplayData 0CF1  
                         _DisplayInfo 03DB                                ___lmul 0C8B  
                           ??___aldiv 0020                           ?_FindDeltaG 0070  
                      __CFG_STVREN$ON 0000                            _TimerCrash 0063  
      __size_of_CalculateSumOfSquares 0108                             ??___lldiv 0020  
                           ??___llmod 0020         __end_of_CalculateSumOfSquares 03DB  
                           ??___lwdiv 0076                             ??___lwmod 0076  
                         _i2c_Address 0B3D                                _putHex 0BEB  
               __end_of_Setup_MPU6050 1000                                cputs@s 0075  
                       i2c_Write@data 0072                          ?_printGForce 0056  
                              ltoa@cp 003A                                isqrt@b 0038  
                              isqrt@g 0034                           _i2c_Restart 0B06  
                        ?_printUShort 0029                                ultoa@c 0031  
                              ultoa@v 002D                  __end_of_Init1msTimer 0B5B  
                   ??_printCentiValue 007A             __size_of_Get_Accel_Values 009E  
              __size_of_LDByteReadI2C 0040               __end_of__initialization 004B  
                      __pcstackCOMMON 0070                         putch@char_out 0073  
                        __pidataBANK0 0003                         __end_of_cputs 0B6F  
                       __end_of_isqrt 0679                         __end_of_putch 0BEB  
                       __end_of_ultoa 05F1                     __end_of_i2c_Start 0B10  
                   __end_of_i2c_Write 0B22                           _CurrentData 00D4  
              printCentiValue@_lvalue 0052                               ??_cputs 0077  
                             ??_isqrt 0020                               ??_putch 0072  
                             ??_ultoa 002C         LDByteWriteI2C@i2cSlaveAddress 0022  
                           ?_i2c_Init 0070                   __size_of_FindDeltaG 003F  
                           ?_i2c_Read 0070                            __pbssBANK0 0063  
                          __pbssBANK1 00A0                             ?_i2c_Wait 0070  
                           ?_i2c_Stop 0070                            __pmaintext 0194  
                             ?___lmul 0072               LDByteWriteI2C@ErrorCode 0020  
                          __pintentry 0004                         _LDByteReadI2C 0D6F  
                      ___lmul@product 0020                               ?_putHex 0077  
                  i2c_Address@address 0074                    __size_of_printGyro 0044  
__end_ofSetup_MPU6050@MPU6050RegTable 0098          Setup_MPU6050@MPU6050RegTable 004F  
                    printUShort@value 0029                               _SSPCON1 0215  
                             _SSPCON2 0216                               _SSPSTAT 0214  
                          ??_i2c_Init 0072                            ??_i2c_Read 0072  
                          ??_i2c_Wait 0072                            ??_i2c_Stop 0072  
                LDByteReadI2C@Address 0076                               _NewMode 0066  
                             _OutFiFo 0067                               _Timerms 007A  
           _CalculateSumOfSquares$240 002E             _CalculateSumOfSquares$241 0030  
           _CalculateSumOfSquares$239 002C                               ___aldiv 0679  
                     __size_of___lmul 0032                               ___lldiv 0E7A  
                             ___llmod 0DAF                               ___lwdiv 0CBD  
                             ___lwmod 0C31                        ?_LDByteReadI2C 0076  
                             __ptext1 0F2F                               __ptext2 0B22  
                             __ptext3 0B31                               __ptext4 0F95  
                             __ptext5 0B99                               __ptext6 0C0E  
                             __ptext7 0B4C                               __ptext8 0B83  
                             __ptext9 0D30                       __size_of_putHex 0023  
                   LDByteReadI2C@Data 0077              __end_of_MPU6050_Test_I2C 0C31  
               __size_of_Init1msTimer 000F                          __size_of_isr 0033  
                    ___aldiv@dividend 0076                  __size_of_printGForce 0044  
                             clrloop0 0B16                  end_of_initialization 004B  
                    _Get_Accel_Values 04CA                  __size_of_printUShort 0014  
                i2c_Address@l_address 0075                               ltoa@buf 003B  
                             ltoa@val 0033                         ?_putHexNibble 0070  
                     ___lldiv@divisor 0072                       ___lldiv@counter 0025  
                   __end_of_printGyro 0E7A                          ?_DisplayData 0070  
                        ?_DisplayInfo 0070                      ___aldiv@quotient 0023  
                        ??_FindDeltaG 0072                          _Init1msTimer 0B4C  
                        __pstringtext 004F                               utoa@buf 0028  
                             utoa@val 0020                          ?_i2c_Address 0072  
                     _printCentiValue 06FB                         ?_printVersion 0070  
                __end_ofFindDeltaG@HG 009C                  __end_ofFindDeltaG@LG 00A0  
                         putHex@value 0077                         ?_printVoltage 0070  
                    __CFG_FOSC$INTOSC 0000                          ?_i2c_Restart 0070  
                printDeciValue@buffer 0040                    __end_of_FindDeltaG 0D6F  
                   Setup_MPU6050@loop 0023                        ??_putHexNibble 0075  
             __size_of_printDeciValue 0073               __size_of_LDByteWriteI2C 0018  
                     ??_LDByteReadI2C 0079                        __end_of___lmul 0CBD  
               _CalculateSumOfSquares 02D3                        ??_printVersion 0078  
                      ??_printVoltage 0056                        __end_of_putHex 0C0E  
                           _i2c_Start 0B0B                             _i2c_Write 0B1B  
                 start_initialization 0039                           __end_of_isr 0037  
                printCentiValue@value 003C          LDByteReadI2C@i2cSlaveAddress 0020  
                   __size_of_i2c_Init 000C                     __size_of_i2c_Read 001C  
                     ___llmod@divisor 0072                     __size_of_i2c_Wait 0008  
                   __size_of_i2c_Stop 0005                       ___llmod@counter 0021  
              __size_of_Setup_MPU6050 006B               __end_of_printCentiValue 077A  
                            ??___lmul 007A               __size_of_GotInt_MPU6050 0016  
                         __pdataBANK0 0068                              ??_putHex 0020  
                          ?_i2c_Start 0070                            ?_i2c_Write 0070  
                         __pbssCOMMON 007A                             ___latbits 0001  
                       __pcstackBANK0 0020                     putHexNibble@value 0076  
                    ___lwdiv@dividend 0074                              ?___aldiv 0072  
                            ?___lldiv 0072                  __size_of_DisplayData 003F  
                            ?___llmod 0072                  __size_of_DisplayInfo 00EF  
                            ?___lwdiv 0072                              ?___lwmod 0072  
              ?_CalculateSumOfSquares 0070              __end_of_Get_Accel_Values 0568  
                          isqrt@bshft 0030                  __size_of_i2c_Address 000F  
                __end_of_putHexNibble 0800                         _Setup_MPU6050 0F95  
       CalculateSumOfSquares@GxSquare 0032                     ?_MPU6050_Test_I2C 0070  
       CalculateSumOfSquares@GySquare 0036                   LDByteReadI2C@Length 0078  
       CalculateSumOfSquares@GzSquare 003A                  MPU6050_Test_I2C@Data 0023  
                  ??_MPU6050_Test_I2C 0021                      ___lwdiv@quotient 0077  
                      __size_of_cputs 0014                        __size_of_isqrt 0088  
                      __size_of_putch 001E                        __size_of_ultoa 0089  
                __size_of_i2c_Restart 0005                       ___aldiv@divisor 0072  
                     ___aldiv@counter 0021                  __end_of_printVersion 0B29  
                           clear_ram0 0B15                          FindDeltaG@HG 0098  
                        FindDeltaG@LG 009C                  __end_of_printVoltage 0F95  
                   printUShort@buffer 002B                        _printDeciValue 077A  
                      _LDByteWriteI2C 0B99                      ?_printCentiValue 003C  
               GotInt_MPU6050@uc_temp 0023                              _SSP1CON2 0216  
                           _printGyro 0E36                   printDeciValue@value 003C  
                      ?_Setup_MPU6050 0070                         ??_printGForce 007A  
                         ??_i2c_Start 0072                           ??_i2c_Write 0072  
                       ??_printUShort 007A                          _SerialBuffer 00A0  
                   printVoltage@value 005D                     ___lmul@multiplier 0072  
                            _i2c_Init 0B31                              _i2c_Read 0BB1  
                            _i2c_Wait 0B29                              _PeakData 00C0  
                            _i2c_Stop 0B10                __end_of_printDeciValue 07ED  
              __end_of_LDByteWriteI2C 0BB1                        _GotInt_MPU6050 0B83  
                    __size_of___aldiv 0082                            ?_printGyro 0056  
                    __size_of___lldiv 0053                      __size_of___llmod 0043  
                    __size_of___lwdiv 0034                      __size_of___lwmod 002C  
                     ___lwdiv@divisor 0072                       ___lwdiv@counter 0079  
                            __ptext10 03DB                              __ptext11 0B6F  
                            __ptext20 0568                              __ptext12 0E36  
                            __ptext21 0DAF                              __ptext13 077A  
                            __ptext30 0B06                              __ptext22 0E7A  
                            __ptext14 0DF2                              __ptext31 0BB1  
                            __ptext23 0679                              __ptext15 06FB  
                            __ptext40 0BCD                              __ptext32 0B3D  
                            __ptext24 05F1                              __ptext16 0ECD  
                            __ptext33 0B29                              __ptext25 04CA  
                            __ptext17 0C31                              __ptext34 02D3  
                            __ptext26 0D6F                              __ptext18 0CBD  
                            __ptext35 0C8B                              __ptext27 0B1B  
                            __ptext19 0C5D                              __ptext36 0CF1  
                            __ptext28 0B10                              __ptext37 0BEB  
                            __ptext29 0B0B                              __ptext38 07ED  
                            __ptext39 0B5B                  Get_Accel_Values@cval 0026  
                           isqrt@temp 002C                       printGForce@RawG 0056  
                 __end_of_printGForce 0E36                       ?_printDeciValue 003C  
                       __size_of_main 013F                   __end_of_printUShort 0B83  
                       __size_of_ltoa 002E                         __size_of_utoa 0062  
                     ?_LDByteWriteI2C 0076                __end_of_GotInt_MPU6050 0B99  
                            int$flags 007E                         DisplayInfo@Gt 005C  
                       DisplayInfo@gs 005E                 __end_of_LDByteReadI2C 0DAF  
               __size_of_putHexNibble 0013                       ??_Setup_MPU6050 0078  
                           putch@temp 0074                             ultoa@base 002A  
               __size_of_printVersion 0007                 __size_of_printVoltage 0066  
                            intlevel1 0000                              ltoa@base 0037  
                    ___lwmod@dividend 0074                      ___lldiv@dividend 0076  
                            isqrt@val 0072                       i2c_Address@mode 0072  
                   __CFG_CLKOUTEN$OFF 0000                          _putHexNibble 07ED  
                     ?_GotInt_MPU6050 0070               ??_CalculateSumOfSquares 0024  
                         ??_printGyro 007A                     ?_Get_Accel_Values 0070  
                            utoa@base 0022                              ultoa@buf 0032  
                            ultoa@val 0026                            _OPTION_REG 0095  
                        _printVersion 0B22                    ??_Get_Accel_Values 0021  
                    ___lldiv@quotient 0021                          _printVoltage 0F2F  
                     ___lwmod@divisor 0072                           _printGForce 0DF2  
                     ___lwmod@counter 0077                          ___aldiv@sign 0022  
                         _printUShort 0B6F                   i2c_Read@i2cReadData 0074  
                     printDeciValue@T 0050             __size_of_MPU6050_Test_I2C 0023  
                       ??_DisplayData 0079                         ??_DisplayInfo 005A  
               printDeciValue@_lvalue 0052  
