

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 29 15:14:45 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0199                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020C                     	;# 
   258  0211                     	;# 
   259  0211                     	;# 
   260  0212                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0213                     	;# 
   264  0214                     	;# 
   265  0214                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0291                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0294                     	;# 
   278  0295                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0391                     	;# 
   282  0392                     	;# 
   283  0393                     	;# 
   284  039A                     	;# 
   285  039C                     	;# 
   286  039D                     	;# 
   287  039E                     	;# 
   288  039F                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  008C                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  010C                     	;# 
   341  0111                     	;# 
   342  0112                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0117                     	;# 
   346  0118                     	;# 
   347  0119                     	;# 
   348  011A                     	;# 
   349  011B                     	;# 
   350  011D                     	;# 
   351  011D                     	;# 
   352  018C                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0197                     	;# 
   363  0199                     	;# 
   364  019A                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019C                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019E                     	;# 
   373  019F                     	;# 
   374  020C                     	;# 
   375  0211                     	;# 
   376  0211                     	;# 
   377  0212                     	;# 
   378  0212                     	;# 
   379  0213                     	;# 
   380  0213                     	;# 
   381  0214                     	;# 
   382  0214                     	;# 
   383  0215                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0216                     	;# 
   387  0216                     	;# 
   388  0217                     	;# 
   389  0217                     	;# 
   390  0291                     	;# 
   391  0291                     	;# 
   392  0292                     	;# 
   393  0293                     	;# 
   394  0294                     	;# 
   395  0295                     	;# 
   396  0295                     	;# 
   397  0296                     	;# 
   398  0391                     	;# 
   399  0392                     	;# 
   400  0393                     	;# 
   401  039A                     	;# 
   402  039C                     	;# 
   403  039D                     	;# 
   404  039E                     	;# 
   405  039F                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417                           
   418                           	psect	eeprom_data
   419  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   420                           
   421                           	psect	idataBANK0
   422  0003                     __pidataBANK0:	
   423                           
   424                           ;initializer for _Mode
   425  0003  34FF               	retlw	255
   426                           
   427                           	psect	stringtext
   428  03DB                     __pstringtext:	
   429  03DB                     Setup_MPU6050@MPU6050RegTable:	
   430  03DB  341D               	retlw	29
   431  03DC  341E               	retlw	30
   432  03DD  341F               	retlw	31
   433  03DE  3420               	retlw	32
   434  03DF  3421               	retlw	33
   435  03E0  3422               	retlw	34
   436  03E1  3423               	retlw	35
   437  03E2  3424               	retlw	36
   438  03E3  3425               	retlw	37
   439  03E4  3426               	retlw	38
   440  03E5  3427               	retlw	39
   441  03E6  3428               	retlw	40
   442  03E7  3429               	retlw	41
   443  03E8  342A               	retlw	42
   444  03E9  342B               	retlw	43
   445  03EA  342C               	retlw	44
   446  03EB  342D               	retlw	45
   447  03EC  342E               	retlw	46
   448  03ED  342F               	retlw	47
   449  03EE  3430               	retlw	48
   450  03EF  3431               	retlw	49
   451  03F0  3432               	retlw	50
   452  03F1  3433               	retlw	51
   453  03F2  3434               	retlw	52
   454  03F3  3435               	retlw	53
   455  03F4  3437               	retlw	55
   456  03F5  3438               	retlw	56
   457  03F6  3463               	retlw	99
   458  03F7  3464               	retlw	100
   459  03F8  3465               	retlw	101
   460  03F9  3466               	retlw	102
   461  03FA  3467               	retlw	103
   462  03FB  3468               	retlw	104
   463  03FC  3469               	retlw	105
   464  03FD  346A               	retlw	106
   465  03FE  341A               	retlw	26
   466  03FF  341D               	retlw	29
   467  0400  341E               	retlw	30
   468  0401  341F               	retlw	31
   469  0402  3420               	retlw	32
   470  0403  3421               	retlw	33
   471  0404  3422               	retlw	34
   472  0405  3423               	retlw	35
   473  0406  3424               	retlw	36
   474  0407  3425               	retlw	37
   475  0408  3426               	retlw	38
   476  0409  3427               	retlw	39
   477  040A  3428               	retlw	40
   478  040B  3429               	retlw	41
   479  040C  342A               	retlw	42
   480  040D  342B               	retlw	43
   481  040E  342C               	retlw	44
   482  040F  342D               	retlw	45
   483  0410  342E               	retlw	46
   484  0411  342F               	retlw	47
   485  0412  3430               	retlw	48
   486  0413  3431               	retlw	49
   487  0414  3432               	retlw	50
   488  0415  3433               	retlw	51
   489  0416  3434               	retlw	52
   490  0417  3435               	retlw	53
   491  0418  3463               	retlw	99
   492  0419  3464               	retlw	100
   493  041A  3465               	retlw	101
   494  041B  3466               	retlw	102
   495  041C  3467               	retlw	103
   496  041D  3468               	retlw	104
   497  041E  3469               	retlw	105
   498  041F  346A               	retlw	106
   499  0420  3437               	retlw	55
   500  0421  3438               	retlw	56
   501  0422  3474               	retlw	116
   502  0423  34FF               	retlw	255
   503  0424                     __end_ofSetup_MPU6050@MPU6050RegTable:	
   504  0424                     FindDeltaG@HG:	
   505  0424  3400               	retlw	0
   506  0425  3400               	retlw	0
   507  0426  3490               	retlw	144
   508  0427  3400               	retlw	0
   509  0428                     __end_ofFindDeltaG@HG:	
   510  0428                     FindDeltaG@LG:	
   511  0428  34A4               	retlw	164
   512  0429  34F0               	retlw	240
   513  042A  3428               	retlw	40
   514  042B  3400               	retlw	0
   515  042C                     __end_ofFindDeltaG@LG:	
   516  000B                     _INTCON	set	11
   517  000C                     _PORTA	set	12
   518  001B                     _PR2	set	27
   519  001C                     _T2CON	set	28
   520  001A                     _TMR2	set	26
   521  0018                     _CARRY	set	24
   522  005F                     _GIE	set	95
   523  005E                     _PEIE	set	94
   524  008D                     _RCIF	set	141
   525  0089                     _TMR2IF	set	137
   526  008C                     _TXIF	set	140
   527  009B                     _ADRES	set	155
   528  009D                     _ADCON0	set	157
   529  009E                     _ADCON1	set	158
   530  0095                     _OPTION_REG	set	149
   531  0099                     _OSCCON	set	153
   532  008C                     _TRISA	set	140
   533  04E9                     _ADGO	set	1257
   534  048D                     _RCIE	set	1165
   535  0489                     _TMR2IE	set	1161
   536  0461                     _TRISA1	set	1121
   537  0462                     _TRISA2	set	1122
   538  048C                     _TXIE	set	1164
   539  011D                     _APFCON	set	285
   540  0117                     _FVRCON	set	279
   541  0191                     _EEADR	set	401
   542  018C                     _ANSELA	set	396
   543  0195                     _EECON1	set	405
   544  0196                     _EECON2	set	406
   545  0193                     _EEDATA	set	403
   546  0199                     _RCREG	set	409
   547  019D                     _RCSTA	set	413
   548  019C                     _SPBRGH	set	412
   549  019B                     _SPBRGL	set	411
   550  019A                     _TXREG	set	410
   551  019E                     _TXSTA	set	414
   552  0CF8                     _ABDEN	set	3320
   553  0CFB                     _BRG16	set	3323
   554  0CF2                     _BRGH	set	3314
   555  0CEC                     _CREN	set	3308
   556  0CA8                     _RD	set	3240
   557  0CFC                     _SCKP	set	3324
   558  0CEF                     _SPEN	set	3311
   559  0CF4                     _SYNC	set	3316
   560  0CF5                     _TXEN	set	3317
   561  0CA9                     _WR	set	3241
   562  0CAA                     _WREN	set	3242
   563  0216                     _SSP1CON2	set	534
   564  0212                     _SSPADD	set	530
   565  0211                     _SSPBUF	set	529
   566  0215                     _SSPCON1	set	533
   567  0216                     _SSPCON2	set	534
   568  0214                     _SSPSTAT	set	532
   569  020C                     _WPUA	set	524
   570  10B5                     _ACKDT	set	4277
   571  10B4                     _ACKEN	set	4276
   572  10B2                     _PEN	set	4274
   573  10B3                     _RCEN	set	4275
   574  10B1                     _RSEN	set	4273
   575  10B0                     _SEN	set	4272
   576  042C                     STR_1:	
   577  042C  3449               	retlw	73	;'I'
   578  042D  3432               	retlw	50	;'2'
   579  042E  3443               	retlw	67	;'C'
   580  042F  3420               	retlw	32	;' '
   581  0430  3452               	retlw	82	;'R'
   582  0431  3465               	retlw	101	;'e'
   583  0432  3461               	retlw	97	;'a'
   584  0433  3464               	retlw	100	;'d'
   585  0434  3420               	retlw	32	;' '
   586  0435  3454               	retlw	84	;'T'
   587  0436  3465               	retlw	101	;'e'
   588  0437  3473               	retlw	115	;'s'
   589  0438  3474               	retlw	116	;'t'
   590  0439  3420               	retlw	32	;' '
   591  043A  3450               	retlw	80	;'P'
   592  043B  3461               	retlw	97	;'a'
   593  043C  3473               	retlw	115	;'s'
   594  043D  3473               	retlw	115	;'s'
   595  043E  3465               	retlw	101	;'e'
   596  043F  3464               	retlw	100	;'d'
   597  0440  342C               	retlw	44	;','
   598  0441  3420               	retlw	32	;' '
   599  0442  344D               	retlw	77	;'M'
   600  0443  3450               	retlw	80	;'P'
   601  0444  3455               	retlw	85	;'U'
   602  0445  3436               	retlw	54	;'6'
   603  0446  3430               	retlw	48	;'0'
   604  0447  3435               	retlw	53	;'5'
   605  0448  3430               	retlw	48	;'0'
   606  0449  3420               	retlw	32	;' '
   607  044A  3441               	retlw	65	;'A'
   608  044B  3464               	retlw	100	;'d'
   609  044C  3464               	retlw	100	;'d'
   610  044D  3472               	retlw	114	;'r'
   611  044E  3465               	retlw	101	;'e'
   612  044F  3473               	retlw	115	;'s'
   613  0450  3473               	retlw	115	;'s'
   614  0451  343A               	retlw	58	;':'
   615  0452  3420               	retlw	32	;' '
   616  0453  3430               	retlw	48	;'0'
   617  0454  3478               	retlw	120	;'x'
   618  0455  3436               	retlw	54	;'6'
   619  0456  3438               	retlw	56	;'8'
   620  0457  340D               	retlw	13
   621  0458  340A               	retlw	10
   622  0459  3400               	retlw	0
   623  045A                     STR_2:	
   624  045A  3445               	retlw	69	;'E'
   625  045B  3452               	retlw	82	;'R'
   626  045C  3452               	retlw	82	;'R'
   627  045D  344F               	retlw	79	;'O'
   628  045E  3452               	retlw	82	;'R'
   629  045F  343A               	retlw	58	;':'
   630  0460  3420               	retlw	32	;' '
   631  0461  3449               	retlw	73	;'I'
   632  0462  3432               	retlw	50	;'2'
   633  0463  3443               	retlw	67	;'C'
   634  0464  3420               	retlw	32	;' '
   635  0465  3452               	retlw	82	;'R'
   636  0466  3465               	retlw	101	;'e'
   637  0467  3461               	retlw	97	;'a'
   638  0468  3464               	retlw	100	;'d'
   639  0469  3420               	retlw	32	;' '
   640  046A  3454               	retlw	84	;'T'
   641  046B  3465               	retlw	101	;'e'
   642  046C  3473               	retlw	115	;'s'
   643  046D  3474               	retlw	116	;'t'
   644  046E  3420               	retlw	32	;' '
   645  046F  3446               	retlw	70	;'F'
   646  0470  3461               	retlw	97	;'a'
   647  0471  3469               	retlw	105	;'i'
   648  0472  346C               	retlw	108	;'l'
   649  0473  3465               	retlw	101	;'e'
   650  0474  3464               	retlw	100	;'d'
   651  0475  342C               	retlw	44	;','
   652  0476  3420               	retlw	32	;' '
   653  0477  3453               	retlw	83	;'S'
   654  0478  3474               	retlw	116	;'t'
   655  0479  346F               	retlw	111	;'o'
   656  047A  3470               	retlw	112	;'p'
   657  047B  3470               	retlw	112	;'p'
   658  047C  3469               	retlw	105	;'i'
   659  047D  346E               	retlw	110	;'n'
   660  047E  3467               	retlw	103	;'g'
   661  047F  340D               	retlw	13
   662  0480  340A               	retlw	10
   663  0481  3400               	retlw	0
   664  0482                     STR_3:	
   665  0482  340D               	retlw	13
   666  0483  340A               	retlw	10
   667  0484  344D               	retlw	77	;'M'
   668  0485  3450               	retlw	80	;'P'
   669  0486  3455               	retlw	85	;'U'
   670  0487  3436               	retlw	54	;'6'
   671  0488  3430               	retlw	48	;'0'
   672  0489  3435               	retlw	53	;'5'
   673  048A  3430               	retlw	48	;'0'
   674  048B  3420               	retlw	32	;' '
   675  048C  3453               	retlw	83	;'S'
   676  048D  3465               	retlw	101	;'e'
   677  048E  3474               	retlw	116	;'t'
   678  048F  3475               	retlw	117	;'u'
   679  0490  3470               	retlw	112	;'p'
   680  0491  3420               	retlw	32	;' '
   681  0492  3443               	retlw	67	;'C'
   682  0493  346F               	retlw	111	;'o'
   683  0494  346D               	retlw	109	;'m'
   684  0495  3470               	retlw	112	;'p'
   685  0496  346C               	retlw	108	;'l'
   686  0497  3465               	retlw	101	;'e'
   687  0498  3474               	retlw	116	;'t'
   688  0499  3465               	retlw	101	;'e'
   689  049A  340D               	retlw	13
   690  049B  340A               	retlw	10
   691  049C  3400               	retlw	0
   692  049D                     STR_13:	
   693  049D  3443               	retlw	67	;'C'
   694  049E  3461               	retlw	97	;'a'
   695  049F  3474               	retlw	116	;'t'
   696  04A0  3461               	retlw	97	;'a'
   697  04A1  3470               	retlw	112	;'p'
   698  04A2  3475               	retlw	117	;'u'
   699  04A3  346C               	retlw	108	;'l'
   700  04A4  3474               	retlw	116	;'t'
   701  04A5  3420               	retlw	32	;' '
   702  04A6  3456               	retlw	86	;'V'
   703  04A7  3431               	retlw	49	;'1'
   704  04A8  342E               	retlw	46	;'.'
   705  04A9  3430               	retlw	48	;'0'
   706  04AA  3431               	retlw	49	;'1'
   707  04AB  340D               	retlw	13
   708  04AC  340A               	retlw	10
   709  04AD  3400               	retlw	0
   710  04AE                     STR_17:	
   711  04AE  340D               	retlw	13
   712  04AF  340A               	retlw	10
   713  04B0  345A               	retlw	90	;'Z'
   714  04B1  3465               	retlw	101	;'e'
   715  04B2  3472               	retlw	114	;'r'
   716  04B3  346F               	retlw	111	;'o'
   717  04B4  3420               	retlw	32	;' '
   718  04B5  3447               	retlw	71	;'G'
   719  04B6  3479               	retlw	121	;'y'
   720  04B7  3472               	retlw	114	;'r'
   721  04B8  346F               	retlw	111	;'o'
   722  04B9  342E               	retlw	46	;'.'
   723  04BA  340D               	retlw	13
   724  04BB  340A               	retlw	10
   725  04BC  3400               	retlw	0
   726  04BD                     STR_6:	
   727  04BD  3420               	retlw	32	;' '
   728  04BE  3454               	retlw	84	;'T'
   729  04BF  3469               	retlw	105	;'i'
   730  04C0  346D               	retlw	109	;'m'
   731  04C1  3465               	retlw	101	;'e'
   732  04C2  3428               	retlw	40	;'('
   733  04C3  346D               	retlw	109	;'m'
   734  04C4  3473               	retlw	115	;'s'
   735  04C5  3429               	retlw	41	;')'
   736  04C6  343D               	retlw	61	;'='
   737  04C7  3400               	retlw	0
   738  04C8                     STR_19:	
   739  04C8  340D               	retlw	13
   740  04C9  340A               	retlw	10
   741  04CA  3452               	retlw	82	;'R'
   742  04CB  3445               	retlw	69	;'E'
   743  04CC  3441               	retlw	65	;'A'
   744  04CD  3444               	retlw	68	;'D'
   745  04CE  3459               	retlw	89	;'Y'
   746  04CF  340D               	retlw	13
   747  04D0  340A               	retlw	10
   748  04D1  3400               	retlw	0
   749  04D2                     STR_18:	
   750  04D2  340D               	retlw	13
   751  04D3  340A               	retlw	10
   752  04D4  3449               	retlw	73	;'I'
   753  04D5  3444               	retlw	68	;'D'
   754  04D6  344C               	retlw	76	;'L'
   755  04D7  3445               	retlw	69	;'E'
   756  04D8  340D               	retlw	13
   757  04D9  340A               	retlw	10
   758  04DA  3400               	retlw	0
   759  04DB                     STR_9:	
   760  04DB  3420               	retlw	32	;' '
   761  04DC  3447               	retlw	71	;'G'
   762  04DD  3479               	retlw	121	;'y'
   763  04DE  3472               	retlw	114	;'r'
   764  04DF  346F               	retlw	111	;'o'
   765  04E0  3420               	retlw	32	;' '
   766  04E1  3478               	retlw	120	;'x'
   767  04E2  343D               	retlw	61	;'='
   768  04E3  3400               	retlw	0
   769  04E4                     STR_10:	
   770  04E4  3420               	retlw	32	;' '
   771  04E5  344D               	retlw	77	;'M'
   772  04E6  3461               	retlw	97	;'a'
   773  04E7  3467               	retlw	103	;'g'
   774  04E8  3420               	retlw	32	;' '
   775  04E9  3478               	retlw	120	;'x'
   776  04EA  343D               	retlw	61	;'='
   777  04EB  3400               	retlw	0
   778  04EC                     STR_14:	
   779  04EC  3456               	retlw	86	;'V'
   780  04ED  3444               	retlw	68	;'D'
   781  04EE  3444               	retlw	68	;'D'
   782  04EF  3420               	retlw	32	;' '
   783  04F0  343D               	retlw	61	;'='
   784  04F1  3420               	retlw	32	;' '
   785  04F2  3400               	retlw	0
   786  04F3                     STR_7:	
   787  04F3  3420               	retlw	32	;' '
   788  04F4  3447               	retlw	71	;'G'
   789  04F5  3420               	retlw	32	;' '
   790  04F6  3478               	retlw	120	;'x'
   791  04F7  343D               	retlw	61	;'='
   792  04F8  3400               	retlw	0
   793  04F9                     STR_16:	
   794  04F9  3456               	retlw	86	;'V'
   795  04FA  340D               	retlw	13
   796  04FB  340A               	retlw	10
   797  04FC  3400               	retlw	0
   798  04FD                     STR_15:	
   799  04FD  342D               	retlw	45	;'-'
   800  04FE  342D               	retlw	45	;'-'
   801  04FF  342D               	retlw	45	;'-'
   802  0500  3400               	retlw	0
   803  0501                     STR_8:	
   804  0501  3447               	retlw	71	;'G'
   805  0502  3474               	retlw	116	;'t'
   806  0503  343D               	retlw	61	;'='
   807  0504  3400               	retlw	0
   808  0505                     STR_4:	
   809  0505  3420               	retlw	32	;' '
   810  0506  3479               	retlw	121	;'y'
   811  0507  343D               	retlw	61	;'='
   812  0508  3400               	retlw	0
   813  0509                     STR_5:	
   814  0509  3420               	retlw	32	;' '
   815  050A  347A               	retlw	122	;'z'
   816  050B  343D               	retlw	61	;'='
   817  050C  3400               	retlw	0
   818  04BA                     
   819                           ; #config settings
   820  0000                     
   821                           	psect	cinit
   822  0039                     start_initialization:	
   823  0039                     __initialization:	
   824                           
   825                           ; Clear objects allocated to COMMON
   826  0039  01FA               	clrf	__pbssCOMMON& (0+127)
   827  003A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   828                           
   829                           ; Clear objects allocated to BANK0
   830  003B  01E5               	clrf	__pbssBANK0& (0+127)
   831  003C  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   832  003D  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   833  003E  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   834  003F  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   835                           
   836                           ; Clear objects allocated to BANK1
   837  0040  30A0               	movlw	low __pbssBANK1
   838  0041  0084               	movwf	4
   839  0042  3000               	movlw	high __pbssBANK1
   840  0043  0085               	movwf	5
   841  0044  304E               	movlw	78
   842  0045  3188  204C  3180   	fcall	clear_ram0
   843                           
   844                           ; Initialize objects allocated to BANK0
   845  0048  3180  2003         	fcall	__pidataBANK0	;fetch initializer
   846  004A  00EA               	movwf	__pdataBANK0& (0+127)
   847  004B                     end_of_initialization:	
   848                           ;End of C runtime variable initialization code
   849                           
   850  004B                     __end_of__initialization:	
   851  004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   852  004C  0020               	movlb	0
   853  004D  3180  284F         	ljmp	_main	;jump to C main() function
   854                           
   855                           	psect	bssCOMMON
   856  007A                     __pbssCOMMON:	
   857  007A                     _Timerms:	
   858  007A                     	ds	2
   859                           
   860                           	psect	bssBANK0
   861  0065                     __pbssBANK0:	
   862  0065                     _AccGyroCount:	
   863  0065                     	ds	2
   864  0067                     _InFiFo:	
   865  0067                     	ds	1
   866  0068                     _NewMode:	
   867  0068                     	ds	1
   868  0069                     _OutFiFo:	
   869  0069                     	ds	1
   870                           
   871                           	psect	dataBANK0
   872  006A                     __pdataBANK0:	
   873  006A                     _Mode:	
   874  006A                     	ds	1
   875                           
   876                           	psect	bssBANK1
   877  00A0                     __pbssBANK1:	
   878  00A0                     _SerialBuffer:	
   879  00A0                     	ds	32
   880  00C0                     _CurrentData:	
   881  00C0                     	ds	26
   882  00DA                     _AccGyroX:	
   883  00DA                     	ds	4
   884  00DE                     _AccGyroY:	
   885  00DE                     	ds	4
   886  00E2                     _AccGyroZ:	
   887  00E2                     	ds	4
   888  00E6                     _TimerCrash:	
   889  00E6                     	ds	2
   890  00E8                     _Setting:	
   891  00E8                     	ds	6
   892                           
   893                           	psect	clrtext
   894  084C                     clear_ram0:	
   895                           ;	Called with FSR0 containing the base address, and
   896                           ;	WREG with the size to clear
   897                           
   898  084C  0064               	clrwdt	;clear the watchdog before getting into this loop
   899  084D                     clrloop0:	
   900  084D  0180               	clrf	0	;clear RAM location pointed to by FSR
   901  084E  3101               	addfsr 0,1
   902  084F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   903  0850  284D               	goto	clrloop0	;have we reached the end yet?
   904  0851  3400               	retlw	0	;all done for this memory range, return
   905                           
   906                           	psect	cstackCOMMON
   907  0070                     __pcstackCOMMON:	
   908  0070                     ?_Setup_HMC5883L:	
   909  0070                     ?_Get_HMC5883L_Values:	
   910                           ; 0 bytes @ 0x0
   911                           
   912  0070                     ?_i2c_Init:	
   913                           ; 0 bytes @ 0x0
   914                           
   915  0070                     ?_i2c_Wait:	
   916                           ; 0 bytes @ 0x0
   917                           
   918  0070                     ?_i2c_Start:	
   919                           ; 0 bytes @ 0x0
   920                           
   921  0070                     ?_i2c_Restart:	
   922                           ; 0 bytes @ 0x0
   923                           
   924  0070                     ?_i2c_Stop:	
   925                           ; 0 bytes @ 0x0
   926                           
   927  0070                     ?_i2c_Write:	
   928                           ; 0 bytes @ 0x0
   929                           
   930  0070                     ?_Setup_MPU6050:	
   931                           ; 0 bytes @ 0x0
   932                           
   933  0070                     ?_Get_Accel_Values:	
   934                           ; 0 bytes @ 0x0
   935                           
   936  0070                     ?_LoadSetting:	
   937                           ; 0 bytes @ 0x0
   938                           
   939  0070                     ?_SaveSetting:	
   940                           ; 0 bytes @ 0x0
   941                           
   942  0070                     ?_Init1msTimer:	
   943                           ; 0 bytes @ 0x0
   944                           
   945  0070                     ?_isr:	
   946                           ; 0 bytes @ 0x0
   947                           
   948  0070                     ??_isr:	
   949                           ; 0 bytes @ 0x0
   950                           
   951  0070                     ?_putch:	
   952                           ; 0 bytes @ 0x0
   953                           
   954  0070                     ?_CalculateSumOfSquares:	
   955                           ; 0 bytes @ 0x0
   956                           
   957  0070                     ?_DisplayInfo:	
   958                           ; 0 bytes @ 0x0
   959                           
   960  0070                     ?_putHexNibble:	
   961                           ; 0 bytes @ 0x0
   962                           
   963  0070                     ?_DisplayData:	
   964                           ; 0 bytes @ 0x0
   965                           
   966  0070                     ?_printVersion:	
   967                           ; 0 bytes @ 0x0
   968                           
   969  0070                     ?_printVoltage:	
   970                           ; 0 bytes @ 0x0
   971                           
   972  0070                     ?_eeprom_read:	
   973                           ; 0 bytes @ 0x0
   974                           
   975  0070                     ?_i2c_Read:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_GotInt_MPU6050:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_FindDeltaG:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_MPU6050_Test_I2C:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_main:	
   988                           ; 2 bytes @ 0x0
   989                           
   990                           
   991                           ; 2 bytes @ 0x0
   992  0070                     	ds	2
   993  0072                     ??_eeprom_read:	
   994  0072                     ?_eeprom_write:	
   995                           ; 0 bytes @ 0x2
   996                           
   997  0072                     ??_i2c_Init:	
   998                           ; 0 bytes @ 0x2
   999                           
  1000  0072                     ??_i2c_Wait:	
  1001                           ; 0 bytes @ 0x2
  1002                           
  1003  0072                     ??_i2c_Start:	
  1004                           ; 0 bytes @ 0x2
  1005                           
  1006  0072                     ??_i2c_Restart:	
  1007                           ; 0 bytes @ 0x2
  1008                           
  1009  0072                     ??_i2c_Stop:	
  1010                           ; 0 bytes @ 0x2
  1011                           
  1012  0072                     ??_i2c_Write:	
  1013                           ; 0 bytes @ 0x2
  1014                           
  1015  0072                     ?_i2c_Address:	
  1016                           ; 0 bytes @ 0x2
  1017                           
  1018  0072                     ??_i2c_Read:	
  1019                           ; 0 bytes @ 0x2
  1020                           
  1021  0072                     ??_Init1msTimer:	
  1022                           ; 0 bytes @ 0x2
  1023                           
  1024  0072                     ??_putch:	
  1025                           ; 0 bytes @ 0x2
  1026                           
  1027  0072                     ??_FindDeltaG:	
  1028                           ; 0 bytes @ 0x2
  1029                           
  1030  0072                     ?_GetGyroWithOffset:	
  1031                           ; 0 bytes @ 0x2
  1032                           
  1033  0072                     ?_isqrt:	
  1034                           ; 2 bytes @ 0x2
  1035                           
  1036  0072                     ?___lwdiv:	
  1037                           ; 2 bytes @ 0x2
  1038                           
  1039  0072                     ?___lwmod:	
  1040                           ; 2 bytes @ 0x2
  1041                           
  1042  0072                     ?___lmul:	
  1043                           ; 2 bytes @ 0x2
  1044                           
  1045  0072                     ?___aldiv:	
  1046                           ; 4 bytes @ 0x2
  1047                           
  1048  0072                     ?___lldiv:	
  1049                           ; 4 bytes @ 0x2
  1050                           
  1051  0072                     ?___llmod:	
  1052                           ; 4 bytes @ 0x2
  1053                           
  1054  0072                     i2c_Write@data:	
  1055                           ; 4 bytes @ 0x2
  1056                           
  1057  0072                     i2c_Address@mode:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060  0072                     eeprom_write@value:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063  0072                     GetGyroWithOffset@value:	
  1064                           ; 1 bytes @ 0x2
  1065                           
  1066  0072                     ___lwdiv@divisor:	
  1067                           ; 2 bytes @ 0x2
  1068                           
  1069  0072                     ___lwmod@divisor:	
  1070                           ; 2 bytes @ 0x2
  1071                           
  1072  0072                     isqrt@val:	
  1073                           ; 2 bytes @ 0x2
  1074                           
  1075  0072                     ___lmul@multiplier:	
  1076                           ; 4 bytes @ 0x2
  1077                           
  1078  0072                     ___aldiv@divisor:	
  1079                           ; 4 bytes @ 0x2
  1080                           
  1081  0072                     ___lldiv@divisor:	
  1082                           ; 4 bytes @ 0x2
  1083                           
  1084  0072                     ___llmod@divisor:	
  1085                           ; 4 bytes @ 0x2
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x2
  1089  0072                     	ds	1
  1090  0073                     ??_eeprom_write:	
  1091  0073                     ??_i2c_Address:	
  1092                           ; 0 bytes @ 0x3
  1093                           
  1094  0073                     i2c_Read@ack:	
  1095                           ; 0 bytes @ 0x3
  1096                           
  1097  0073                     putch@char_out:	
  1098                           ; 1 bytes @ 0x3
  1099                           
  1100                           
  1101                           ; 1 bytes @ 0x3
  1102  0073                     	ds	1
  1103  0074                     i2c_Address@address:	
  1104  0074                     i2c_Read@i2cReadData:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     putch@temp:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     GetGyroWithOffset@Goffset:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     ___lwdiv@dividend:	
  1114                           ; 2 bytes @ 0x4
  1115                           
  1116  0074                     ___lwmod@dividend:	
  1117                           ; 2 bytes @ 0x4
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x4
  1121  0074                     	ds	1
  1122  0075                     ?_cputs:	
  1123  0075                     ??_putHexNibble:	
  1124                           ; 0 bytes @ 0x5
  1125                           
  1126  0075                     i2c_Address@l_address:	
  1127                           ; 0 bytes @ 0x5
  1128                           
  1129  0075                     eeprom_read@addr:	
  1130                           ; 1 bytes @ 0x5
  1131                           
  1132  0075                     eeprom_write@addr:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135  0075                     cputs@s:	
  1136                           ; 1 bytes @ 0x5
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x5
  1140  0075                     	ds	1
  1141  0076                     ?_LDByteWriteI2C:	
  1142  0076                     ?_LDByteReadI2C:	
  1143                           ; 0 bytes @ 0x6
  1144                           
  1145  0076                     ??_LoadSetting:	
  1146                           ; 0 bytes @ 0x6
  1147                           
  1148  0076                     ??_SaveSetting:	
  1149                           ; 0 bytes @ 0x6
  1150                           
  1151  0076                     ??_GetGyroWithOffset:	
  1152                           ; 0 bytes @ 0x6
  1153                           
  1154  0076                     ??___lwdiv:	
  1155                           ; 0 bytes @ 0x6
  1156                           
  1157  0076                     ??___lwmod:	
  1158                           ; 0 bytes @ 0x6
  1159                           
  1160  0076                     LDByteWriteI2C@LowAdd:	
  1161                           ; 0 bytes @ 0x6
  1162                           
  1163  0076                     LDByteReadI2C@Address:	
  1164                           ; 1 bytes @ 0x6
  1165                           
  1166  0076                     putHexNibble@value:	
  1167                           ; 1 bytes @ 0x6
  1168                           
  1169  0076                     ___lmul@multiplicand:	
  1170                           ; 1 bytes @ 0x6
  1171                           
  1172  0076                     ___aldiv@dividend:	
  1173                           ; 4 bytes @ 0x6
  1174                           
  1175  0076                     ___lldiv@dividend:	
  1176                           ; 4 bytes @ 0x6
  1177                           
  1178  0076                     ___llmod@dividend:	
  1179                           ; 4 bytes @ 0x6
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x6
  1183  0076                     	ds	1
  1184  0077                     ??_cputs:	
  1185  0077                     LDByteWriteI2C@data:	
  1186                           ; 0 bytes @ 0x7
  1187                           
  1188  0077                     LDByteReadI2C@Data:	
  1189                           ; 1 bytes @ 0x7
  1190                           
  1191  0077                     LoadSetting@pointer:	
  1192                           ; 1 bytes @ 0x7
  1193                           
  1194  0077                     SaveSetting@pointer:	
  1195                           ; 1 bytes @ 0x7
  1196                           
  1197  0077                     ___lwdiv@counter:	
  1198                           ; 1 bytes @ 0x7
  1199                           
  1200  0077                     ___lwmod@counter:	
  1201                           ; 1 bytes @ 0x7
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0x7
  1205  0077                     	ds	1
  1206  0078                     ??_Setup_HMC5883L:	
  1207  0078                     ??_LDByteWriteI2C:	
  1208                           ; 0 bytes @ 0x8
  1209                           
  1210  0078                     ??_Setup_MPU6050:	
  1211                           ; 0 bytes @ 0x8
  1212                           
  1213  0078                     ??_printVersion:	
  1214                           ; 0 bytes @ 0x8
  1215                           
  1216  0078                     LDByteReadI2C@Length:	
  1217                           ; 0 bytes @ 0x8
  1218                           
  1219  0078                     LoadSetting@idx:	
  1220                           ; 1 bytes @ 0x8
  1221                           
  1222  0078                     SaveSetting@idx:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225  0078                     GetGyroWithOffset@_temp:	
  1226                           ; 1 bytes @ 0x8
  1227                           
  1228  0078                     ___lwdiv@quotient:	
  1229                           ; 2 bytes @ 0x8
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0x8
  1233  0078                     	ds	1
  1234  0079                     ??_LDByteReadI2C:	
  1235                           
  1236                           ; 0 bytes @ 0x9
  1237  0079                     	ds	1
  1238  007A                     ??_printValue:	
  1239  007A                     ??_printCentiValue:	
  1240                           ; 0 bytes @ 0xA
  1241                           
  1242  007A                     ??_printDeciValue:	
  1243                           ; 0 bytes @ 0xA
  1244                           
  1245  007A                     ??_printGForce:	
  1246                           ; 0 bytes @ 0xA
  1247                           
  1248  007A                     ??_printGyro:	
  1249                           ; 0 bytes @ 0xA
  1250                           
  1251  007A                     ??_printUShort:	
  1252                           ; 0 bytes @ 0xA
  1253                           
  1254  007A                     ??_DisplayInfo:	
  1255                           ; 0 bytes @ 0xA
  1256                           
  1257  007A                     ??_DisplayData:	
  1258                           ; 0 bytes @ 0xA
  1259                           
  1260  007A                     ??___lmul:	
  1261                           ; 0 bytes @ 0xA
  1262                           
  1263                           
  1264                           	psect	cstackBANK0
  1265  0020                     __pcstackBANK0:	
  1266                           ; 0 bytes @ 0xA
  1267                           
  1268  0020                     ??_isqrt:	
  1269  0020                     ?_putHex:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0020                     ??___aldiv:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0020                     ??___lldiv:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0020                     ??___llmod:	
  1279                           ; 0 bytes @ 0x0
  1280                           
  1281  0020                     ?_utoa:	
  1282                           ; 0 bytes @ 0x0
  1283                           
  1284  0020                     LDByteReadI2C@i2cSlaveAddress:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0020                     LDByteWriteI2C@ErrorCode:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0020                     putHex@value:	
  1291                           ; 2 bytes @ 0x0
  1292                           
  1293  0020                     utoa@val:	
  1294                           ; 2 bytes @ 0x0
  1295                           
  1296  0020                     ___lmul@product:	
  1297                           ; 2 bytes @ 0x0
  1298                           
  1299                           
  1300                           ; 4 bytes @ 0x0
  1301  0020                     	ds	1
  1302  0021                     ??_MPU6050_Test_I2C:	
  1303  0021                     ??_Get_Accel_Values:	
  1304                           ; 0 bytes @ 0x1
  1305                           
  1306  0021                     ??_GotInt_MPU6050:	
  1307                           ; 0 bytes @ 0x1
  1308                           
  1309  0021                     ___aldiv@counter:	
  1310                           ; 0 bytes @ 0x1
  1311                           
  1312  0021                     ___llmod@counter:	
  1313                           ; 1 bytes @ 0x1
  1314                           
  1315  0021                     ___lldiv@quotient:	
  1316                           ; 1 bytes @ 0x1
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x1
  1320  0021                     	ds	1
  1321  0022                     ??_putHex:	
  1322  0022                     LDByteWriteI2C@i2cSlaveAddress:	
  1323                           ; 0 bytes @ 0x2
  1324                           
  1325  0022                     ___aldiv@sign:	
  1326                           ; 1 bytes @ 0x2
  1327                           
  1328  0022                     utoa@base:	
  1329                           ; 1 bytes @ 0x2
  1330                           
  1331                           
  1332                           ; 2 bytes @ 0x2
  1333  0022                     	ds	1
  1334  0023                     ??_Get_HMC5883L_Values:	
  1335  0023                     MPU6050_Test_I2C@Data:	
  1336                           ; 0 bytes @ 0x3
  1337                           
  1338  0023                     GotInt_MPU6050@uc_temp:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341  0023                     Setup_MPU6050@loop:	
  1342                           ; 1 bytes @ 0x3
  1343                           
  1344  0023                     ___aldiv@quotient:	
  1345                           ; 2 bytes @ 0x3
  1346                           
  1347                           
  1348                           ; 4 bytes @ 0x3
  1349  0023                     	ds	1
  1350  0024                     ??_utoa:	
  1351  0024                     ??_CalculateSumOfSquares:	
  1352                           ; 0 bytes @ 0x4
  1353                           
  1354                           
  1355                           ; 0 bytes @ 0x4
  1356  0024                     	ds	1
  1357  0025                     Setup_MPU6050@TheReg:	
  1358  0025                     ___lldiv@counter:	
  1359                           ; 1 bytes @ 0x5
  1360                           
  1361  0025                     utoa@v:	
  1362                           ; 1 bytes @ 0x5
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0x5
  1366  0025                     	ds	1
  1367  0026                     ?_ultoa:	
  1368  0026                     ultoa@val:	
  1369                           ; 1 bytes @ 0x6
  1370                           
  1371  0026                     Get_Accel_Values@cval:	
  1372                           ; 4 bytes @ 0x6
  1373                           
  1374                           
  1375                           ; 14 bytes @ 0x6
  1376  0026                     	ds	1
  1377  0027                     utoa@c:	
  1378                           
  1379                           ; 1 bytes @ 0x7
  1380  0027                     	ds	1
  1381  0028                     utoa@buf:	
  1382  0028                     Get_HMC5883L_Values@cval:	
  1383                           ; 1 bytes @ 0x8
  1384                           
  1385                           
  1386                           ; 6 bytes @ 0x8
  1387  0028                     	ds	1
  1388  0029                     ?_printUShort:	
  1389  0029                     printUShort@value:	
  1390                           ; 0 bytes @ 0x9
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x9
  1394  0029                     	ds	1
  1395  002A                     ultoa@base:	
  1396                           
  1397                           ; 2 bytes @ 0xA
  1398  002A                     	ds	1
  1399  002B                     printUShort@buffer:	
  1400                           
  1401                           ; 16 bytes @ 0xB
  1402  002B                     	ds	1
  1403  002C                     ??_ultoa:	
  1404  002C                     _CalculateSumOfSquares$290:	
  1405                           ; 0 bytes @ 0xC
  1406                           
  1407  002C                     isqrt@temp:	
  1408                           ; 2 bytes @ 0xC
  1409                           
  1410                           
  1411                           ; 4 bytes @ 0xC
  1412  002C                     	ds	1
  1413  002D                     ultoa@v:	
  1414                           
  1415                           ; 4 bytes @ 0xD
  1416  002D                     	ds	1
  1417  002E                     _CalculateSumOfSquares$291:	
  1418                           
  1419                           ; 2 bytes @ 0xE
  1420  002E                     	ds	2
  1421  0030                     _CalculateSumOfSquares$292:	
  1422  0030                     isqrt@bshft:	
  1423                           ; 2 bytes @ 0x10
  1424                           
  1425                           
  1426                           ; 4 bytes @ 0x10
  1427  0030                     	ds	1
  1428  0031                     ultoa@c:	
  1429                           
  1430                           ; 1 bytes @ 0x11
  1431  0031                     	ds	1
  1432  0032                     ultoa@buf:	
  1433  0032                     CalculateSumOfSquares@GxSquare:	
  1434                           ; 1 bytes @ 0x12
  1435                           
  1436                           
  1437                           ; 4 bytes @ 0x12
  1438  0032                     	ds	1
  1439  0033                     ?_ltoa:	
  1440  0033                     ltoa@val:	
  1441                           ; 1 bytes @ 0x13
  1442                           
  1443                           
  1444                           ; 4 bytes @ 0x13
  1445  0033                     	ds	1
  1446  0034                     isqrt@g:	
  1447                           
  1448                           ; 4 bytes @ 0x14
  1449  0034                     	ds	2
  1450  0036                     CalculateSumOfSquares@GySquare:	
  1451                           
  1452                           ; 4 bytes @ 0x16
  1453  0036                     	ds	1
  1454  0037                     ltoa@base:	
  1455                           
  1456                           ; 2 bytes @ 0x17
  1457  0037                     	ds	1
  1458  0038                     isqrt@b:	
  1459                           
  1460                           ; 4 bytes @ 0x18
  1461  0038                     	ds	1
  1462  0039                     ??_ltoa:	
  1463                           
  1464                           ; 0 bytes @ 0x19
  1465  0039                     	ds	1
  1466  003A                     ltoa@cp:	
  1467  003A                     CalculateSumOfSquares@GzSquare:	
  1468                           ; 1 bytes @ 0x1A
  1469                           
  1470                           
  1471                           ; 4 bytes @ 0x1A
  1472  003A                     	ds	1
  1473  003B                     ltoa@buf:	
  1474                           
  1475                           ; 1 bytes @ 0x1B
  1476  003B                     	ds	1
  1477  003C                     ?_printValue:	
  1478  003C                     ?_printCentiValue:	
  1479                           ; 0 bytes @ 0x1C
  1480                           
  1481  003C                     ?_printDeciValue:	
  1482                           ; 0 bytes @ 0x1C
  1483                           
  1484  003C                     printValue@value:	
  1485                           ; 0 bytes @ 0x1C
  1486                           
  1487  003C                     printCentiValue@value:	
  1488                           ; 4 bytes @ 0x1C
  1489                           
  1490  003C                     printDeciValue@value:	
  1491                           ; 4 bytes @ 0x1C
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0x1C
  1495  003C                     	ds	4
  1496  0040                     printValue@buffer:	
  1497  0040                     printCentiValue@buffer:	
  1498                           ; 16 bytes @ 0x20
  1499                           
  1500  0040                     printDeciValue@buffer:	
  1501                           ; 16 bytes @ 0x20
  1502                           
  1503                           
  1504                           ; 16 bytes @ 0x20
  1505  0040                     	ds	16
  1506  0050                     printCentiValue@T:	
  1507  0050                     printDeciValue@T:	
  1508                           ; 2 bytes @ 0x30
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x30
  1512  0050                     	ds	2
  1513  0052                     printCentiValue@_lvalue:	
  1514  0052                     printDeciValue@_lvalue:	
  1515                           ; 4 bytes @ 0x32
  1516                           
  1517                           
  1518                           ; 4 bytes @ 0x32
  1519  0052                     	ds	4
  1520  0056                     ?_printGForce:	
  1521  0056                     ?_printGyro:	
  1522                           ; 0 bytes @ 0x36
  1523                           
  1524  0056                     ??_printVoltage:	
  1525                           ; 0 bytes @ 0x36
  1526                           
  1527  0056                     printGForce@RawG:	
  1528                           ; 0 bytes @ 0x36
  1529                           
  1530  0056                     printGyro@RawG:	
  1531                           ; 4 bytes @ 0x36
  1532                           
  1533                           
  1534                           ; 4 bytes @ 0x36
  1535  0056                     	ds	3
  1536  0059                     printVoltage@VDDValue:	
  1537                           
  1538                           ; 4 bytes @ 0x39
  1539  0059                     	ds	1
  1540  005A                     DisplayInfo@Gt:	
  1541                           
  1542                           ; 2 bytes @ 0x3A
  1543  005A                     	ds	2
  1544  005C                     DisplayInfo@cy:	
  1545                           
  1546                           ; 2 bytes @ 0x3C
  1547  005C                     	ds	1
  1548  005D                     printVoltage@value:	
  1549                           
  1550                           ; 2 bytes @ 0x3D
  1551  005D                     	ds	1
  1552  005E                     DisplayInfo@cz:	
  1553                           
  1554                           ; 2 bytes @ 0x3E
  1555  005E                     	ds	2
  1556  0060                     ??_main:	
  1557                           
  1558                           ; 0 bytes @ 0x40
  1559  0060                     	ds	4
  1560  0064                     main@UserKey:	
  1561                           
  1562                           ; 1 bytes @ 0x44
  1563  0064                     	ds	1
  1564                           
  1565                           	psect	maintext
  1566  004F                     __pmaintext:	
  1567 ;;
  1568 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1569 ;;
  1570 ;; *************** function _main *****************
  1571 ;; Defined at:
  1572 ;;		line 614 in file "blueGyro.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  m_Timer         2    0        unsigned short 
  1577 ;;  UserKey         1   68[BANK0 ] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2  346[None  ] int 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : B1F/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1587 ;;      Params:         0       0       0       0
  1588 ;;      Locals:         0       1       0       0
  1589 ;;      Temps:          0       4       0       0
  1590 ;;      Totals:         0       5       0       0
  1591 ;;Total ram usage:        5 bytes
  1592 ;; Hardware stack levels required when called:    7
  1593 ;; This function calls:
  1594 ;;		_CalculateSumOfSquares
  1595 ;;		_DisplayData
  1596 ;;		_DisplayInfo
  1597 ;;		_FindDeltaG
  1598 ;;		_Get_Accel_Values
  1599 ;;		_Get_HMC5883L_Values
  1600 ;;		_GotInt_MPU6050
  1601 ;;		_Init1msTimer
  1602 ;;		_LoadSetting
  1603 ;;		_MPU6050_Test_I2C
  1604 ;;		_SaveSetting
  1605 ;;		_Setup_HMC5883L
  1606 ;;		_Setup_MPU6050
  1607 ;;		___aldiv
  1608 ;;		_cputs
  1609 ;;		_i2c_Init
  1610 ;;		_printVersion
  1611 ;;		_printVoltage
  1612 ;; This function is called by:
  1613 ;;		Startup code after reset
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _main
  1619  004F                     _main:	
  1620                           
  1621                           ;blueGyro.c: 615: unsigned short m_Timer;
  1622                           ;blueGyro.c: 616: char UserKey;
  1623                           ;blueGyro.c: 618: OSCCON = 0b11110000;
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1627  004F  30F0               	movlw	240
  1628  0050  0021               	movlb	1	; select bank1
  1629  0051  0099               	movwf	25	;volatile
  1630                           
  1631                           ;blueGyro.c: 619: OPTION_REG = 0b00000011;
  1632  0052  3003               	movlw	3
  1633  0053  0095               	movwf	21	;volatile
  1634                           
  1635                           ;blueGyro.c: 620: ANSELA = 0b00000;
  1636  0054  0023               	movlb	3	; select bank3
  1637  0055  018C               	clrf	12	;volatile
  1638                           
  1639                           ;blueGyro.c: 621: PORTA = 0b00100000;
  1640  0056  3020               	movlw	32
  1641  0057  0020               	movlb	0	; select bank0
  1642  0058  008C               	movwf	12	;volatile
  1643                           
  1644                           ;blueGyro.c: 622: WPUA = 0b00111111;
  1645  0059  303F               	movlw	63
  1646  005A  0024               	movlb	4	; select bank4
  1647  005B  008C               	movwf	12	;volatile
  1648                           
  1649                           ;blueGyro.c: 623: TRISA = 0b00011111;
  1650  005C  301F               	movlw	31
  1651  005D  0021               	movlb	1	; select bank1
  1652  005E  008C               	movwf	12	;volatile
  1653                           
  1654                           ;blueGyro.c: 625: INTCON = 0b00000000;
  1655  005F  018B               	clrf	11	;volatile
  1656                           
  1657                           ;blueGyro.c: 629: ADCON0=0;
  1658  0060  019D               	clrf	29	;volatile
  1659                           
  1660                           ;blueGyro.c: 630: FVRCON=0;
  1661  0061  0022               	movlb	2	; select bank2
  1662  0062  0197               	clrf	23	;volatile
  1663                           
  1664                           ;blueGyro.c: 634: APFCON = 0b10000100;
  1665  0063  3084               	movlw	132
  1666  0064  009D               	movwf	29	;volatile
  1667                           
  1668                           ;blueGyro.c: 635: TXSTA = 0b10000010;
  1669  0065  3082               	movlw	130
  1670  0066  0023               	movlb	3	; select bank3
  1671  0067  009E               	movwf	30	;volatile
  1672                           
  1673                           ;blueGyro.c: 636: RCSTA = 0;
  1674  0068  019D               	clrf	29	;volatile
  1675                           
  1676                           ;blueGyro.c: 638: BRGH=1;
  1677  0069  151E               	bsf	30,2	;volatile
  1678                           
  1679                           ;blueGyro.c: 640: BRG16 = 0;
  1680  006A  119F               	bcf	31,3	;volatile
  1681                           
  1682                           ;blueGyro.c: 641: SYNC =0;
  1683  006B  121E               	bcf	30,4	;volatile
  1684                           
  1685                           ;blueGyro.c: 643: SPBRGL = 16;
  1686  006C  3010               	movlw	16
  1687  006D  009B               	movwf	27	;volatile
  1688                           
  1689                           ;blueGyro.c: 645: SPBRGH =0;
  1690  006E  019C               	clrf	28	;volatile
  1691                           
  1692                           ;blueGyro.c: 646: TXEN =1;
  1693  006F  169E               	bsf	30,5	;volatile
  1694                           
  1695                           ;blueGyro.c: 647: SPEN = 1;
  1696  0070  179D               	bsf	29,7	;volatile
  1697                           
  1698                           ;blueGyro.c: 648: CREN = 1;
  1699  0071  161D               	bsf	29,4	;volatile
  1700                           
  1701                           ;blueGyro.c: 649: RCIE =0;
  1702  0072  0021               	movlb	1	; select bank1
  1703  0073  1291               	bcf	17,5	;volatile
  1704                           
  1705                           ;blueGyro.c: 650: TXIE =0;
  1706  0074  1211               	bcf	17,4	;volatile
  1707                           
  1708                           ;blueGyro.c: 651: RCIF =0;
  1709  0075  0020               	movlb	0	; select bank0
  1710  0076  1291               	bcf	17,5	;volatile
  1711                           
  1712                           ;blueGyro.c: 652: TXIF = 0;
  1713  0077  1211               	bcf	17,4	;volatile
  1714                           
  1715                           ;blueGyro.c: 653: SCKP = 0;
  1716  0078  0023               	movlb	3	; select bank3
  1717  0079  121F               	bcf	31,4	;volatile
  1718                           
  1719                           ;blueGyro.c: 654: ABDEN = 0;
  1720  007A  101F               	bcf	31,0	;volatile
  1721                           
  1722                           ;blueGyro.c: 656: InFiFo=0;
  1723  007B  0020               	movlb	0	; select bank0
  1724  007C  01E7               	clrf	_InFiFo	;volatile
  1725                           
  1726                           ;blueGyro.c: 657: OutFiFo=0;
  1727  007D  01E9               	clrf	_OutFiFo	;volatile
  1728                           
  1729                           ;blueGyro.c: 658: GIE = 1;
  1730  007E  178B               	bsf	11,7	;volatile
  1731                           
  1732                           ;blueGyro.c: 659: PEIE =1;
  1733  007F  170B               	bsf	11,6	;volatile
  1734                           
  1735                           ;blueGyro.c: 664: LoadSetting();
  1736  0080  3189  215B  3180   	fcall	_LoadSetting
  1737                           
  1738                           ;blueGyro.c: 667: Init1msTimer() ;
  1739  0083  3188  2083  3180   	fcall	_Init1msTimer
  1740                           
  1741                           ;blueGyro.c: 672: _delay((unsigned long)((100)*(32000000/4000.0)));
  1742  0086  3005               	movlw	5
  1743  0087  0020               	movlb	0	; select bank0
  1744  0088  00E2               	movwf	??_main+2
  1745  0089  300F               	movlw	15
  1746  008A  00E1               	movwf	??_main+1
  1747  008B  30F4               	movlw	244
  1748  008C  00E0               	movwf	??_main
  1749  008D                     u3497:	
  1750  008D  0BE0               	decfsz	??_main,f
  1751  008E  288D               	goto	u3497
  1752  008F  0BE1               	decfsz	??_main+1,f
  1753  0090  288D               	goto	u3497
  1754  0091  0BE2               	decfsz	??_main+2,f
  1755  0092  288D               	goto	u3497
  1756                           
  1757                           ;blueGyro.c: 673: printVersion();
  1758  0093  3188  2059  3180   	fcall	_printVersion
  1759                           
  1760                           ;blueGyro.c: 674: printVoltage();
  1761  0096  318D  2533  3180   	fcall	_printVoltage
  1762                           
  1763                           ;blueGyro.c: 677: _delay((unsigned long)((5000)*(32000000/4000.0)));
  1764  0099  30CB               	movlw	203
  1765  009A  0020               	movlb	0	; select bank0
  1766  009B  00E2               	movwf	??_main+2
  1767  009C  30ED               	movlw	237
  1768  009D  00E1               	movwf	??_main+1
  1769  009E  304C               	movlw	76
  1770  009F  00E0               	movwf	??_main
  1771  00A0                     u3507:	
  1772  00A0  0BE0               	decfsz	??_main,f
  1773  00A1  28A0               	goto	u3507
  1774  00A2  0BE1               	decfsz	??_main+1,f
  1775  00A3  28A0               	goto	u3507
  1776  00A4  0BE2               	decfsz	??_main+2,f
  1777  00A5  28A0               	goto	u3507
  1778  00A6  3200               	nop2
  1779                           
  1780                           ;blueGyro.c: 678: i2c_Init();
  1781  00A7  3188  2068  3180   	fcall	_i2c_Init
  1782                           
  1783                           ;blueGyro.c: 679: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1784  00AA  3029               	movlw	41
  1785  00AB  0020               	movlb	0	; select bank0
  1786  00AC  00E2               	movwf	??_main+2
  1787  00AD  3096               	movlw	150
  1788  00AE  00E1               	movwf	??_main+1
  1789  00AF  30A6               	movlw	166
  1790  00B0  00E0               	movwf	??_main
  1791  00B1                     u3517:	
  1792  00B1  0BE0               	decfsz	??_main,f
  1793  00B2  28B1               	goto	u3517
  1794  00B3  0BE1               	decfsz	??_main+1,f
  1795  00B4  28B1               	goto	u3517
  1796  00B5  0BE2               	decfsz	??_main+2,f
  1797  00B6  28B1               	goto	u3517
  1798                           
  1799                           ;blueGyro.c: 680: MPU6050_Test_I2C();
  1800  00B7  3189  21B2  3180   	fcall	_MPU6050_Test_I2C
  1801                           
  1802                           ;blueGyro.c: 681: Setup_MPU6050();
  1803  00BA  318D  2599  3180   	fcall	_Setup_MPU6050
  1804                           
  1805                           ;blueGyro.c: 684: Setup_HMC5883L();
  1806  00BD  3188  20CD  3180   	fcall	_Setup_HMC5883L
  1807                           
  1808                           ;blueGyro.c: 687: Mode= RCREG;
  1809  00C0  0023               	movlb	3	; select bank3
  1810  00C1  0819               	movf	25,w	;volatile
  1811  00C2  0020               	movlb	0	; select bank0
  1812  00C3  00E0               	movwf	??_main
  1813  00C4  0860               	movf	??_main,w
  1814  00C5  00EA               	movwf	_Mode	;volatile
  1815                           
  1816                           ;blueGyro.c: 688: Mode= 255;
  1817  00C6  30FF               	movlw	255
  1818  00C7  00E0               	movwf	??_main
  1819  00C8  0860               	movf	??_main,w
  1820  00C9  00EA               	movwf	_Mode	;volatile
  1821  00CA                     l3590:	
  1822                           ;blueGyro.c: 690: while(1)
  1823                           
  1824                           
  1825                           ;blueGyro.c: 691: {
  1826                           ;blueGyro.c: 694: if(RCIF)
  1827  00CA  0020               	movlb	0	; select bank0
  1828  00CB  1E91               	btfss	17,5	;volatile
  1829  00CC  293E               	goto	l3638
  1830                           
  1831                           ;blueGyro.c: 695: {
  1832                           ;blueGyro.c: 696: UserKey = RCREG;
  1833  00CD  0023               	movlb	3	; select bank3
  1834  00CE  0819               	movf	25,w	;volatile
  1835  00CF  0020               	movlb	0	; select bank0
  1836  00D0  00E0               	movwf	??_main
  1837  00D1  0860               	movf	??_main,w
  1838  00D2  00E4               	movwf	main@UserKey
  1839                           
  1840                           ;blueGyro.c: 698: if ((UserKey == 'G' ) || (UserKey == 'g' ) || (UserKey == 0xd))
  1841  00D3  3047               	movlw	71
  1842  00D4  0664               	xorwf	main@UserKey,w
  1843  00D5  1903               	btfsc	3,2
  1844  00D6  28DF               	goto	l3600
  1845  00D7  3067               	movlw	103
  1846  00D8  0664               	xorwf	main@UserKey,w
  1847  00D9  1903               	btfsc	3,2
  1848  00DA  28DF               	goto	l3600
  1849  00DB  300D               	movlw	13
  1850  00DC  0664               	xorwf	main@UserKey,w
  1851  00DD  1D03               	btfss	3,2
  1852  00DE  28E1               	goto	l3602
  1853  00DF                     l3600:	
  1854                           
  1855                           ;blueGyro.c: 699: NewMode=1;
  1856  00DF  3001               	movlw	1
  1857  00E0  28FA               	goto	L2
  1858  00E1                     l3602:	
  1859                           
  1860                           ;blueGyro.c: 700: else if (UserKey== 27)
  1861  00E1  301B               	movlw	27
  1862  00E2  0664               	xorwf	main@UserKey,w
  1863  00E3  1D03               	btfss	3,2
  1864  00E4  28E7               	goto	l3606
  1865                           
  1866                           ;blueGyro.c: 701: NewMode= 0;
  1867  00E5  01E8               	clrf	_NewMode	;volatile
  1868  00E6  293E               	goto	l3638
  1869  00E7                     l3606:	
  1870                           
  1871                           ;blueGyro.c: 702: else if ((UserKey== 'I') || (UserKey== 'i'))
  1872  00E7  3049               	movlw	73
  1873  00E8  0664               	xorwf	main@UserKey,w
  1874  00E9  1903               	btfsc	3,2
  1875  00EA  28EF               	goto	l3610
  1876  00EB  3069               	movlw	105
  1877  00EC  0664               	xorwf	main@UserKey,w
  1878  00ED  1D03               	btfss	3,2
  1879  00EE  28F1               	goto	l3612
  1880  00EF                     l3610:	
  1881                           
  1882                           ;blueGyro.c: 703: NewMode= 100;
  1883  00EF  3064               	movlw	100
  1884  00F0  28FA               	goto	L2
  1885  00F1                     l3612:	
  1886                           
  1887                           ;blueGyro.c: 704: else if ((UserKey == 'h' ) || (UserKey == 'H'))
  1888  00F1  3068               	movlw	104
  1889  00F2  0664               	xorwf	main@UserKey,w
  1890  00F3  1903               	btfsc	3,2
  1891  00F4  28F9               	goto	l3616
  1892  00F5  3048               	movlw	72
  1893  00F6  0664               	xorwf	main@UserKey,w
  1894  00F7  1D03               	btfss	3,2
  1895  00F8  28FE               	goto	l3618
  1896  00F9                     l3616:	
  1897                           
  1898                           ;blueGyro.c: 705: NewMode = 3;
  1899  00F9  3003               	movlw	3
  1900  00FA                     L2:	
  1901  00FA  00E0               	movwf	??_main
  1902  00FB  0860               	movf	??_main,w
  1903  00FC  00E8               	movwf	_NewMode	;volatile
  1904  00FD  293E               	goto	l3638
  1905  00FE                     l3618:	
  1906                           
  1907                           ;blueGyro.c: 706: else
  1908                           ;blueGyro.c: 707: if(Mode == 0)
  1909  00FE  086A               	movf	_Mode,w	;volatile
  1910  00FF  1D03               	btfss	3,2
  1911  0100  293E               	goto	l3638
  1912                           
  1913                           ;blueGyro.c: 708: {
  1914                           ;blueGyro.c: 709: if ((UserKey == 'V') || (UserKey == 'v'))
  1915  0101  3056               	movlw	86
  1916  0102  0664               	xorwf	main@UserKey,w
  1917  0103  1903               	btfsc	3,2
  1918  0104  2909               	goto	l3624
  1919  0105  3076               	movlw	118
  1920  0106  0664               	xorwf	main@UserKey,w
  1921  0107  1D03               	btfss	3,2
  1922  0108  290D               	goto	l3626
  1923  0109                     l3624:	
  1924                           
  1925                           ;blueGyro.c: 710: printVoltage();
  1926  0109  318D  2533  3180   	fcall	_printVoltage
  1927  010C  293E               	goto	l3638
  1928  010D                     l3626:	
  1929                           
  1930                           ;blueGyro.c: 711: else if ((UserKey == 'Z') || (UserKey=='z'))
  1931  010D  305A               	movlw	90
  1932  010E  0020               	movlb	0	; select bank0
  1933  010F  0664               	xorwf	main@UserKey,w
  1934  0110  1903               	btfsc	3,2
  1935  0111  2916               	goto	l3630
  1936  0112  307A               	movlw	122
  1937  0113  0664               	xorwf	main@UserKey,w
  1938  0114  1D03               	btfss	3,2
  1939  0115  2937               	goto	l3634
  1940  0116                     l3630:	
  1941                           
  1942                           ;blueGyro.c: 712: {
  1943                           ;blueGyro.c: 713: NewMode= 4;
  1944  0116  3004               	movlw	4
  1945  0117  00E0               	movwf	??_main
  1946  0118  0860               	movf	??_main,w
  1947  0119  00E8               	movwf	_NewMode	;volatile
  1948                           
  1949                           ;blueGyro.c: 714: AccGyroX=0;
  1950  011A  3000               	movlw	0
  1951  011B  0021               	movlb	1	; select bank1
  1952  011C  00DD               	movwf	(_AccGyroX+3)^(0+128)
  1953  011D  3000               	movlw	0
  1954  011E  00DC               	movwf	(_AccGyroX+2)^(0+128)
  1955  011F  3000               	movlw	0
  1956  0120  00DB               	movwf	(_AccGyroX+1)^(0+128)
  1957  0121  3000               	movlw	0
  1958  0122  00DA               	movwf	_AccGyroX^(0+128)
  1959                           
  1960                           ;blueGyro.c: 715: AccGyroY=0;
  1961  0123  3000               	movlw	0
  1962  0124  00E1               	movwf	(_AccGyroY+3)^(0+128)
  1963  0125  3000               	movlw	0
  1964  0126  00E0               	movwf	(_AccGyroY+2)^(0+128)
  1965  0127  3000               	movlw	0
  1966  0128  00DF               	movwf	(_AccGyroY+1)^(0+128)
  1967  0129  3000               	movlw	0
  1968  012A  00DE               	movwf	_AccGyroY^(0+128)
  1969                           
  1970                           ;blueGyro.c: 716: AccGyroZ=0;
  1971  012B  3000               	movlw	0
  1972  012C  00E5               	movwf	(_AccGyroZ+3)^(0+128)
  1973  012D  3000               	movlw	0
  1974  012E  00E4               	movwf	(_AccGyroZ+2)^(0+128)
  1975  012F  3000               	movlw	0
  1976  0130  00E3               	movwf	(_AccGyroZ+1)^(0+128)
  1977  0131  3000               	movlw	0
  1978  0132  00E2               	movwf	_AccGyroZ^(0+128)
  1979                           
  1980                           ;blueGyro.c: 717: AccGyroCount=0;
  1981  0133  0020               	movlb	0	; select bank0
  1982  0134  01E5               	clrf	_AccGyroCount
  1983  0135  01E6               	clrf	_AccGyroCount+1
  1984                           
  1985                           ;blueGyro.c: 718: }
  1986  0136  293E               	goto	l3638
  1987  0137                     l3634:	
  1988                           
  1989                           ;blueGyro.c: 719: else if (UserKey =='?')
  1990  0137  303F               	movlw	63
  1991  0138  0664               	xorwf	main@UserKey,w
  1992  0139  1D03               	btfss	3,2
  1993  013A  293E               	goto	l3638
  1994                           
  1995                           ;blueGyro.c: 720: printVersion();
  1996  013B  3188  2059  3180   	fcall	_printVersion
  1997  013E                     l3638:	
  1998                           
  1999                           ;blueGyro.c: 721: }
  2000                           ;blueGyro.c: 723: }
  2001                           ;blueGyro.c: 727: if(Mode != NewMode)
  2002  013E  0020               	movlb	0	; select bank0
  2003  013F  086A               	movf	_Mode,w	;volatile
  2004  0140  0668               	xorwf	_NewMode,w	;volatile
  2005  0141  1903               	skipnz
  2006  0142  2979               	goto	l3656
  2007                           
  2008                           ;blueGyro.c: 728: {
  2009                           ;blueGyro.c: 729: Mode=NewMode;
  2010  0143  0868               	movf	_NewMode,w	;volatile
  2011  0144  00E0               	movwf	??_main
  2012  0145  0860               	movf	??_main,w
  2013  0146  00EA               	movwf	_Mode	;volatile
  2014                           
  2015                           ;blueGyro.c: 731: switch(Mode)
  2016  0147  296D               	goto	l3654
  2017  0148                     l3642:	
  2018                           ;blueGyro.c: 732: {
  2019                           ;blueGyro.c: 733: case 4: cputs("\r\nZero Gyro.\r\n");
  2020                           
  2021  0148  30AE               	movlw	low (STR_17| (0+32768))
  2022  0149  00F5               	movwf	cputs@s
  2023  014A  3084               	movlw	high (STR_17| (0+32768))
  2024  014B  00F6               	movwf	cputs@s+1
  2025  014C  3188  20A5  3180   	fcall	_cputs
  2026                           
  2027                           ;blueGyro.c: 734: break;
  2028  014F  2979               	goto	l3656
  2029  0150                     l3644:	
  2030                           ;blueGyro.c: 735: case 0: cputs("\r\nIDLE\r\n");
  2031                           
  2032  0150  30D2               	movlw	low (STR_18| (0+32768))
  2033  0151  00F5               	movwf	cputs@s
  2034  0152  3084               	movlw	high (STR_18| (0+32768))
  2035  0153  00F6               	movwf	cputs@s+1
  2036  0154  3188  20A5  3180   	fcall	_cputs
  2037                           
  2038                           ;blueGyro.c: 736: break;
  2039  0157  2979               	goto	l3656
  2040  0158                     l3646:	
  2041                           ;blueGyro.c: 737: case 1: cputs("\r\nREADY\r\n");
  2042                           
  2043  0158  30C8               	movlw	low (STR_19| (0+32768))
  2044  0159  00F5               	movwf	cputs@s
  2045  015A  3084               	movlw	high (STR_19| (0+32768))
  2046  015B  00F6               	movwf	cputs@s+1
  2047  015C  3188  20A5  3180   	fcall	_cputs
  2048                           
  2049                           ;blueGyro.c: 739: CurrentData.SumSquare=0;
  2050  015F  3000               	movlw	0
  2051  0160  0021               	movlb	1	; select bank1
  2052  0161  00D3               	movwf	((_CurrentData+3)^(0+128)+16)
  2053  0162  3000               	movlw	0
  2054  0163  00D2               	movwf	((_CurrentData+2)^(0+128)+16)
  2055  0164  3000               	movlw	0
  2056  0165  00D1               	movwf	((_CurrentData+1)^(0+128)+16)
  2057  0166  3000               	movlw	0
  2058  0167  00D0               	movwf	(_CurrentData^(0+128)+16)
  2059                           
  2060                           ;blueGyro.c: 740: TimerCrash=65535;
  2061  0168  30FF               	movlw	255
  2062  0169  00E6               	movwf	_TimerCrash^(0+128)	;volatile
  2063  016A  30FF               	movlw	255
  2064  016B  00E7               	movwf	(_TimerCrash^(0+128)+1)	;volatile
  2065                           
  2066                           ;blueGyro.c: 742: }
  2067                           
  2068                           ;blueGyro.c: 741: break;
  2069  016C  2979               	goto	l3656
  2070  016D                     l3654:	
  2071  016D  0020               	movlb	0	; select bank0
  2072  016E  086A               	movf	_Mode,w	;volatile
  2073                           
  2074                           ; Switch size 1, requested type "space"
  2075                           ; Number of cases is 3, Range of values is 0 to 4
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte           10     6 (average)
  2079                           ; direct_byte           16     6 (fixed)
  2080                           ; jumptable            260     6 (fixed)
  2081                           ;	Chosen strategy is simple_byte
  2082  016F  3A00               	xorlw	0	; case 0
  2083  0170  1903               	skipnz
  2084  0171  2950               	goto	l3644
  2085  0172  3A01               	xorlw	1	; case 1
  2086  0173  1903               	skipnz
  2087  0174  2958               	goto	l3646
  2088  0175  3A05               	xorlw	5	; case 4
  2089  0176  1903               	skipnz
  2090  0177  2948               	goto	l3642
  2091  0178  2979               	goto	l3656
  2092  0179                     l3656:	
  2093                           
  2094                           ;blueGyro.c: 743: }
  2095                           ;blueGyro.c: 745: if(Mode == 4)
  2096  0179  3004               	movlw	4
  2097  017A  0020               	movlb	0	; select bank0
  2098  017B  066A               	xorwf	_Mode,w	;volatile
  2099  017C  1D03               	btfss	3,2
  2100  017D  2A58               	goto	l3686
  2101  017E                     l3660:	
  2102                           ;blueGyro.c: 746: {
  2103                           ;blueGyro.c: 747: while(GotInt_MPU6050()==0);
  2104                           
  2105  017E  3188  20E1  3180   	fcall	_GotInt_MPU6050
  2106  0181  3A00               	xorlw	0
  2107  0182  1903               	skipnz
  2108  0183  297E               	goto	l3660
  2109                           
  2110                           ;blueGyro.c: 748: Get_Accel_Values();
  2111  0184  3185  25F6  3180   	fcall	_Get_Accel_Values
  2112                           
  2113                           ;blueGyro.c: 750: AccGyroX += CurrentData.Gyrox;
  2114  0187  0021               	movlb	1	; select bank1
  2115  0188  0848               	movf	(_CurrentData^(0+128)+8),w
  2116  0189  0020               	movlb	0	; select bank0
  2117  018A  00E0               	movwf	??_main
  2118  018B  0021               	movlb	1	; select bank1
  2119  018C  0849               	movf	((_CurrentData+1)^(0+128)+8),w
  2120  018D  0020               	movlb	0	; select bank0
  2121  018E  00E1               	movwf	??_main+1
  2122  018F  3000               	movlw	0
  2123  0190  1BE1               	btfsc	??_main+1,7
  2124  0191  30FF               	movlw	255
  2125  0192  00E2               	movwf	??_main+2
  2126  0193  00E3               	movwf	??_main+3
  2127  0194  0860               	movf	??_main,w
  2128  0195  0021               	movlb	1	; select bank1
  2129  0196  07DA               	addwf	_AccGyroX^(0+128),f
  2130  0197  0020               	movlb	0	; select bank0
  2131  0198  0861               	movf	??_main+1,w
  2132  0199  0021               	movlb	1	; select bank1
  2133  019A  3DDB               	addwfc	(_AccGyroX+1)^(0+128),f
  2134  019B  0020               	movlb	0	; select bank0
  2135  019C  0862               	movf	??_main+2,w
  2136  019D  0021               	movlb	1	; select bank1
  2137  019E  3DDC               	addwfc	(_AccGyroX+2)^(0+128),f
  2138  019F  0020               	movlb	0	; select bank0
  2139  01A0  0863               	movf	??_main+3,w
  2140  01A1  0021               	movlb	1	; select bank1
  2141  01A2  3DDD               	addwfc	(_AccGyroX+3)^(0+128),f
  2142                           
  2143                           ;blueGyro.c: 751: AccGyroY += CurrentData.Gyroy;
  2144  01A3  084A               	movf	(_CurrentData^(0+128)+10),w
  2145  01A4  0020               	movlb	0	; select bank0
  2146  01A5  00E0               	movwf	??_main
  2147  01A6  0021               	movlb	1	; select bank1
  2148  01A7  084B               	movf	((_CurrentData+1)^(0+128)+10),w
  2149  01A8  0020               	movlb	0	; select bank0
  2150  01A9  00E1               	movwf	??_main+1
  2151  01AA  3000               	movlw	0
  2152  01AB  1BE1               	btfsc	??_main+1,7
  2153  01AC  30FF               	movlw	255
  2154  01AD  00E2               	movwf	??_main+2
  2155  01AE  00E3               	movwf	??_main+3
  2156  01AF  0860               	movf	??_main,w
  2157  01B0  0021               	movlb	1	; select bank1
  2158  01B1  07DE               	addwf	_AccGyroY^(0+128),f
  2159  01B2  0020               	movlb	0	; select bank0
  2160  01B3  0861               	movf	??_main+1,w
  2161  01B4  0021               	movlb	1	; select bank1
  2162  01B5  3DDF               	addwfc	(_AccGyroY+1)^(0+128),f
  2163  01B6  0020               	movlb	0	; select bank0
  2164  01B7  0862               	movf	??_main+2,w
  2165  01B8  0021               	movlb	1	; select bank1
  2166  01B9  3DE0               	addwfc	(_AccGyroY+2)^(0+128),f
  2167  01BA  0020               	movlb	0	; select bank0
  2168  01BB  0863               	movf	??_main+3,w
  2169  01BC  0021               	movlb	1	; select bank1
  2170  01BD  3DE1               	addwfc	(_AccGyroY+3)^(0+128),f
  2171                           
  2172                           ;blueGyro.c: 752: AccGyroZ += CurrentData.Gyroz;
  2173  01BE  084C               	movf	(_CurrentData^(0+128)+12),w
  2174  01BF  0020               	movlb	0	; select bank0
  2175  01C0  00E0               	movwf	??_main
  2176  01C1  0021               	movlb	1	; select bank1
  2177  01C2  084D               	movf	((_CurrentData+1)^(0+128)+12),w
  2178  01C3  0020               	movlb	0	; select bank0
  2179  01C4  00E1               	movwf	??_main+1
  2180  01C5  3000               	movlw	0
  2181  01C6  1BE1               	btfsc	??_main+1,7
  2182  01C7  30FF               	movlw	255
  2183  01C8  00E2               	movwf	??_main+2
  2184  01C9  00E3               	movwf	??_main+3
  2185  01CA  0860               	movf	??_main,w
  2186  01CB  0021               	movlb	1	; select bank1
  2187  01CC  07E2               	addwf	_AccGyroZ^(0+128),f
  2188  01CD  0020               	movlb	0	; select bank0
  2189  01CE  0861               	movf	??_main+1,w
  2190  01CF  0021               	movlb	1	; select bank1
  2191  01D0  3DE3               	addwfc	(_AccGyroZ+1)^(0+128),f
  2192  01D1  0020               	movlb	0	; select bank0
  2193  01D2  0862               	movf	??_main+2,w
  2194  01D3  0021               	movlb	1	; select bank1
  2195  01D4  3DE4               	addwfc	(_AccGyroZ+2)^(0+128),f
  2196  01D5  0020               	movlb	0	; select bank0
  2197  01D6  0863               	movf	??_main+3,w
  2198  01D7  0021               	movlb	1	; select bank1
  2199  01D8  3DE5               	addwfc	(_AccGyroZ+3)^(0+128),f
  2200                           
  2201                           ;blueGyro.c: 753: AccGyroCount++;
  2202  01D9  3001               	movlw	1
  2203  01DA  0020               	movlb	0	; select bank0
  2204  01DB  07E5               	addwf	_AccGyroCount,f
  2205  01DC  3000               	movlw	0
  2206  01DD  3DE6               	addwfc	_AccGyroCount+1,f
  2207                           
  2208                           ;blueGyro.c: 755: if(AccGyroCount>=250)
  2209  01DE  0866               	movf	_AccGyroCount+1,w
  2210  01DF  3A80               	xorlw	128
  2211  01E0  00E0               	movwf	??_main
  2212  01E1  3080               	movlw	128
  2213  01E2  0260               	subwf	??_main,w
  2214  01E3  1D03               	skipz
  2215  01E4  29E7               	goto	u3435
  2216  01E5  30FA               	movlw	250
  2217  01E6  0265               	subwf	_AccGyroCount,w
  2218  01E7                     u3435:	
  2219  01E7  1C03               	skipc
  2220  01E8  28CA               	goto	l3590
  2221                           
  2222                           ;blueGyro.c: 756: {
  2223                           ;blueGyro.c: 757: AccGyroX/=AccGyroCount;
  2224  01E9  0020               	movlb	0	; select bank0
  2225  01EA  0865               	movf	_AccGyroCount,w
  2226  01EB  00F2               	movwf	___aldiv@divisor
  2227  01EC  0866               	movf	_AccGyroCount+1,w
  2228  01ED  00F3               	movwf	___aldiv@divisor+1
  2229  01EE  0D89               	rlf	9,f
  2230  01EF  3B89               	subwfb	9,f
  2231  01F0  0989               	comf	9,f
  2232  01F1  00F4               	movwf	___aldiv@divisor+2
  2233  01F2  00F5               	movwf	___aldiv@divisor+3
  2234  01F3  0021               	movlb	1	; select bank1
  2235  01F4  085D               	movf	(_AccGyroX+3)^(0+128),w
  2236  01F5  00F9               	movwf	___aldiv@dividend+3
  2237  01F6  085C               	movf	(_AccGyroX+2)^(0+128),w
  2238  01F7  00F8               	movwf	___aldiv@dividend+2
  2239  01F8  085B               	movf	(_AccGyroX+1)^(0+128),w
  2240  01F9  00F7               	movwf	___aldiv@dividend+1
  2241  01FA  085A               	movf	_AccGyroX^(0+128),w
  2242  01FB  00F6               	movwf	___aldiv@dividend
  2243  01FC  318E  26F6  3180   	fcall	___aldiv
  2244  01FF  0875               	movf	?___aldiv+3,w
  2245  0200  0021               	movlb	1	; select bank1
  2246  0201  00DD               	movwf	(_AccGyroX+3)^(0+128)
  2247  0202  0874               	movf	?___aldiv+2,w
  2248  0203  00DC               	movwf	(_AccGyroX+2)^(0+128)
  2249  0204  0873               	movf	?___aldiv+1,w
  2250  0205  00DB               	movwf	(_AccGyroX+1)^(0+128)
  2251  0206  0872               	movf	?___aldiv,w
  2252  0207  00DA               	movwf	_AccGyroX^(0+128)
  2253                           
  2254                           ;blueGyro.c: 758: AccGyroY/=AccGyroCount;
  2255  0208  0020               	movlb	0	; select bank0
  2256  0209  0865               	movf	_AccGyroCount,w
  2257  020A  00F2               	movwf	___aldiv@divisor
  2258  020B  0866               	movf	_AccGyroCount+1,w
  2259  020C  00F3               	movwf	___aldiv@divisor+1
  2260  020D  0D89               	rlf	9,f
  2261  020E  3B89               	subwfb	9,f
  2262  020F  0989               	comf	9,f
  2263  0210  00F4               	movwf	___aldiv@divisor+2
  2264  0211  00F5               	movwf	___aldiv@divisor+3
  2265  0212  0021               	movlb	1	; select bank1
  2266  0213  0861               	movf	(_AccGyroY+3)^(0+128),w
  2267  0214  00F9               	movwf	___aldiv@dividend+3
  2268  0215  0860               	movf	(_AccGyroY+2)^(0+128),w
  2269  0216  00F8               	movwf	___aldiv@dividend+2
  2270  0217  085F               	movf	(_AccGyroY+1)^(0+128),w
  2271  0218  00F7               	movwf	___aldiv@dividend+1
  2272  0219  085E               	movf	_AccGyroY^(0+128),w
  2273  021A  00F6               	movwf	___aldiv@dividend
  2274  021B  318E  26F6  3180   	fcall	___aldiv
  2275  021E  0875               	movf	?___aldiv+3,w
  2276  021F  0021               	movlb	1	; select bank1
  2277  0220  00E1               	movwf	(_AccGyroY+3)^(0+128)
  2278  0221  0874               	movf	?___aldiv+2,w
  2279  0222  00E0               	movwf	(_AccGyroY+2)^(0+128)
  2280  0223  0873               	movf	?___aldiv+1,w
  2281  0224  00DF               	movwf	(_AccGyroY+1)^(0+128)
  2282  0225  0872               	movf	?___aldiv,w
  2283  0226  00DE               	movwf	_AccGyroY^(0+128)
  2284                           
  2285                           ;blueGyro.c: 759: AccGyroZ/=AccGyroCount;
  2286  0227  0020               	movlb	0	; select bank0
  2287  0228  0865               	movf	_AccGyroCount,w
  2288  0229  00F2               	movwf	___aldiv@divisor
  2289  022A  0866               	movf	_AccGyroCount+1,w
  2290  022B  00F3               	movwf	___aldiv@divisor+1
  2291  022C  0D89               	rlf	9,f
  2292  022D  3B89               	subwfb	9,f
  2293  022E  0989               	comf	9,f
  2294  022F  00F4               	movwf	___aldiv@divisor+2
  2295  0230  00F5               	movwf	___aldiv@divisor+3
  2296  0231  0021               	movlb	1	; select bank1
  2297  0232  0865               	movf	(_AccGyroZ+3)^(0+128),w
  2298  0233  00F9               	movwf	___aldiv@dividend+3
  2299  0234  0864               	movf	(_AccGyroZ+2)^(0+128),w
  2300  0235  00F8               	movwf	___aldiv@dividend+2
  2301  0236  0863               	movf	(_AccGyroZ+1)^(0+128),w
  2302  0237  00F7               	movwf	___aldiv@dividend+1
  2303  0238  0862               	movf	_AccGyroZ^(0+128),w
  2304  0239  00F6               	movwf	___aldiv@dividend
  2305  023A  318E  26F6  3180   	fcall	___aldiv
  2306  023D  0875               	movf	?___aldiv+3,w
  2307  023E  0021               	movlb	1	; select bank1
  2308  023F  00E5               	movwf	(_AccGyroZ+3)^(0+128)
  2309  0240  0874               	movf	?___aldiv+2,w
  2310  0241  00E4               	movwf	(_AccGyroZ+2)^(0+128)
  2311  0242  0873               	movf	?___aldiv+1,w
  2312  0243  00E3               	movwf	(_AccGyroZ+1)^(0+128)
  2313  0244  0872               	movf	?___aldiv,w
  2314  0245  00E2               	movwf	_AccGyroZ^(0+128)
  2315                           
  2316                           ;blueGyro.c: 761: Setting.GyroX=AccGyroX;
  2317  0246  085B               	movf	(_AccGyroX+1)^(0+128),w
  2318  0247  00E9               	movwf	(_Setting+1)^(0+128)
  2319  0248  085A               	movf	_AccGyroX^(0+128),w
  2320  0249  00E8               	movwf	_Setting^(0+128)
  2321                           
  2322                           ;blueGyro.c: 762: Setting.GyroY=AccGyroY;
  2323  024A  085F               	movf	(_AccGyroY+1)^(0+128),w
  2324  024B  00EB               	movwf	((_Setting+1)^(0+128)+2)
  2325  024C  085E               	movf	_AccGyroY^(0+128),w
  2326  024D  00EA               	movwf	(_Setting^(0+128)+2)
  2327                           
  2328                           ;blueGyro.c: 763: Setting.GyroZ=AccGyroZ;
  2329  024E  0863               	movf	(_AccGyroZ+1)^(0+128),w
  2330  024F  00ED               	movwf	((_Setting+1)^(0+128)+4)
  2331  0250  0862               	movf	_AccGyroZ^(0+128),w
  2332  0251  00EC               	movwf	(_Setting^(0+128)+4)
  2333                           
  2334                           ;blueGyro.c: 765: SaveSetting();
  2335  0252  3189  2177  3180   	fcall	_SaveSetting
  2336                           
  2337                           ;blueGyro.c: 767: NewMode=0;
  2338  0255  0020               	movlb	0	; select bank0
  2339  0256  01E8               	clrf	_NewMode	;volatile
  2340                           
  2341                           ;blueGyro.c: 768: }
  2342                           ;blueGyro.c: 769: continue;
  2343  0257  28CA               	goto	l3590
  2344  0258                     l3686:	
  2345                           
  2346                           ;blueGyro.c: 770: }
  2347                           ;blueGyro.c: 771: if(Mode == 3)
  2348  0258  3003               	movlw	3
  2349  0259  066A               	xorwf	_Mode,w	;volatile
  2350  025A  1D03               	btfss	3,2
  2351  025B  2A6F               	goto	l3698
  2352  025C                     l3690:	
  2353                           ;blueGyro.c: 772: {
  2354                           ;blueGyro.c: 773: while(GotInt_MPU6050()==0);
  2355                           
  2356  025C  3188  20E1  3180   	fcall	_GotInt_MPU6050
  2357  025F  3A00               	xorlw	0
  2358  0260  1903               	skipnz
  2359  0261  2A5C               	goto	l3690
  2360                           
  2361                           ;blueGyro.c: 774: Get_Accel_Values();
  2362  0262  3185  25F6  3180   	fcall	_Get_Accel_Values
  2363                           
  2364                           ;blueGyro.c: 776: Get_HMC5883L_Values();
  2365  0265  318C  247B  3180   	fcall	_Get_HMC5883L_Values
  2366                           
  2367                           ;blueGyro.c: 778: CalculateSumOfSquares();
  2368  0268  3185  250D  3180   	fcall	_CalculateSumOfSquares
  2369                           
  2370                           ;blueGyro.c: 779: DisplayData();
  2371  026B  3186  2694  3180   	fcall	_DisplayData
  2372                           
  2373                           ;blueGyro.c: 780: continue;
  2374  026E  28CA               	goto	l3590
  2375  026F                     l3698:	
  2376                           
  2377                           ;blueGyro.c: 781: }
  2378                           ;blueGyro.c: 782: if(Mode == 1)
  2379  026F  0020               	movlb	0	; select bank0
  2380  0270  036A               	decf	_Mode,w	;volatile
  2381  0271  1D03               	btfss	3,2
  2382  0272  2A8F               	goto	l3718
  2383                           
  2384                           ;blueGyro.c: 783: {
  2385                           ;blueGyro.c: 784: (GIE = 0);
  2386  0273  138B               	bcf	11,7	;volatile
  2387                           
  2388                           ;blueGyro.c: 785: Timerms=0;
  2389  0274  01FA               	clrf	_Timerms	;volatile
  2390  0275  01FB               	clrf	_Timerms+1	;volatile
  2391                           
  2392                           ;blueGyro.c: 786: (GIE = 1);
  2393  0276  178B               	bsf	11,7	;volatile
  2394                           
  2395                           ;blueGyro.c: 787: Get_Accel_Values();
  2396  0277  3185  25F6  3180   	fcall	_Get_Accel_Values
  2397                           
  2398                           ;blueGyro.c: 789: Get_HMC5883L_Values();
  2399  027A  318C  247B  3180   	fcall	_Get_HMC5883L_Values
  2400                           
  2401                           ;blueGyro.c: 791: CalculateSumOfSquares();
  2402  027D  3185  250D  3180   	fcall	_CalculateSumOfSquares
  2403                           
  2404                           ;blueGyro.c: 792: if(FindDeltaG())
  2405  0280  318A  22DD  3180   	fcall	_FindDeltaG
  2406  0283  3A00               	xorlw	0
  2407  0284  1903               	skipnz
  2408  0285  2A8F               	goto	l3718
  2409                           
  2410                           ;blueGyro.c: 793: {
  2411                           ;blueGyro.c: 794: DisplayData();
  2412  0286  3186  2694  3180   	fcall	_DisplayData
  2413                           
  2414                           ;blueGyro.c: 795: NewMode= 3;
  2415  0289  3003               	movlw	3
  2416  028A  0020               	movlb	0	; select bank0
  2417  028B  00E0               	movwf	??_main
  2418  028C  0860               	movf	??_main,w
  2419  028D  00E8               	movwf	_NewMode	;volatile
  2420                           
  2421                           ;blueGyro.c: 796: continue;
  2422  028E  28CA               	goto	l3590
  2423  028F                     l3718:	
  2424                           
  2425                           ;blueGyro.c: 797: }
  2426                           ;blueGyro.c: 798: }
  2427                           ;blueGyro.c: 799: if(Mode == 100)
  2428  028F  3064               	movlw	100
  2429  0290  0020               	movlb	0	; select bank0
  2430  0291  066A               	xorwf	_Mode,w	;volatile
  2431  0292  1D03               	btfss	3,2
  2432  0293  28CA               	goto	l3590
  2433                           
  2434                           ;blueGyro.c: 800: {
  2435                           ;blueGyro.c: 801: Get_Accel_Values();
  2436  0294  3185  25F6  3180   	fcall	_Get_Accel_Values
  2437                           
  2438                           ;blueGyro.c: 803: Get_HMC5883L_Values();
  2439  0297  318C  247B  3180   	fcall	_Get_HMC5883L_Values
  2440                           
  2441                           ;blueGyro.c: 805: DisplayInfo();
  2442  029A  3182  22A1  3180   	fcall	_DisplayInfo
  2443                           
  2444                           ;blueGyro.c: 806: NewMode = 0;
  2445  029D  0020               	movlb	0	; select bank0
  2446  029E  01E8               	clrf	_NewMode	;volatile
  2447                           
  2448                           ;blueGyro.c: 807: Mode = 0;
  2449  029F  01EA               	clrf	_Mode	;volatile
  2450  02A0  28CA               	goto	l3590
  2451  02A1                     __end_of_main:	
  2452                           
  2453                           	psect	text1
  2454  0D33                     __ptext1:	
  2455 ;; *************** function _printVoltage *****************
  2456 ;; Defined at:
  2457 ;;		line 567 in file "blueGyro.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  VDDValue        4   57[BANK0 ] long 
  2462 ;;  value           2   61[BANK0 ] unsigned short 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2472 ;;      Params:         0       0       0       0
  2473 ;;      Locals:         0       6       0       0
  2474 ;;      Temps:          0       3       0       0
  2475 ;;      Totals:         0       9       0       0
  2476 ;;Total ram usage:        9 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    5
  2479 ;; This function calls:
  2480 ;;		___aldiv
  2481 ;;		_cputs
  2482 ;;		_printCentiValue
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _printVoltage
  2490  0D33                     _printVoltage:	
  2491                           
  2492                           ;blueGyro.c: 580: unsigned short value;
  2493                           ;blueGyro.c: 581: long VDDValue;
  2494                           ;blueGyro.c: 584: ADCON1= 0b11100000;
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _printVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2498  0D33  30E0               	movlw	224
  2499  0D34  0021               	movlb	1	; select bank1
  2500  0D35  009E               	movwf	30	;volatile
  2501                           
  2502                           ;blueGyro.c: 586: FVRCON= 0b11000010;
  2503  0D36  30C2               	movlw	194
  2504  0D37  0022               	movlb	2	; select bank2
  2505  0D38  0097               	movwf	23	;volatile
  2506                           
  2507                           ;blueGyro.c: 588: ADCON0= 0b01111101;
  2508  0D39  307D               	movlw	125
  2509  0D3A  0021               	movlb	1	; select bank1
  2510  0D3B  009D               	movwf	29	;volatile
  2511                           
  2512                           ;blueGyro.c: 590: _delay((unsigned long)((100)*(32000000/4000.0)));
  2513  0D3C  3005               	movlw	5
  2514  0D3D  0020               	movlb	0	; select bank0
  2515  0D3E  00D8               	movwf	??_printVoltage+2
  2516  0D3F  300F               	movlw	15
  2517  0D40  00D7               	movwf	??_printVoltage+1
  2518  0D41  30F4               	movlw	244
  2519  0D42  00D6               	movwf	??_printVoltage
  2520  0D43                     u3527:	
  2521  0D43  0BD6               	decfsz	??_printVoltage,f
  2522  0D44  2D43               	goto	u3527
  2523  0D45  0BD7               	decfsz	??_printVoltage+1,f
  2524  0D46  2D43               	goto	u3527
  2525  0D47  0BD8               	decfsz	??_printVoltage+2,f
  2526  0D48  2D43               	goto	u3527
  2527                           
  2528                           ;blueGyro.c: 592: ADGO=1;
  2529  0D49  0021               	movlb	1	; select bank1
  2530  0D4A  149D               	bsf	29,1	;volatile
  2531  0D4B                     l339:	
  2532                           ;blueGyro.c: 594: while(ADGO);
  2533                           
  2534  0D4B  189D               	btfsc	29,1	;volatile
  2535  0D4C  2D4B               	goto	l339
  2536                           
  2537                           ;blueGyro.c: 595: value = ADRES;
  2538  0D4D  081C               	movf	28,w	;volatile
  2539  0D4E  0020               	movlb	0	; select bank0
  2540  0D4F  00DE               	movwf	printVoltage@value+1
  2541  0D50  0021               	movlb	1	; select bank1
  2542  0D51  081B               	movf	27,w	;volatile
  2543  0D52  0020               	movlb	0	; select bank0
  2544  0D53  00DD               	movwf	printVoltage@value
  2545                           
  2546                           ;blueGyro.c: 596: cputs("VDD = ");
  2547  0D54  30EC               	movlw	low (STR_14| (0+32768))
  2548  0D55  00F5               	movwf	cputs@s
  2549  0D56  3084               	movlw	high (STR_14| (0+32768))
  2550  0D57  00F6               	movwf	cputs@s+1
  2551  0D58  3188  20A5  318D   	fcall	_cputs
  2552                           
  2553                           ;blueGyro.c: 597: if(value ==0)
  2554  0D5B  0020               	movlb	0	; select bank0
  2555  0D5C  085D               	movf	printVoltage@value,w
  2556  0D5D  045E               	iorwf	printVoltage@value+1,w
  2557  0D5E  1D03               	btfss	3,2
  2558  0D5F  2D68               	goto	l3488
  2559                           
  2560                           ;blueGyro.c: 598: cputs("---");
  2561  0D60  30FD               	movlw	low (STR_15| (0+32768))
  2562  0D61  00F5               	movwf	cputs@s
  2563  0D62  3084               	movlw	high (STR_15| (0+32768))
  2564  0D63  00F6               	movwf	cputs@s+1
  2565  0D64  3188  20A5  318D   	fcall	_cputs
  2566  0D67  2D8E               	goto	l3492
  2567  0D68                     l3488:	
  2568                           
  2569                           ;blueGyro.c: 599: else
  2570                           ;blueGyro.c: 600: {
  2571                           ;blueGyro.c: 602: VDDValue = (long)209715 / ((long)value);
  2572  0D68  0020               	movlb	0	; select bank0
  2573  0D69  085D               	movf	printVoltage@value,w
  2574  0D6A  00F2               	movwf	___aldiv@divisor
  2575  0D6B  085E               	movf	printVoltage@value+1,w
  2576  0D6C  00F3               	movwf	___aldiv@divisor+1
  2577  0D6D  01F4               	clrf	___aldiv@divisor+2
  2578  0D6E  01F5               	clrf	___aldiv@divisor+3
  2579  0D6F  3000               	movlw	0
  2580  0D70  00F9               	movwf	___aldiv@dividend+3
  2581  0D71  3003               	movlw	3
  2582  0D72  00F8               	movwf	___aldiv@dividend+2
  2583  0D73  3033               	movlw	51
  2584  0D74  00F7               	movwf	___aldiv@dividend+1
  2585  0D75  3033               	movlw	51
  2586  0D76  00F6               	movwf	___aldiv@dividend
  2587  0D77  318E  26F6  318D   	fcall	___aldiv
  2588  0D7A  0875               	movf	?___aldiv+3,w
  2589  0D7B  0020               	movlb	0	; select bank0
  2590  0D7C  00DC               	movwf	printVoltage@VDDValue+3
  2591  0D7D  0874               	movf	?___aldiv+2,w
  2592  0D7E  00DB               	movwf	printVoltage@VDDValue+2
  2593  0D7F  0873               	movf	?___aldiv+1,w
  2594  0D80  00DA               	movwf	printVoltage@VDDValue+1
  2595  0D81  0872               	movf	?___aldiv,w
  2596  0D82  00D9               	movwf	printVoltage@VDDValue
  2597                           
  2598                           ;blueGyro.c: 603: printCentiValue(VDDValue);
  2599  0D83  085C               	movf	printVoltage@VDDValue+3,w
  2600  0D84  00BF               	movwf	printCentiValue@value+3
  2601  0D85  085B               	movf	printVoltage@VDDValue+2,w
  2602  0D86  00BE               	movwf	printCentiValue@value+2
  2603  0D87  085A               	movf	printVoltage@VDDValue+1,w
  2604  0D88  00BD               	movwf	printCentiValue@value+1
  2605  0D89  0859               	movf	printVoltage@VDDValue,w
  2606  0D8A  00BC               	movwf	printCentiValue@value
  2607  0D8B  318E  2677  318D   	fcall	_printCentiValue
  2608  0D8E                     l3492:	
  2609                           
  2610                           ;blueGyro.c: 604: }
  2611                           ;blueGyro.c: 605: cputs("V\r\n");
  2612  0D8E  30F9               	movlw	low (STR_16| (0+32768))
  2613  0D8F  00F5               	movwf	cputs@s
  2614  0D90  3084               	movlw	high (STR_16| (0+32768))
  2615  0D91  00F6               	movwf	cputs@s+1
  2616  0D92  3188  20A5         	fcall	_cputs
  2617                           
  2618                           ;blueGyro.c: 609: ADCON0=0;
  2619  0D94  0021               	movlb	1	; select bank1
  2620  0D95  019D               	clrf	29	;volatile
  2621                           
  2622                           ;blueGyro.c: 610: FVRCON=0;
  2623  0D96  0022               	movlb	2	; select bank2
  2624  0D97  0197               	clrf	23	;volatile
  2625  0D98  0008               	return
  2626  0D99                     __end_of_printVoltage:	
  2627                           
  2628                           	psect	text2
  2629  0859                     __ptext2:	
  2630 ;; *************** function _printVersion *****************
  2631 ;; Defined at:
  2632 ;;		line 561 in file "blueGyro.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;		None               void
  2639 ;; Registers used:
  2640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2646 ;;      Params:         0       0       0       0
  2647 ;;      Locals:         0       0       0       0
  2648 ;;      Temps:          0       0       0       0
  2649 ;;      Totals:         0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    3
  2653 ;; This function calls:
  2654 ;;		_cputs
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _printVersion
  2662  0859                     _printVersion:	
  2663                           
  2664                           ;blueGyro.c: 563: cputs("Catapult V1.01\r\n");
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in _printVersion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2668  0859  309D               	movlw	low (STR_13| (0+32768))
  2669  085A  00F5               	movwf	cputs@s
  2670  085B  3084               	movlw	high (STR_13| (0+32768))
  2671  085C  00F6               	movwf	cputs@s+1
  2672  085D  3188  20A5         	fcall	_cputs
  2673  085F  0008               	return
  2674  0860                     __end_of_printVersion:	
  2675                           
  2676                           	psect	text3
  2677  0868                     __ptext3:	
  2678 ;; *************** function _i2c_Init *****************
  2679 ;; Defined at:
  2680 ;;		line 12 in file "i2cMaster.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, status,2
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2694 ;;      Params:         0       0       0       0
  2695 ;;      Locals:         0       0       0       0
  2696 ;;      Temps:          0       0       0       0
  2697 ;;      Totals:         0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _i2c_Init
  2710  0868                     _i2c_Init:	
  2711                           
  2712                           ;i2cMaster.c: 16: TRISA1=1;
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _i2c_Init: [wreg+status,2]
  2716  0868  0021               	movlb	1	; select bank1
  2717  0869  148C               	bsf	12,1	;volatile
  2718                           
  2719                           ;i2cMaster.c: 17: TRISA2=1;
  2720  086A  150C               	bsf	12,2	;volatile
  2721                           
  2722                           ;i2cMaster.c: 19: SSPCON1 = 0b00101000;
  2723  086B  3028               	movlw	40
  2724  086C  0024               	movlb	4	; select bank4
  2725  086D  0095               	movwf	21	;volatile
  2726                           
  2727                           ;i2cMaster.c: 20: SSPCON2 = 0x00;
  2728  086E  0196               	clrf	22	;volatile
  2729                           
  2730                           ;i2cMaster.c: 22: SSPADD = 19;
  2731  086F  3013               	movlw	19
  2732  0870  0092               	movwf	18	;volatile
  2733                           
  2734                           ;i2cMaster.c: 24: SSPSTAT = 0b11000000;
  2735  0871  30C0               	movlw	192
  2736  0872  0094               	movwf	20	;volatile
  2737  0873  0008               	return
  2738  0874                     __end_of_i2c_Init:	
  2739                           
  2740                           	psect	text4
  2741  0D99                     __ptext4:	
  2742 ;; *************** function _Setup_MPU6050 *****************
  2743 ;; Defined at:
  2744 ;;		line 27 in file "MPU6050.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  loop            2    3[BANK0 ] int 
  2749 ;;  TheReg          1    5[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2759 ;;      Params:         0       0       0       0
  2760 ;;      Locals:         0       3       0       0
  2761 ;;      Temps:          2       0       0       0
  2762 ;;      Totals:         2       3       0       0
  2763 ;;Total ram usage:        5 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    4
  2766 ;; This function calls:
  2767 ;;		_LDByteWriteI2C
  2768 ;;		_cputs
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _Setup_MPU6050
  2776  0D99                     _Setup_MPU6050:	
  2777                           
  2778                           ;MPU6050.c: 29: int loop;
  2779                           ;MPU6050.c: 30: unsigned char TheReg;
  2780                           ;MPU6050.c: 33: const unsigned char MPU6050RegTable[]= {
  2781                           ;MPU6050.c: 34: 0x1D,
  2782                           ;MPU6050.c: 35: 0x1E,
  2783                           ;MPU6050.c: 36: 0x1F,
  2784                           ;MPU6050.c: 37: 0x20,
  2785                           ;MPU6050.c: 38: 0x21,
  2786                           ;MPU6050.c: 39: 0x22,
  2787                           ;MPU6050.c: 40: 0x23,
  2788                           ;MPU6050.c: 41: 0x24,
  2789                           ;MPU6050.c: 42: 0x25,
  2790                           ;MPU6050.c: 43: 0x26,
  2791                           ;MPU6050.c: 44: 0x27,
  2792                           ;MPU6050.c: 45: 0x28,
  2793                           ;MPU6050.c: 46: 0x29,
  2794                           ;MPU6050.c: 47: 0x2A,
  2795                           ;MPU6050.c: 48: 0x2B,
  2796                           ;MPU6050.c: 49: 0x2C,
  2797                           ;MPU6050.c: 50: 0x2D,
  2798                           ;MPU6050.c: 51: 0x2E,
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in _Setup_MPU6050: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2802  0D99  3019               	movlw	25
  2803  0D9A  00F8               	movwf	??_Setup_MPU6050
  2804  0D9B  0878               	movf	??_Setup_MPU6050,w
  2805  0D9C  00F6               	movwf	LDByteWriteI2C@LowAdd
  2806  0D9D  303F               	movlw	63
  2807  0D9E  00F9               	movwf	??_Setup_MPU6050+1
  2808  0D9F  0879               	movf	??_Setup_MPU6050+1,w
  2809  0DA0  00F7               	movwf	LDByteWriteI2C@data
  2810  0DA1  3068               	movlw	104
  2811  0DA2  3189  210F  318D   	fcall	_LDByteWriteI2C
  2812                           
  2813                           ;MPU6050.c: 116: LDByteWriteI2C(0x68, 0x1B, 0b00011000);
  2814  0DA5  301B               	movlw	27
  2815  0DA6  00F8               	movwf	??_Setup_MPU6050
  2816  0DA7  0878               	movf	??_Setup_MPU6050,w
  2817  0DA8  00F6               	movwf	LDByteWriteI2C@LowAdd
  2818  0DA9  3018               	movlw	24
  2819  0DAA  00F9               	movwf	??_Setup_MPU6050+1
  2820  0DAB  0879               	movf	??_Setup_MPU6050+1,w
  2821  0DAC  00F7               	movwf	LDByteWriteI2C@data
  2822  0DAD  3068               	movlw	104
  2823  0DAE  3189  210F  318D   	fcall	_LDByteWriteI2C
  2824                           
  2825                           ;MPU6050.c: 118: LDByteWriteI2C(0x68, 0x1C, 0x18);
  2826  0DB1  301C               	movlw	28
  2827  0DB2  00F8               	movwf	??_Setup_MPU6050
  2828  0DB3  0878               	movf	??_Setup_MPU6050,w
  2829  0DB4  00F6               	movwf	LDByteWriteI2C@LowAdd
  2830  0DB5  3018               	movlw	24
  2831  0DB6  00F9               	movwf	??_Setup_MPU6050+1
  2832  0DB7  0879               	movf	??_Setup_MPU6050+1,w
  2833  0DB8  00F7               	movwf	LDByteWriteI2C@data
  2834  0DB9  3068               	movlw	104
  2835  0DBA  3189  210F  318D   	fcall	_LDByteWriteI2C
  2836                           
  2837                           ;MPU6050.c: 120: loop=0;
  2838  0DBD  0020               	movlb	0	; select bank0
  2839  0DBE  01A3               	clrf	Setup_MPU6050@loop
  2840  0DBF  01A4               	clrf	Setup_MPU6050@loop+1
  2841  0DC0                     l3312:	
  2842                           ;MPU6050.c: 121: do
  2843                           
  2844                           
  2845                           ;MPU6050.c: 122: {
  2846                           ;MPU6050.c: 123: TheReg = MPU6050RegTable[loop++];
  2847  0DC0  0020               	movlb	0	; select bank0
  2848  0DC1  0824               	movf	Setup_MPU6050@loop+1,w
  2849  0DC2  0085               	movwf	5
  2850  0DC3  0823               	movf	Setup_MPU6050@loop,w
  2851  0DC4  0084               	movwf	4
  2852  0DC5  30DB               	movlw	low (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2853  0DC6  0784               	addwf	4,f
  2854  0DC7  3083               	movlw	high (Setup_MPU6050@MPU6050RegTable| (0+32768))
  2855  0DC8  3D85               	addwfc	5,f
  2856  0DC9  0800               	movf	0,w	;code access
  2857  0DCA  00F8               	movwf	??_Setup_MPU6050
  2858  0DCB  0878               	movf	??_Setup_MPU6050,w
  2859  0DCC  00A5               	movwf	Setup_MPU6050@TheReg
  2860  0DCD  3001               	movlw	1
  2861  0DCE  07A3               	addwf	Setup_MPU6050@loop,f
  2862  0DCF  3000               	movlw	0
  2863  0DD0  3DA4               	addwfc	Setup_MPU6050@loop+1,f
  2864                           
  2865                           ;MPU6050.c: 124: if(TheReg==0xff) break;
  2866  0DD1  0A25               	incf	Setup_MPU6050@TheReg,w
  2867  0DD2  1903               	btfsc	3,2
  2868  0DD3  2DDE               	goto	l3322
  2869                           
  2870                           ;MPU6050.c: 125: LDByteWriteI2C(0x68,TheReg,0);
  2871  0DD4  0825               	movf	Setup_MPU6050@TheReg,w
  2872  0DD5  00F8               	movwf	??_Setup_MPU6050
  2873  0DD6  0878               	movf	??_Setup_MPU6050,w
  2874  0DD7  00F6               	movwf	LDByteWriteI2C@LowAdd
  2875  0DD8  01F7               	clrf	LDByteWriteI2C@data
  2876  0DD9  3068               	movlw	104
  2877  0DDA  3189  210F  318D   	fcall	_LDByteWriteI2C
  2878                           
  2879                           ;MPU6050.c: 126: }while(1);
  2880  0DDD  2DC0               	goto	l3312
  2881  0DDE                     l3322:	
  2882                           
  2883                           ;MPU6050.c: 131: LDByteWriteI2C(0x68, 0x6B, 0b00000010);
  2884  0DDE  306B               	movlw	107
  2885  0DDF  00F8               	movwf	??_Setup_MPU6050
  2886  0DE0  0878               	movf	??_Setup_MPU6050,w
  2887  0DE1  00F6               	movwf	LDByteWriteI2C@LowAdd
  2888  0DE2  3002               	movlw	2
  2889  0DE3  00F9               	movwf	??_Setup_MPU6050+1
  2890  0DE4  0879               	movf	??_Setup_MPU6050+1,w
  2891  0DE5  00F7               	movwf	LDByteWriteI2C@data
  2892  0DE6  3068               	movlw	104
  2893  0DE7  3189  210F  318D   	fcall	_LDByteWriteI2C
  2894                           
  2895                           ;MPU6050.c: 133: LDByteWriteI2C(0x68, 0x6C, 0x00);
  2896  0DEA  306C               	movlw	108
  2897  0DEB  00F8               	movwf	??_Setup_MPU6050
  2898  0DEC  0878               	movf	??_Setup_MPU6050,w
  2899  0DED  00F6               	movwf	LDByteWriteI2C@LowAdd
  2900  0DEE  01F7               	clrf	LDByteWriteI2C@data
  2901  0DEF  3068               	movlw	104
  2902  0DF0  3189  210F  318D   	fcall	_LDByteWriteI2C
  2903                           
  2904                           ;MPU6050.c: 136: LDByteWriteI2C(0x68, 0x38, 0x01);
  2905  0DF3  3038               	movlw	56
  2906  0DF4  00F8               	movwf	??_Setup_MPU6050
  2907  0DF5  0878               	movf	??_Setup_MPU6050,w
  2908  0DF6  00F6               	movwf	LDByteWriteI2C@LowAdd
  2909  0DF7  01F7               	clrf	LDByteWriteI2C@data
  2910  0DF8  0AF7               	incf	LDByteWriteI2C@data,f
  2911  0DF9  3068               	movlw	104
  2912  0DFA  3189  210F  318D   	fcall	_LDByteWriteI2C
  2913                           
  2914                           ;MPU6050.c: 137: cputs("\r\nMPU6050 Setup Complete\r\n");
  2915  0DFD  3082               	movlw	low (STR_3| (0+32768))
  2916  0DFE  00F5               	movwf	cputs@s
  2917  0DFF  3084               	movlw	high (STR_3| (0+32768))
  2918  0E00  00F6               	movwf	cputs@s+1
  2919  0E01  3188  20A5         	fcall	_cputs
  2920  0E03  0008               	return
  2921  0E04                     __end_of_Setup_MPU6050:	
  2922                           
  2923                           	psect	text5
  2924  08CD                     __ptext5:	
  2925 ;; *************** function _Setup_HMC5883L *****************
  2926 ;; Defined at:
  2927 ;;		line 9 in file "HMC5883L.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2941 ;;      Params:         0       0       0       0
  2942 ;;      Locals:         0       0       0       0
  2943 ;;      Temps:          1       0       0       0
  2944 ;;      Totals:         1       0       0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    4
  2948 ;; This function calls:
  2949 ;;		_LDByteWriteI2C
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _Setup_HMC5883L
  2957  08CD                     _Setup_HMC5883L:	
  2958                           
  2959                           ;HMC5883L.c: 13: LDByteWriteI2C(0x1e, 1, 0x20);
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _Setup_HMC5883L: [wreg+status,2+status,0+pclath+cstack]
  2963  08CD  01F6               	clrf	LDByteWriteI2C@LowAdd
  2964  08CE  0AF6               	incf	LDByteWriteI2C@LowAdd,f
  2965  08CF  3020               	movlw	32
  2966  08D0  00F8               	movwf	??_Setup_HMC5883L
  2967  08D1  0878               	movf	??_Setup_HMC5883L,w
  2968  08D2  00F7               	movwf	LDByteWriteI2C@data
  2969  08D3  301E               	movlw	30
  2970  08D4  3189  210F  3188   	fcall	_LDByteWriteI2C
  2971                           
  2972                           ;HMC5883L.c: 15: LDByteWriteI2C(0x1e, 2, 0x01);
  2973  08D7  3002               	movlw	2
  2974  08D8  00F8               	movwf	??_Setup_HMC5883L
  2975  08D9  0878               	movf	??_Setup_HMC5883L,w
  2976  08DA  00F6               	movwf	LDByteWriteI2C@LowAdd
  2977  08DB  01F7               	clrf	LDByteWriteI2C@data
  2978  08DC  0AF7               	incf	LDByteWriteI2C@data,f
  2979  08DD  301E               	movlw	30
  2980  08DE  3189  210F         	fcall	_LDByteWriteI2C
  2981  08E0  0008               	return
  2982  08E1                     __end_of_Setup_HMC5883L:	
  2983                           
  2984                           	psect	text6
  2985  0977                     __ptext6:	
  2986 ;; *************** function _SaveSetting *****************
  2987 ;; Defined at:
  2988 ;;		line 203 in file "blueGyro.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  idx             1    8[COMMON] unsigned char 
  2993 ;;  pointer         1    7[COMMON] PTR unsigned char 
  2994 ;;		 -> Setting(6), 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3004 ;;      Params:         0       0       0       0
  3005 ;;      Locals:         2       0       0       0
  3006 ;;      Temps:          1       0       0       0
  3007 ;;      Totals:         3       0       0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		_eeprom_write
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _SaveSetting
  3020  0977                     _SaveSetting:	
  3021                           
  3022                           ;blueGyro.c: 205: unsigned char idx;
  3023                           ;blueGyro.c: 206: unsigned char * pointer = (unsigned char *) &Setting;
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _SaveSetting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3027  0977  30E8               	movlw	(low (_Setting| 0))& (0+255)
  3028  0978  00F6               	movwf	??_SaveSetting
  3029  0979  0876               	movf	??_SaveSetting,w
  3030  097A  00F7               	movwf	SaveSetting@pointer
  3031                           
  3032                           ;blueGyro.c: 208: for(idx=0; idx < sizeof(Setting);idx++)
  3033  097B  01F8               	clrf	SaveSetting@idx
  3034  097C                     L3:	
  3035  097C  3006               	movlw	6
  3036  097D  0278               	subwf	SaveSetting@idx,w
  3037  097E  1803               	btfsc	3,0
  3038  097F  0008               	return
  3039                           
  3040                           ;blueGyro.c: 209: eeprom_write(idx, *(pointer++));
  3041  0980  0877               	movf	SaveSetting@pointer,w
  3042  0981  0086               	movwf	6
  3043  0982  0187               	clrf	7
  3044  0983  0801               	movf	1,w
  3045  0984  00F6               	movwf	??_SaveSetting
  3046  0985  0876               	movf	??_SaveSetting,w
  3047  0986  00F2               	movwf	eeprom_write@value
  3048  0987  0878               	movf	SaveSetting@idx,w
  3049  0988  3189  21D5  3189   	fcall	_eeprom_write
  3050  098B  3001               	movlw	1
  3051  098C  00F6               	movwf	??_SaveSetting
  3052  098D  0876               	movf	??_SaveSetting,w
  3053  098E  07F7               	addwf	SaveSetting@pointer,f
  3054  098F  3001               	movlw	1
  3055  0990  00F6               	movwf	??_SaveSetting
  3056  0991  0876               	movf	??_SaveSetting,w
  3057  0992  07F8               	addwf	SaveSetting@idx,f
  3058  0993  297C               	goto	L3
  3059  0994                     __end_of_SaveSetting:	
  3060                           
  3061                           	psect	text7
  3062  09D5                     __ptext7:	
  3063 ;; *************** function _eeprom_write *****************
  3064 ;; Defined at:
  3065 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/pic/eewrite.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  addr            1    wreg     unsigned char 
  3068 ;;  value           1    2[COMMON] unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  addr            1    5[COMMON] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3080 ;;      Params:         1       0       0       0
  3081 ;;      Locals:         1       0       0       0
  3082 ;;      Temps:          2       0       0       0
  3083 ;;      Totals:         4       0       0       0
  3084 ;;Total ram usage:        4 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_SaveSetting
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _eeprom_write
  3096  09D5                     _eeprom_write:	
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3100                           ;eeprom_write@addr stored from wreg
  3101  09D5  00F5               	movwf	eeprom_write@addr
  3102  09D6                     l440:	
  3103  09D6  0023               	movlb	3	; select bank3
  3104  09D7  1895               	btfsc	21,1	;volsfr
  3105  09D8  29D6               	goto	l440
  3106  09D9  0875               	movf	eeprom_write@addr,w
  3107  09DA  00F3               	movwf	??_eeprom_write
  3108  09DB  01F4               	clrf	??_eeprom_write+1
  3109  09DC  0873               	movf	??_eeprom_write,w
  3110  09DD  0091               	movwf	17	;volatile
  3111  09DE  0874               	movf	??_eeprom_write+1,w
  3112  09DF  0092               	movwf	18	;volatile
  3113  09E0  0872               	movf	eeprom_write@value,w
  3114  09E1  0093               	movwf	19	;volatile
  3115  09E2  303F               	movlw	63
  3116  09E3  00F3               	movwf	??_eeprom_write
  3117  09E4  0873               	movf	??_eeprom_write,w
  3118  09E5  0595               	andwf	21,f	;volsfr
  3119  09E6  0020               	movlb	0	; select bank0
  3120  09E7  1003               	bcf	3,0	;volatile
  3121  09E8  1B8B               	btfsc	11,7	;volatile
  3122  09E9  1403               	bsf	3,0	;volatile
  3123  09EA  138B               	bcf	11,7	;volatile
  3124  09EB  0023               	movlb	3	; select bank3
  3125  09EC  1515               	bsf	21,2	;volsfr
  3126  09ED  3055               	movlw	85
  3127  09EE  0096               	movwf	22	;volsfr
  3128  09EF  30AA               	movlw	170
  3129  09F0  0096               	movwf	22	;volsfr
  3130  09F1  1495               	bsf	21,1	;volsfr
  3131  09F2  1115               	bcf	21,2	;volsfr
  3132  09F3  0020               	movlb	0	; select bank0
  3133  09F4  1C03               	btfss	3,0	;volatile
  3134  09F5  0008               	return
  3135  09F6  178B               	bsf	11,7	;volatile
  3136  09F7  0008               	return
  3137  09F8                     __end_of_eeprom_write:	
  3138                           
  3139                           	psect	text8
  3140  09B2                     __ptext8:	
  3141 ;; *************** function _MPU6050_Test_I2C *****************
  3142 ;; Defined at:
  3143 ;;		line 9 in file "MPU6050.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  Data            1    3[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   81[None  ] int 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3157 ;;      Params:         0       0       0       0
  3158 ;;      Locals:         0       1       0       0
  3159 ;;      Temps:          0       2       0       0
  3160 ;;      Totals:         0       3       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    4
  3164 ;; This function calls:
  3165 ;;		_LDByteReadI2C
  3166 ;;		_cputs
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _MPU6050_Test_I2C
  3174  09B2                     _MPU6050_Test_I2C:	
  3175                           
  3176                           ;MPU6050.c: 11: unsigned char Data = 0x00;
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _MPU6050_Test_I2C: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3180  09B2  0020               	movlb	0	; select bank0
  3181  09B3  01A3               	clrf	MPU6050_Test_I2C@Data
  3182                           
  3183                           ;MPU6050.c: 12: LDByteReadI2C(0x68, 0x75, &Data, 1);
  3184  09B4  3075               	movlw	117
  3185  09B5  00A1               	movwf	??_MPU6050_Test_I2C
  3186  09B6  0821               	movf	??_MPU6050_Test_I2C,w
  3187  09B7  00F6               	movwf	LDByteReadI2C@Address
  3188  09B8  3023               	movlw	(low (MPU6050_Test_I2C@Data| 0))& (0+255)
  3189  09B9  00A2               	movwf	??_MPU6050_Test_I2C+1
  3190  09BA  0822               	movf	??_MPU6050_Test_I2C+1,w
  3191  09BB  00F7               	movwf	LDByteReadI2C@Data
  3192  09BC  01F8               	clrf	LDByteReadI2C@Length
  3193  09BD  0AF8               	incf	LDByteReadI2C@Length,f
  3194  09BE  3068               	movlw	104
  3195  09BF  318B  231C  3189   	fcall	_LDByteReadI2C
  3196                           
  3197                           ;MPU6050.c: 14: if(Data == 0x68)
  3198  09C2  3068               	movlw	104
  3199  09C3  0020               	movlb	0	; select bank0
  3200  09C4  0623               	xorwf	MPU6050_Test_I2C@Data,w
  3201  09C5  1D03               	btfss	3,2
  3202  09C6  29CE               	goto	l3304
  3203                           
  3204                           ;MPU6050.c: 15: {
  3205                           ;MPU6050.c: 16: cputs("I2C Read Test Passed, MPU6050 Address: 0x68\r\n");
  3206  09C7  302C               	movlw	low (STR_1| (0+32768))
  3207  09C8  00F5               	movwf	cputs@s
  3208  09C9  3084               	movlw	high (STR_1| (0+32768))
  3209  09CA  00F6               	movwf	cputs@s+1
  3210  09CB  3188  20A5         	fcall	_cputs
  3211                           
  3212                           ;MPU6050.c: 17: return(1);
  3213                           ;	Return value of _MPU6050_Test_I2C is never used
  3214  09CD  0008               	return
  3215  09CE                     l3304:	
  3216                           
  3217                           ;MPU6050.c: 18: }
  3218                           ;MPU6050.c: 20: cputs("ERROR: I2C Read Test Failed, Stopping\r\n");
  3219  09CE  305A               	movlw	low (STR_2| (0+32768))
  3220  09CF  00F5               	movwf	cputs@s
  3221  09D0  3084               	movlw	high (STR_2| (0+32768))
  3222  09D1  00F6               	movwf	cputs@s+1
  3223  09D2  3188  20A5         	fcall	_cputs
  3224  09D4  0008               	return
  3225  09D5                     __end_of_MPU6050_Test_I2C:	
  3226                           ;MPU6050.c: 22: return(0);
  3227                           ;	Return value of _MPU6050_Test_I2C is never used
  3228                           
  3229                           
  3230                           	psect	text9
  3231  095B                     __ptext9:	
  3232 ;; *************** function _LoadSetting *****************
  3233 ;; Defined at:
  3234 ;;		line 194 in file "blueGyro.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  idx             1    8[COMMON] unsigned char 
  3239 ;;  pointer         1    7[COMMON] PTR unsigned char 
  3240 ;;		 -> Setting(6), 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3250 ;;      Params:         0       0       0       0
  3251 ;;      Locals:         2       0       0       0
  3252 ;;      Temps:          1       0       0       0
  3253 ;;      Totals:         3       0       0       0
  3254 ;;Total ram usage:        3 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    2
  3257 ;; This function calls:
  3258 ;;		_eeprom_read
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _LoadSetting
  3266  095B                     _LoadSetting:	
  3267                           
  3268                           ;blueGyro.c: 196: unsigned char idx;
  3269                           ;blueGyro.c: 197: unsigned char * pointer = (unsigned char *) &Setting;
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _LoadSetting: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3273  095B  30E8               	movlw	(low (_Setting| 0))& (0+255)
  3274  095C  00F6               	movwf	??_LoadSetting
  3275  095D  0876               	movf	??_LoadSetting,w
  3276  095E  00F7               	movwf	LoadSetting@pointer
  3277                           
  3278                           ;blueGyro.c: 199: for(idx=0; idx < sizeof(Setting);idx++)
  3279  095F  01F8               	clrf	LoadSetting@idx
  3280  0960                     L4:	
  3281  0960  3006               	movlw	6
  3282  0961  0278               	subwf	LoadSetting@idx,w
  3283  0962  1803               	btfsc	3,0
  3284  0963  0008               	return
  3285                           
  3286                           ;blueGyro.c: 200: *(pointer++) = eeprom_read(idx);
  3287  0964  0878               	movf	LoadSetting@idx,w
  3288  0965  3189  2127  3189   	fcall	_eeprom_read
  3289  0968  00F6               	movwf	??_LoadSetting
  3290  0969  0877               	movf	LoadSetting@pointer,w
  3291  096A  0086               	movwf	6
  3292  096B  0187               	clrf	7
  3293  096C  0876               	movf	??_LoadSetting,w
  3294  096D  0081               	movwf	1
  3295  096E  3001               	movlw	1
  3296  096F  00F6               	movwf	??_LoadSetting
  3297  0970  0876               	movf	??_LoadSetting,w
  3298  0971  07F7               	addwf	LoadSetting@pointer,f
  3299  0972  3001               	movlw	1
  3300  0973  00F6               	movwf	??_LoadSetting
  3301  0974  0876               	movf	??_LoadSetting,w
  3302  0975  07F8               	addwf	LoadSetting@idx,f
  3303  0976  2960               	goto	L4
  3304  0977                     __end_of_LoadSetting:	
  3305                           
  3306                           	psect	text10
  3307  0927                     __ptext10:	
  3308 ;; *************** function _eeprom_read *****************
  3309 ;; Defined at:
  3310 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/pic/eeread.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  addr            1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  addr            1    5[COMMON] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3324 ;;      Params:         0       0       0       0
  3325 ;;      Locals:         1       0       0       0
  3326 ;;      Temps:          3       0       0       0
  3327 ;;      Totals:         4       0       0       0
  3328 ;;Total ram usage:        4 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_LoadSetting
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _eeprom_read
  3340  0927                     _eeprom_read:	
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3344                           ;eeprom_read@addr stored from wreg
  3345  0927  00F5               	movwf	eeprom_read@addr
  3346  0928                     l418:	
  3347  0928  0064               	clrwdt	;# 
  3348  0929  0023               	movlb	3	; select bank3
  3349  092A  1895               	btfsc	21,1	;volsfr
  3350  092B  2928               	goto	l418
  3351  092C  0875               	movf	eeprom_read@addr,w
  3352  092D  00F2               	movwf	??_eeprom_read
  3353  092E  01F3               	clrf	??_eeprom_read+1
  3354  092F  0872               	movf	??_eeprom_read,w
  3355  0930  0091               	movwf	17	;volatile
  3356  0931  0873               	movf	??_eeprom_read+1,w
  3357  0932  0092               	movwf	18	;volatile
  3358  0933  303F               	movlw	63
  3359  0934  00F4               	movwf	??_eeprom_read+2
  3360  0935  0874               	movf	??_eeprom_read+2,w
  3361  0936  0595               	andwf	21,f	;volsfr
  3362  0937  1415               	bsf	21,0	;volsfr
  3363  0938  1003               	clrc
  3364  0939  1815               	btfsc	21,0	;volsfr
  3365  093A  1403               	setc
  3366  093B  3000               	movlw	0
  3367  093C  3D09               	addwfc	9,w
  3368  093D  0813               	movf	19,w	;volatile
  3369  093E  0008               	return
  3370  093F                     __end_of_eeprom_read:	
  3371                           
  3372                           	psect	text11
  3373  0883                     __ptext11:	
  3374 ;; *************** function _Init1msTimer *****************
  3375 ;; Defined at:
  3376 ;;		line 240 in file "blueGyro.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, status,2
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3390 ;;      Params:         0       0       0       0
  3391 ;;      Locals:         0       0       0       0
  3392 ;;      Temps:          0       0       0       0
  3393 ;;      Totals:         0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _Init1msTimer
  3406  0883                     _Init1msTimer:	
  3407                           
  3408                           ;blueGyro.c: 247: T2CON=0;
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in _Init1msTimer: [wreg+status,2]
  3412  0883  0020               	movlb	0	; select bank0
  3413  0884  019C               	clrf	28	;volatile
  3414                           
  3415                           ;blueGyro.c: 248: PR2 = 125;
  3416  0885  307D               	movlw	125
  3417  0886  009B               	movwf	27	;volatile
  3418                           
  3419                           ;blueGyro.c: 249: TMR2=0;
  3420  0887  019A               	clrf	26	;volatile
  3421                           
  3422                           ;blueGyro.c: 250: T2CON= 0b00000111;
  3423  0888  3007               	movlw	7
  3424  0889  009C               	movwf	28	;volatile
  3425                           
  3426                           ;blueGyro.c: 252: TMR2IF=0;
  3427  088A  1091               	bcf	17,1	;volatile
  3428                           
  3429                           ;blueGyro.c: 253: Timerms=0;
  3430  088B  01FA               	clrf	_Timerms	;volatile
  3431  088C  01FB               	clrf	_Timerms+1	;volatile
  3432                           
  3433                           ;blueGyro.c: 254: TMR2IE=1;
  3434  088D  0021               	movlb	1	; select bank1
  3435  088E  1491               	bsf	17,1	;volatile
  3436                           
  3437                           ;blueGyro.c: 255: PEIE = 1;
  3438  088F  170B               	bsf	11,6	;volatile
  3439                           
  3440                           ;blueGyro.c: 256: GIE=1;
  3441  0890  178B               	bsf	11,7	;volatile
  3442  0891  0008               	return
  3443  0892                     __end_of_Init1msTimer:	
  3444                           
  3445                           	psect	text12
  3446  08E1                     __ptext12:	
  3447 ;; *************** function _GotInt_MPU6050 *****************
  3448 ;; Defined at:
  3449 ;;		line 165 in file "MPU6050.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  uc_temp         1    3[BANK0 ] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      unsigned char 
  3456 ;; Registers used:
  3457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3463 ;;      Params:         0       0       0       0
  3464 ;;      Locals:         0       1       0       0
  3465 ;;      Temps:          0       2       0       0
  3466 ;;      Totals:         0       3       0       0
  3467 ;;Total ram usage:        3 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    4
  3470 ;; This function calls:
  3471 ;;		_LDByteReadI2C
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _GotInt_MPU6050
  3479  08E1                     _GotInt_MPU6050:	
  3480                           
  3481                           ;MPU6050.c: 167: unsigned char uc_temp;
  3482                           ;MPU6050.c: 171: LDByteReadI2C(0x68,0x3A, &uc_temp, 1);
  3483                           
  3484                           ;incstack = 0
  3485                           ; Regs used in _GotInt_MPU6050: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3486  08E1  303A               	movlw	58
  3487  08E2  0020               	movlb	0	; select bank0
  3488  08E3  00A1               	movwf	??_GotInt_MPU6050
  3489  08E4  0821               	movf	??_GotInt_MPU6050,w
  3490  08E5  00F6               	movwf	LDByteReadI2C@Address
  3491  08E6  3023               	movlw	(low (GotInt_MPU6050@uc_temp| 0))& (0+255)
  3492  08E7  00A2               	movwf	??_GotInt_MPU6050+1
  3493  08E8  0822               	movf	??_GotInt_MPU6050+1,w
  3494  08E9  00F7               	movwf	LDByteReadI2C@Data
  3495  08EA  01F8               	clrf	LDByteReadI2C@Length
  3496  08EB  0AF8               	incf	LDByteReadI2C@Length,f
  3497  08EC  3068               	movlw	104
  3498  08ED  318B  231C  3188   	fcall	_LDByteReadI2C
  3499                           
  3500                           ;MPU6050.c: 173: return ((uc_temp & 1) == 1 ? 1 : 0);
  3501  08F0  0020               	movlb	0	; select bank0
  3502  08F1  1C23               	btfss	GotInt_MPU6050@uc_temp,0
  3503  08F2  28F5               	goto	u3150
  3504  08F3  3001               	movlw	1
  3505  08F4  0008               	return
  3506  08F5                     u3150:	
  3507  08F5  3000               	movlw	0
  3508  08F6  0008               	return
  3509  08F7                     __end_of_GotInt_MPU6050:	
  3510                           
  3511                           	psect	text13
  3512  0C7B                     __ptext13:	
  3513 ;; *************** function _Get_HMC5883L_Values *****************
  3514 ;; Defined at:
  3515 ;;		line 18 in file "HMC5883L.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  cval            6    8[BANK0 ] unsigned char [6]
  3520 ;;  loop            1    0        unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3530 ;;      Params:         0       0       0       0
  3531 ;;      Locals:         0       6       0       0
  3532 ;;      Temps:          0       5       0       0
  3533 ;;      Totals:         0      11       0       0
  3534 ;;Total ram usage:       11 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    4
  3537 ;; This function calls:
  3538 ;;		_LDByteReadI2C
  3539 ;;		_LDByteWriteI2C
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _Get_HMC5883L_Values
  3547  0C7B                     _Get_HMC5883L_Values:	
  3548                           
  3549                           ;HMC5883L.c: 20: char cval[6];
  3550                           ;HMC5883L.c: 21: unsigned char loop;
  3551                           ;HMC5883L.c: 25: LDByteWriteI2C(0x1e, 2, 0x01);
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _Get_HMC5883L_Values: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3555  0C7B  3002               	movlw	2
  3556  0C7C  0020               	movlb	0	; select bank0
  3557  0C7D  00A3               	movwf	??_Get_HMC5883L_Values
  3558  0C7E  0823               	movf	??_Get_HMC5883L_Values,w
  3559  0C7F  00F6               	movwf	LDByteWriteI2C@LowAdd
  3560  0C80  01F7               	clrf	LDByteWriteI2C@data
  3561  0C81  0AF7               	incf	LDByteWriteI2C@data,f
  3562  0C82  301E               	movlw	30
  3563  0C83  3189  210F  318C   	fcall	_LDByteWriteI2C
  3564                           
  3565                           ;HMC5883L.c: 26: LDByteReadI2C(0x1e, 3, cval,6);
  3566  0C86  3003               	movlw	3
  3567  0C87  0020               	movlb	0	; select bank0
  3568  0C88  00A3               	movwf	??_Get_HMC5883L_Values
  3569  0C89  0823               	movf	??_Get_HMC5883L_Values,w
  3570  0C8A  00F6               	movwf	LDByteReadI2C@Address
  3571  0C8B  3028               	movlw	(low (Get_HMC5883L_Values@cval| 0))& (0+255)
  3572  0C8C  00A4               	movwf	??_Get_HMC5883L_Values+1
  3573  0C8D  0824               	movf	??_Get_HMC5883L_Values+1,w
  3574  0C8E  00F7               	movwf	LDByteReadI2C@Data
  3575  0C8F  3006               	movlw	6
  3576  0C90  00A5               	movwf	??_Get_HMC5883L_Values+2
  3577  0C91  0825               	movf	??_Get_HMC5883L_Values+2,w
  3578  0C92  00F8               	movwf	LDByteReadI2C@Length
  3579  0C93  301E               	movlw	30
  3580  0C94  318B  231C  318C   	fcall	_LDByteReadI2C
  3581                           
  3582                           ;HMC5883L.c: 27: CurrentData.MagX = ((cval[0]<<8)|cval[1]);
  3583  0C97  0020               	movlb	0	; select bank0
  3584  0C98  0829               	movf	Get_HMC5883L_Values@cval+1,w
  3585  0C99  00A3               	movwf	??_Get_HMC5883L_Values
  3586  0C9A  01A4               	clrf	??_Get_HMC5883L_Values+1
  3587  0C9B  0828               	movf	Get_HMC5883L_Values@cval,w
  3588  0C9C  00A5               	movwf	??_Get_HMC5883L_Values+2
  3589  0C9D  01A6               	clrf	??_Get_HMC5883L_Values+3
  3590  0C9E  0825               	movf	??_Get_HMC5883L_Values+2,w
  3591  0C9F  00A6               	movwf	??_Get_HMC5883L_Values+3
  3592  0CA0  01A5               	clrf	??_Get_HMC5883L_Values+2
  3593  0CA1  0823               	movf	??_Get_HMC5883L_Values,w
  3594  0CA2  0425               	iorwf	??_Get_HMC5883L_Values+2,w
  3595  0CA3  0021               	movlb	1	; select bank1
  3596  0CA4  00D4               	movwf	(_CurrentData^(0+128)+20)
  3597  0CA5  0020               	movlb	0	; select bank0
  3598  0CA6  0824               	movf	??_Get_HMC5883L_Values+1,w
  3599  0CA7  0426               	iorwf	??_Get_HMC5883L_Values+3,w
  3600  0CA8  0021               	movlb	1	; select bank1
  3601  0CA9  00D5               	movwf	((_CurrentData+1)^(0+128)+20)
  3602                           
  3603                           ;HMC5883L.c: 28: CurrentData.MagZ = ((cval[2]<<8)|cval[3]);
  3604  0CAA  0020               	movlb	0	; select bank0
  3605  0CAB  082B               	movf	Get_HMC5883L_Values@cval+3,w
  3606  0CAC  00A3               	movwf	??_Get_HMC5883L_Values
  3607  0CAD  01A4               	clrf	??_Get_HMC5883L_Values+1
  3608  0CAE  082A               	movf	Get_HMC5883L_Values@cval+2,w
  3609  0CAF  00A5               	movwf	??_Get_HMC5883L_Values+2
  3610  0CB0  01A6               	clrf	??_Get_HMC5883L_Values+3
  3611  0CB1  0825               	movf	??_Get_HMC5883L_Values+2,w
  3612  0CB2  00A6               	movwf	??_Get_HMC5883L_Values+3
  3613  0CB3  01A5               	clrf	??_Get_HMC5883L_Values+2
  3614  0CB4  0823               	movf	??_Get_HMC5883L_Values,w
  3615  0CB5  0425               	iorwf	??_Get_HMC5883L_Values+2,w
  3616  0CB6  0021               	movlb	1	; select bank1
  3617  0CB7  00D8               	movwf	(_CurrentData^(0+128)+24)
  3618  0CB8  0020               	movlb	0	; select bank0
  3619  0CB9  0824               	movf	??_Get_HMC5883L_Values+1,w
  3620  0CBA  0426               	iorwf	??_Get_HMC5883L_Values+3,w
  3621  0CBB  0021               	movlb	1	; select bank1
  3622  0CBC  00D9               	movwf	((_CurrentData+1)^(0+128)+24)
  3623                           
  3624                           ;HMC5883L.c: 29: CurrentData.MagY = ((cval[4]<<8)|cval[5]);
  3625  0CBD  0020               	movlb	0	; select bank0
  3626  0CBE  082D               	movf	Get_HMC5883L_Values@cval+5,w
  3627  0CBF  00A3               	movwf	??_Get_HMC5883L_Values
  3628  0CC0  01A4               	clrf	??_Get_HMC5883L_Values+1
  3629  0CC1  082C               	movf	Get_HMC5883L_Values@cval+4,w
  3630  0CC2  00A5               	movwf	??_Get_HMC5883L_Values+2
  3631  0CC3  01A6               	clrf	??_Get_HMC5883L_Values+3
  3632  0CC4  0825               	movf	??_Get_HMC5883L_Values+2,w
  3633  0CC5  00A6               	movwf	??_Get_HMC5883L_Values+3
  3634  0CC6  01A5               	clrf	??_Get_HMC5883L_Values+2
  3635  0CC7  0823               	movf	??_Get_HMC5883L_Values,w
  3636  0CC8  0425               	iorwf	??_Get_HMC5883L_Values+2,w
  3637  0CC9  0021               	movlb	1	; select bank1
  3638  0CCA  00D6               	movwf	(_CurrentData^(0+128)+22)
  3639  0CCB  0020               	movlb	0	; select bank0
  3640  0CCC  0824               	movf	??_Get_HMC5883L_Values+1,w
  3641  0CCD  0426               	iorwf	??_Get_HMC5883L_Values+3,w
  3642  0CCE  0021               	movlb	1	; select bank1
  3643  0CCF  00D7               	movwf	((_CurrentData+1)^(0+128)+22)
  3644  0CD0  0008               	return
  3645  0CD1                     __end_of_Get_HMC5883L_Values:	
  3646                           
  3647                           	psect	text14
  3648  090F                     __ptext14:	
  3649 ;; *************** function _LDByteWriteI2C *****************
  3650 ;; Defined at:
  3651 ;;		line 99 in file "i2cMaster.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  3654 ;;  LowAdd          1    6[COMMON] unsigned char 
  3655 ;;  data            1    7[COMMON] unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  i2cSlaveAddr    1    2[BANK0 ] unsigned char 
  3658 ;;  ErrorCode       2    0[BANK0 ] unsigned int 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3668 ;;      Params:         2       0       0       0
  3669 ;;      Locals:         0       3       0       0
  3670 ;;      Temps:          0       0       0       0
  3671 ;;      Totals:         2       3       0       0
  3672 ;;Total ram usage:        5 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    3
  3675 ;; This function calls:
  3676 ;;		_i2c_Address
  3677 ;;		_i2c_Start
  3678 ;;		_i2c_Stop
  3679 ;;		_i2c_Write
  3680 ;; This function is called by:
  3681 ;;		_Setup_MPU6050
  3682 ;;		_Setup_HMC5883L
  3683 ;;		_Get_HMC5883L_Values
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _LDByteWriteI2C
  3689  090F                     _LDByteWriteI2C:	
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _LDByteWriteI2C: [wreg+status,2+status,0+pclath+cstack]
  3693                           ;LDByteWriteI2C@i2cSlaveAddress stored from wreg
  3694  090F  0020               	movlb	0	; select bank0
  3695  0910  00A2               	movwf	LDByteWriteI2C@i2cSlaveAddress
  3696                           
  3697                           ;i2cMaster.c: 101: unsigned int ErrorCode=0;
  3698  0911  01A0               	clrf	LDByteWriteI2C@ErrorCode
  3699  0912  01A1               	clrf	LDByteWriteI2C@ErrorCode+1
  3700                           
  3701                           ;i2cMaster.c: 103: i2c_Start();
  3702  0913  3188  2042  3189   	fcall	_i2c_Start
  3703                           
  3704                           ;i2cMaster.c: 104: i2c_Address(i2cSlaveAddress,0x00);
  3705  0916  01F2               	clrf	i2c_Address@mode
  3706  0917  0020               	movlb	0	; select bank0
  3707  0918  0822               	movf	LDByteWriteI2C@i2cSlaveAddress,w
  3708  0919  3188  2074  3189   	fcall	_i2c_Address
  3709                           
  3710                           ;i2cMaster.c: 105: i2c_Write(LowAdd);
  3711  091C  0876               	movf	LDByteWriteI2C@LowAdd,w
  3712  091D  3188  2052  3189   	fcall	_i2c_Write
  3713                           
  3714                           ;i2cMaster.c: 106: i2c_Write(data);
  3715  0920  0877               	movf	LDByteWriteI2C@data,w
  3716  0921  3188  2052  3189   	fcall	_i2c_Write
  3717                           
  3718                           ;i2cMaster.c: 107: i2c_Stop();
  3719  0924  3188  2047         	fcall	_i2c_Stop
  3720  0926  0008               	return
  3721  0927                     __end_of_LDByteWriteI2C:	
  3722                           
  3723                           	psect	text15
  3724  05F6                     __ptext15:	
  3725 ;; *************** function _Get_Accel_Values *****************
  3726 ;; Defined at:
  3727 ;;		line 146 in file "MPU6050.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  cval           14    6[BANK0 ] unsigned char [14]
  3732 ;; Return value:  Size  Location     Type
  3733 ;;		None               void
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3741 ;;      Params:         0       0       0       0
  3742 ;;      Locals:         0      14       0       0
  3743 ;;      Temps:          0       5       0       0
  3744 ;;      Totals:         0      19       0       0
  3745 ;;Total ram usage:       19 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    4
  3748 ;; This function calls:
  3749 ;;		_LDByteReadI2C
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _Get_Accel_Values
  3757  05F6                     _Get_Accel_Values:	
  3758                           
  3759                           ;MPU6050.c: 148: char cval[14];
  3760                           ;MPU6050.c: 149: LDByteReadI2C(0x68, 0x3B, cval, 14);
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _Get_Accel_Values: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3764  05F6  303B               	movlw	59
  3765  05F7  0020               	movlb	0	; select bank0
  3766  05F8  00A1               	movwf	??_Get_Accel_Values
  3767  05F9  0821               	movf	??_Get_Accel_Values,w
  3768  05FA  00F6               	movwf	LDByteReadI2C@Address
  3769  05FB  3026               	movlw	(low (Get_Accel_Values@cval| 0))& (0+255)
  3770  05FC  00A2               	movwf	??_Get_Accel_Values+1
  3771  05FD  0822               	movf	??_Get_Accel_Values+1,w
  3772  05FE  00F7               	movwf	LDByteReadI2C@Data
  3773  05FF  300E               	movlw	14
  3774  0600  00A3               	movwf	??_Get_Accel_Values+2
  3775  0601  0823               	movf	??_Get_Accel_Values+2,w
  3776  0602  00F8               	movwf	LDByteReadI2C@Length
  3777  0603  3068               	movlw	104
  3778  0604  318B  231C  3185   	fcall	_LDByteReadI2C
  3779                           
  3780                           ;MPU6050.c: 150: (GIE = 0);
  3781  0607  138B               	bcf	11,7	;volatile
  3782                           
  3783                           ;MPU6050.c: 151: CurrentData.Timer = Timerms;
  3784  0608  087B               	movf	_Timerms+1,w	;volatile
  3785  0609  0021               	movlb	1	; select bank1
  3786  060A  00CF               	movwf	((_CurrentData+1)^(0+128)+14)
  3787  060B  087A               	movf	_Timerms,w	;volatile
  3788  060C  00CE               	movwf	(_CurrentData^(0+128)+14)
  3789                           
  3790                           ;MPU6050.c: 152: (GIE = 1);
  3791  060D  178B               	bsf	11,7	;volatile
  3792                           
  3793                           ;MPU6050.c: 153: CurrentData.Gx = ((cval[0]<<8)|cval[1]);
  3794  060E  0020               	movlb	0	; select bank0
  3795  060F  0827               	movf	Get_Accel_Values@cval+1,w
  3796  0610  00A1               	movwf	??_Get_Accel_Values
  3797  0611  01A2               	clrf	??_Get_Accel_Values+1
  3798  0612  0826               	movf	Get_Accel_Values@cval,w
  3799  0613  00A3               	movwf	??_Get_Accel_Values+2
  3800  0614  01A4               	clrf	??_Get_Accel_Values+3
  3801  0615  0823               	movf	??_Get_Accel_Values+2,w
  3802  0616  00A4               	movwf	??_Get_Accel_Values+3
  3803  0617  01A3               	clrf	??_Get_Accel_Values+2
  3804  0618  0821               	movf	??_Get_Accel_Values,w
  3805  0619  0423               	iorwf	??_Get_Accel_Values+2,w
  3806  061A  0021               	movlb	1	; select bank1
  3807  061B  00C0               	movwf	_CurrentData^(0+128)
  3808  061C  0020               	movlb	0	; select bank0
  3809  061D  0822               	movf	??_Get_Accel_Values+1,w
  3810  061E  0424               	iorwf	??_Get_Accel_Values+3,w
  3811  061F  0021               	movlb	1	; select bank1
  3812  0620  00C1               	movwf	(_CurrentData+1)^(0+128)
  3813                           
  3814                           ;MPU6050.c: 154: CurrentData.Gy = ((cval[2]<<8)|cval[3]);
  3815  0621  0020               	movlb	0	; select bank0
  3816  0622  0829               	movf	Get_Accel_Values@cval+3,w
  3817  0623  00A1               	movwf	??_Get_Accel_Values
  3818  0624  01A2               	clrf	??_Get_Accel_Values+1
  3819  0625  0828               	movf	Get_Accel_Values@cval+2,w
  3820  0626  00A3               	movwf	??_Get_Accel_Values+2
  3821  0627  01A4               	clrf	??_Get_Accel_Values+3
  3822  0628  0823               	movf	??_Get_Accel_Values+2,w
  3823  0629  00A4               	movwf	??_Get_Accel_Values+3
  3824  062A  01A3               	clrf	??_Get_Accel_Values+2
  3825  062B  0821               	movf	??_Get_Accel_Values,w
  3826  062C  0423               	iorwf	??_Get_Accel_Values+2,w
  3827  062D  0021               	movlb	1	; select bank1
  3828  062E  00C2               	movwf	(_CurrentData^(0+128)+2)
  3829  062F  0020               	movlb	0	; select bank0
  3830  0630  0822               	movf	??_Get_Accel_Values+1,w
  3831  0631  0424               	iorwf	??_Get_Accel_Values+3,w
  3832  0632  0021               	movlb	1	; select bank1
  3833  0633  00C3               	movwf	((_CurrentData+1)^(0+128)+2)
  3834                           
  3835                           ;MPU6050.c: 155: CurrentData.Gz = ((cval[4]<<8)|cval[5]);
  3836  0634  0020               	movlb	0	; select bank0
  3837  0635  082B               	movf	Get_Accel_Values@cval+5,w
  3838  0636  00A1               	movwf	??_Get_Accel_Values
  3839  0637  01A2               	clrf	??_Get_Accel_Values+1
  3840  0638  082A               	movf	Get_Accel_Values@cval+4,w
  3841  0639  00A3               	movwf	??_Get_Accel_Values+2
  3842  063A  01A4               	clrf	??_Get_Accel_Values+3
  3843  063B  0823               	movf	??_Get_Accel_Values+2,w
  3844  063C  00A4               	movwf	??_Get_Accel_Values+3
  3845  063D  01A3               	clrf	??_Get_Accel_Values+2
  3846  063E  0821               	movf	??_Get_Accel_Values,w
  3847  063F  0423               	iorwf	??_Get_Accel_Values+2,w
  3848  0640  0021               	movlb	1	; select bank1
  3849  0641  00C4               	movwf	(_CurrentData^(0+128)+4)
  3850  0642  0020               	movlb	0	; select bank0
  3851  0643  0822               	movf	??_Get_Accel_Values+1,w
  3852  0644  0424               	iorwf	??_Get_Accel_Values+3,w
  3853  0645  0021               	movlb	1	; select bank1
  3854  0646  00C5               	movwf	((_CurrentData+1)^(0+128)+4)
  3855                           
  3856                           ;MPU6050.c: 156: CurrentData.temp = ((cval[6]<<8)|cval[7]);
  3857  0647  0020               	movlb	0	; select bank0
  3858  0648  082D               	movf	Get_Accel_Values@cval+7,w
  3859  0649  00A1               	movwf	??_Get_Accel_Values
  3860  064A  01A2               	clrf	??_Get_Accel_Values+1
  3861  064B  082C               	movf	Get_Accel_Values@cval+6,w
  3862  064C  00A3               	movwf	??_Get_Accel_Values+2
  3863  064D  01A4               	clrf	??_Get_Accel_Values+3
  3864  064E  0823               	movf	??_Get_Accel_Values+2,w
  3865  064F  00A4               	movwf	??_Get_Accel_Values+3
  3866  0650  01A3               	clrf	??_Get_Accel_Values+2
  3867  0651  0821               	movf	??_Get_Accel_Values,w
  3868  0652  0423               	iorwf	??_Get_Accel_Values+2,w
  3869  0653  0021               	movlb	1	; select bank1
  3870  0654  00C6               	movwf	(_CurrentData^(0+128)+6)
  3871  0655  0020               	movlb	0	; select bank0
  3872  0656  0822               	movf	??_Get_Accel_Values+1,w
  3873  0657  0424               	iorwf	??_Get_Accel_Values+3,w
  3874  0658  0021               	movlb	1	; select bank1
  3875  0659  00C7               	movwf	((_CurrentData+1)^(0+128)+6)
  3876                           
  3877                           ;MPU6050.c: 157: CurrentData.Gyrox = ((cval[8]<<8) | cval[9]);
  3878  065A  0020               	movlb	0	; select bank0
  3879  065B  082F               	movf	Get_Accel_Values@cval+9,w
  3880  065C  00A1               	movwf	??_Get_Accel_Values
  3881  065D  01A2               	clrf	??_Get_Accel_Values+1
  3882  065E  082E               	movf	Get_Accel_Values@cval+8,w
  3883  065F  00A3               	movwf	??_Get_Accel_Values+2
  3884  0660  01A4               	clrf	??_Get_Accel_Values+3
  3885  0661  0823               	movf	??_Get_Accel_Values+2,w
  3886  0662  00A4               	movwf	??_Get_Accel_Values+3
  3887  0663  01A3               	clrf	??_Get_Accel_Values+2
  3888  0664  0821               	movf	??_Get_Accel_Values,w
  3889  0665  0423               	iorwf	??_Get_Accel_Values+2,w
  3890  0666  0021               	movlb	1	; select bank1
  3891  0667  00C8               	movwf	(_CurrentData^(0+128)+8)
  3892  0668  0020               	movlb	0	; select bank0
  3893  0669  0822               	movf	??_Get_Accel_Values+1,w
  3894  066A  0424               	iorwf	??_Get_Accel_Values+3,w
  3895  066B  0021               	movlb	1	; select bank1
  3896  066C  00C9               	movwf	((_CurrentData+1)^(0+128)+8)
  3897                           
  3898                           ;MPU6050.c: 158: CurrentData.Gyroy = ((cval[10]<<8) | cval[11]);
  3899  066D  0020               	movlb	0	; select bank0
  3900  066E  0831               	movf	Get_Accel_Values@cval+11,w
  3901  066F  00A1               	movwf	??_Get_Accel_Values
  3902  0670  01A2               	clrf	??_Get_Accel_Values+1
  3903  0671  0830               	movf	Get_Accel_Values@cval+10,w
  3904  0672  00A3               	movwf	??_Get_Accel_Values+2
  3905  0673  01A4               	clrf	??_Get_Accel_Values+3
  3906  0674  0823               	movf	??_Get_Accel_Values+2,w
  3907  0675  00A4               	movwf	??_Get_Accel_Values+3
  3908  0676  01A3               	clrf	??_Get_Accel_Values+2
  3909  0677  0821               	movf	??_Get_Accel_Values,w
  3910  0678  0423               	iorwf	??_Get_Accel_Values+2,w
  3911  0679  0021               	movlb	1	; select bank1
  3912  067A  00CA               	movwf	(_CurrentData^(0+128)+10)
  3913  067B  0020               	movlb	0	; select bank0
  3914  067C  0822               	movf	??_Get_Accel_Values+1,w
  3915  067D  0424               	iorwf	??_Get_Accel_Values+3,w
  3916  067E  0021               	movlb	1	; select bank1
  3917  067F  00CB               	movwf	((_CurrentData+1)^(0+128)+10)
  3918                           
  3919                           ;MPU6050.c: 159: CurrentData.Gyroz = ((cval[12]<<8) | cval[13]);
  3920  0680  0020               	movlb	0	; select bank0
  3921  0681  0833               	movf	Get_Accel_Values@cval+13,w
  3922  0682  00A1               	movwf	??_Get_Accel_Values
  3923  0683  01A2               	clrf	??_Get_Accel_Values+1
  3924  0684  0832               	movf	Get_Accel_Values@cval+12,w
  3925  0685  00A3               	movwf	??_Get_Accel_Values+2
  3926  0686  01A4               	clrf	??_Get_Accel_Values+3
  3927  0687  0823               	movf	??_Get_Accel_Values+2,w
  3928  0688  00A4               	movwf	??_Get_Accel_Values+3
  3929  0689  01A3               	clrf	??_Get_Accel_Values+2
  3930  068A  0821               	movf	??_Get_Accel_Values,w
  3931  068B  0423               	iorwf	??_Get_Accel_Values+2,w
  3932  068C  0021               	movlb	1	; select bank1
  3933  068D  00CC               	movwf	(_CurrentData^(0+128)+12)
  3934  068E  0020               	movlb	0	; select bank0
  3935  068F  0822               	movf	??_Get_Accel_Values+1,w
  3936  0690  0424               	iorwf	??_Get_Accel_Values+3,w
  3937  0691  0021               	movlb	1	; select bank1
  3938  0692  00CD               	movwf	((_CurrentData+1)^(0+128)+12)
  3939  0693  0008               	return
  3940  0694                     __end_of_Get_Accel_Values:	
  3941                           
  3942                           	psect	text16
  3943  0B1C                     __ptext16:	
  3944 ;; *************** function _LDByteReadI2C *****************
  3945 ;; Defined at:
  3946 ;;		line 117 in file "i2cMaster.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  i2cSlaveAddr    1    wreg     unsigned char 
  3949 ;;  Address         1    6[COMMON] unsigned char 
  3950 ;;  Data            1    7[COMMON] PTR unsigned char 
  3951 ;;		 -> Get_HMC5883L_Values@cval(6), GotInt_MPU6050@uc_temp(1), Get_Accel_Values@cval(14), MPU6050_Test_I2C@Data(1), 
  3952 ;;  Length          1    8[COMMON] unsigned char 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  i2cSlaveAddr    1    0[BANK0 ] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3964 ;;      Params:         3       0       0       0
  3965 ;;      Locals:         0       1       0       0
  3966 ;;      Temps:          1       0       0       0
  3967 ;;      Totals:         4       1       0       0
  3968 ;;Total ram usage:        5 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		_i2c_Address
  3973 ;;		_i2c_Read
  3974 ;;		_i2c_Restart
  3975 ;;		_i2c_Start
  3976 ;;		_i2c_Stop
  3977 ;;		_i2c_Write
  3978 ;; This function is called by:
  3979 ;;		_MPU6050_Test_I2C
  3980 ;;		_Get_Accel_Values
  3981 ;;		_GotInt_MPU6050
  3982 ;;		_Get_HMC5883L_Values
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _LDByteReadI2C
  3988  0B1C                     _LDByteReadI2C:	
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _LDByteReadI2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3992                           ;LDByteReadI2C@i2cSlaveAddress stored from wreg
  3993  0B1C  0020               	movlb	0	; select bank0
  3994  0B1D  00A0               	movwf	LDByteReadI2C@i2cSlaveAddress
  3995                           
  3996                           ;i2cMaster.c: 119: i2c_Start();
  3997  0B1E  3188  2042  318B   	fcall	_i2c_Start
  3998                           
  3999                           ;i2cMaster.c: 120: i2c_Address(i2cSlaveAddress, 0x00);
  4000  0B21  01F2               	clrf	i2c_Address@mode
  4001  0B22  0020               	movlb	0	; select bank0
  4002  0B23  0820               	movf	LDByteReadI2C@i2cSlaveAddress,w
  4003  0B24  3188  2074  318B   	fcall	_i2c_Address
  4004                           
  4005                           ;i2cMaster.c: 121: i2c_Write(Address);
  4006  0B27  0876               	movf	LDByteReadI2C@Address,w
  4007  0B28  3188  2052  318B   	fcall	_i2c_Write
  4008                           
  4009                           ;i2cMaster.c: 122: i2c_Restart();
  4010  0B2B  3188  203D  318B   	fcall	_i2c_Restart
  4011                           
  4012                           ;i2cMaster.c: 123: i2c_Address(i2cSlaveAddress, 0x01);
  4013  0B2E  01F2               	clrf	i2c_Address@mode
  4014  0B2F  0AF2               	incf	i2c_Address@mode,f
  4015  0B30  0020               	movlb	0	; select bank0
  4016  0B31  0820               	movf	LDByteReadI2C@i2cSlaveAddress,w
  4017  0B32  3188  2074  318B   	fcall	_i2c_Address
  4018  0B35                     l3164:	
  4019                           ;i2cMaster.c: 125: while(Length-- > 1)
  4020                           
  4021  0B35  0878               	movf	LDByteReadI2C@Length,w
  4022  0B36  03F8               	decf	LDByteReadI2C@Length,f
  4023  0B37  00F9               	movwf	??_LDByteReadI2C
  4024  0B38  3002               	movlw	2
  4025  0B39  0279               	subwf	??_LDByteReadI2C,w
  4026  0B3A  1C03               	btfss	3,0
  4027  0B3B  2B4B               	goto	l3166
  4028                           
  4029                           ;i2cMaster.c: 126: *(Data++) = i2c_Read(1);
  4030  0B3C  3001               	movlw	1
  4031  0B3D  3189  213F  318B   	fcall	_i2c_Read
  4032  0B40  00F9               	movwf	??_LDByteReadI2C
  4033  0B41  0877               	movf	LDByteReadI2C@Data,w
  4034  0B42  0086               	movwf	6
  4035  0B43  0187               	clrf	7
  4036  0B44  0879               	movf	??_LDByteReadI2C,w
  4037  0B45  0081               	movwf	1
  4038  0B46  3001               	movlw	1
  4039  0B47  00F9               	movwf	??_LDByteReadI2C
  4040  0B48  0879               	movf	??_LDByteReadI2C,w
  4041  0B49  07F7               	addwf	LDByteReadI2C@Data,f
  4042  0B4A  2B35               	goto	l3164
  4043  0B4B                     l3166:	
  4044                           
  4045                           ;i2cMaster.c: 127: *(Data++) = i2c_Read(0);
  4046  0B4B  3000               	movlw	0
  4047  0B4C  3189  213F  318B   	fcall	_i2c_Read
  4048  0B4F  00F9               	movwf	??_LDByteReadI2C
  4049  0B50  0877               	movf	LDByteReadI2C@Data,w
  4050  0B51  0086               	movwf	6
  4051  0B52  0187               	clrf	7
  4052  0B53  0879               	movf	??_LDByteReadI2C,w
  4053  0B54  0081               	movwf	1
  4054  0B55  3001               	movlw	1
  4055  0B56  00F9               	movwf	??_LDByteReadI2C
  4056  0B57  0879               	movf	??_LDByteReadI2C,w
  4057  0B58  07F7               	addwf	LDByteReadI2C@Data,f
  4058                           
  4059                           ;i2cMaster.c: 128: i2c_Stop();
  4060  0B59  3188  2047         	fcall	_i2c_Stop
  4061  0B5B  0008               	return
  4062  0B5C                     __end_of_LDByteReadI2C:	
  4063                           
  4064                           	psect	text17
  4065  0852                     __ptext17:	
  4066 ;; *************** function _i2c_Write *****************
  4067 ;; Defined at:
  4068 ;;		line 55 in file "i2cMaster.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  data            1    wreg     unsigned char 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  data            1    2[COMMON] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;		None               void
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, pclath, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4082 ;;      Params:         0       0       0       0
  4083 ;;      Locals:         1       0       0       0
  4084 ;;      Temps:          0       0       0       0
  4085 ;;      Totals:         1       0       0       0
  4086 ;;Total ram usage:        1 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    2
  4089 ;; This function calls:
  4090 ;;		_i2c_Wait
  4091 ;; This function is called by:
  4092 ;;		_LDByteWriteI2C
  4093 ;;		_LDByteReadI2C
  4094 ;;		_LDSingleByteReadI2C
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _i2c_Write
  4100  0852                     _i2c_Write:	
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  4104                           ;i2c_Write@data stored from wreg
  4105  0852  00F2               	movwf	i2c_Write@data
  4106                           
  4107                           ;i2cMaster.c: 57: i2c_Wait();
  4108  0853  3188  2060         	fcall	_i2c_Wait
  4109                           
  4110                           ;i2cMaster.c: 58: SSPBUF = data;
  4111  0855  0872               	movf	i2c_Write@data,w
  4112  0856  0024               	movlb	4	; select bank4
  4113  0857  0091               	movwf	17	;volatile
  4114  0858  0008               	return
  4115  0859                     __end_of_i2c_Write:	
  4116                           
  4117                           	psect	text18
  4118  0847                     __ptext18:	
  4119 ;; *************** function _i2c_Stop *****************
  4120 ;; Defined at:
  4121 ;;		line 48 in file "i2cMaster.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;		None               void
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4135 ;;      Params:         0       0       0       0
  4136 ;;      Locals:         0       0       0       0
  4137 ;;      Temps:          0       0       0       0
  4138 ;;      Totals:         0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    2
  4142 ;; This function calls:
  4143 ;;		_i2c_Wait
  4144 ;; This function is called by:
  4145 ;;		_LDByteWriteI2C
  4146 ;;		_LDByteReadI2C
  4147 ;;		_LDSingleByteReadI2C
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function _i2c_Stop
  4153  0847                     _i2c_Stop:	
  4154                           
  4155                           ;i2cMaster.c: 50: i2c_Wait();
  4156                           
  4157                           ;incstack = 0
  4158                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  4159  0847  3188  2060         	fcall	_i2c_Wait
  4160                           
  4161                           ;i2cMaster.c: 51: PEN=1;
  4162  0849  0024               	movlb	4	; select bank4
  4163  084A  1516               	bsf	22,2	;volatile
  4164  084B  0008               	return
  4165  084C                     __end_of_i2c_Stop:	
  4166                           
  4167                           	psect	text19
  4168  0842                     __ptext19:	
  4169 ;; *************** function _i2c_Start *****************
  4170 ;; Defined at:
  4171 ;;		line 34 in file "i2cMaster.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;		None               void
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4185 ;;      Params:         0       0       0       0
  4186 ;;      Locals:         0       0       0       0
  4187 ;;      Temps:          0       0       0       0
  4188 ;;      Totals:         0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		_i2c_Wait
  4194 ;; This function is called by:
  4195 ;;		_LDByteWriteI2C
  4196 ;;		_LDByteReadI2C
  4197 ;;		_LDSingleByteReadI2C
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _i2c_Start
  4203  0842                     _i2c_Start:	
  4204                           
  4205                           ;i2cMaster.c: 36: i2c_Wait();
  4206                           
  4207                           ;incstack = 0
  4208                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  4209  0842  3188  2060         	fcall	_i2c_Wait
  4210                           
  4211                           ;i2cMaster.c: 37: SEN=1;
  4212  0844  0024               	movlb	4	; select bank4
  4213  0845  1416               	bsf	22,0	;volatile
  4214  0846  0008               	return
  4215  0847                     __end_of_i2c_Start:	
  4216                           
  4217                           	psect	text20
  4218  083D                     __ptext20:	
  4219 ;; *************** function _i2c_Restart *****************
  4220 ;; Defined at:
  4221 ;;		line 41 in file "i2cMaster.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4235 ;;      Params:         0       0       0       0
  4236 ;;      Locals:         0       0       0       0
  4237 ;;      Temps:          0       0       0       0
  4238 ;;      Totals:         0       0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    2
  4242 ;; This function calls:
  4243 ;;		_i2c_Wait
  4244 ;; This function is called by:
  4245 ;;		_LDByteReadI2C
  4246 ;;		_LDSingleByteReadI2C
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _i2c_Restart
  4252  083D                     _i2c_Restart:	
  4253                           
  4254                           ;i2cMaster.c: 42: i2c_Wait();
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  4258  083D  3188  2060         	fcall	_i2c_Wait
  4259                           
  4260                           ;i2cMaster.c: 43: RSEN=1;
  4261  083F  0024               	movlb	4	; select bank4
  4262  0840  1496               	bsf	22,1	;volatile
  4263  0841  0008               	return
  4264  0842                     __end_of_i2c_Restart:	
  4265                           
  4266                           	psect	text21
  4267  093F                     __ptext21:	
  4268 ;; *************** function _i2c_Read *****************
  4269 ;; Defined at:
  4270 ;;		line 74 in file "i2cMaster.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  ack             1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  ack             1    3[COMMON] unsigned char 
  4275 ;;  i2cReadData     1    4[COMMON] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4285 ;;      Params:         0       0       0       0
  4286 ;;      Locals:         2       0       0       0
  4287 ;;      Temps:          1       0       0       0
  4288 ;;      Totals:         3       0       0       0
  4289 ;;Total ram usage:        3 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		_i2c_Wait
  4294 ;; This function is called by:
  4295 ;;		_LDByteReadI2C
  4296 ;;		_LDSingleByteReadI2C
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _i2c_Read
  4302  093F                     _i2c_Read:	
  4303                           
  4304                           ;incstack = 0
  4305                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  4306                           ;i2c_Read@ack stored from wreg
  4307  093F  00F3               	movwf	i2c_Read@ack
  4308                           
  4309                           ;i2cMaster.c: 79: unsigned char i2cReadData;
  4310                           ;i2cMaster.c: 81: i2c_Wait();
  4311  0940  3188  2060  3189   	fcall	_i2c_Wait
  4312                           
  4313                           ;i2cMaster.c: 82: RCEN=1;
  4314  0943  0024               	movlb	4	; select bank4
  4315  0944  1596               	bsf	22,3	;volatile
  4316                           
  4317                           ;i2cMaster.c: 83: i2c_Wait();
  4318  0945  3188  2060  3189   	fcall	_i2c_Wait
  4319                           
  4320                           ;i2cMaster.c: 84: i2cReadData = SSPBUF;
  4321  0948  0024               	movlb	4	; select bank4
  4322  0949  0811               	movf	17,w	;volatile
  4323  094A  00F2               	movwf	??_i2c_Read
  4324  094B  0872               	movf	??_i2c_Read,w
  4325  094C  00F4               	movwf	i2c_Read@i2cReadData
  4326                           
  4327                           ;i2cMaster.c: 85: i2c_Wait();
  4328  094D  3188  2060  3189   	fcall	_i2c_Wait
  4329                           
  4330                           ;i2cMaster.c: 86: if ( ack ) ACKDT=0;
  4331  0950  0873               	movf	i2c_Read@ack,w
  4332  0951  1903               	btfsc	3,2
  4333  0952  2956               	goto	l55
  4334  0953  0024               	movlb	4	; select bank4
  4335  0954  1296               	bcf	22,5	;volatile
  4336  0955  2958               	goto	l56
  4337  0956                     l55:	
  4338                           
  4339                           ;i2cMaster.c: 87: else ACKDT=1;
  4340  0956  0024               	movlb	4	; select bank4
  4341  0957  1696               	bsf	22,5	;volatile
  4342  0958                     l56:	
  4343                           
  4344                           ;i2cMaster.c: 88: ACKEN=1;
  4345  0958  1616               	bsf	22,4	;volatile
  4346                           
  4347                           ;i2cMaster.c: 90: return( i2cReadData );
  4348  0959  0874               	movf	i2c_Read@i2cReadData,w
  4349  095A  0008               	return
  4350  095B                     __end_of_i2c_Read:	
  4351                           
  4352                           	psect	text22
  4353  0874                     __ptext22:	
  4354 ;; *************** function _i2c_Address *****************
  4355 ;; Defined at:
  4356 ;;		line 63 in file "i2cMaster.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  address         1    wreg     unsigned char 
  4359 ;;  mode            1    2[COMMON] unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  address         1    4[COMMON] unsigned char 
  4362 ;;  l_address       1    5[COMMON] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;		None               void
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4372 ;;      Params:         1       0       0       0
  4373 ;;      Locals:         2       0       0       0
  4374 ;;      Temps:          1       0       0       0
  4375 ;;      Totals:         4       0       0       0
  4376 ;;Total ram usage:        4 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    2
  4379 ;; This function calls:
  4380 ;;		_i2c_Wait
  4381 ;; This function is called by:
  4382 ;;		_LDByteWriteI2C
  4383 ;;		_LDByteReadI2C
  4384 ;;		_LDSingleByteReadI2C
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           
  4389                           ;psect for function _i2c_Address
  4390  0874                     _i2c_Address:	
  4391                           
  4392                           ;incstack = 0
  4393                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  4394                           ;i2c_Address@address stored from wreg
  4395  0874  00F4               	movwf	i2c_Address@address
  4396                           
  4397                           ;i2cMaster.c: 65: unsigned char l_address;
  4398                           ;i2cMaster.c: 67: l_address=address<<1;
  4399  0875  3574               	lslf	i2c_Address@address,w
  4400  0876  00F3               	movwf	??_i2c_Address
  4401  0877  0873               	movf	??_i2c_Address,w
  4402  0878  00F5               	movwf	i2c_Address@l_address
  4403                           
  4404                           ;i2cMaster.c: 68: l_address+=mode;
  4405  0879  0872               	movf	i2c_Address@mode,w
  4406  087A  00F3               	movwf	??_i2c_Address
  4407  087B  0873               	movf	??_i2c_Address,w
  4408  087C  07F5               	addwf	i2c_Address@l_address,f
  4409                           
  4410                           ;i2cMaster.c: 69: i2c_Wait();
  4411  087D  3188  2060         	fcall	_i2c_Wait
  4412                           
  4413                           ;i2cMaster.c: 70: SSPBUF = l_address;
  4414  087F  0875               	movf	i2c_Address@l_address,w
  4415  0880  0024               	movlb	4	; select bank4
  4416  0881  0091               	movwf	17	;volatile
  4417  0882  0008               	return
  4418  0883                     __end_of_i2c_Address:	
  4419                           
  4420                           	psect	text23
  4421  0860                     __ptext23:	
  4422 ;; *************** function _i2c_Wait *****************
  4423 ;; Defined at:
  4424 ;;		line 29 in file "i2cMaster.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;		None               void
  4431 ;; Registers used:
  4432 ;;		wreg, status,2
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4438 ;;      Params:         0       0       0       0
  4439 ;;      Locals:         0       0       0       0
  4440 ;;      Temps:          0       0       0       0
  4441 ;;      Totals:         0       0       0       0
  4442 ;;Total ram usage:        0 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_i2c_Start
  4449 ;;		_i2c_Restart
  4450 ;;		_i2c_Stop
  4451 ;;		_i2c_Write
  4452 ;;		_i2c_Address
  4453 ;;		_i2c_Read
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _i2c_Wait
  4459  0860                     _i2c_Wait:	
  4460  0860                     l2948:	
  4461                           ;i2cMaster.c: 30: while ( ( SSP1CON2 & 0x1F ) || ( SSPSTAT & 0x04 ) );
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in _i2c_Wait: [wreg+status,2]
  4465                           
  4466  0860  0024               	movlb	4	; select bank4
  4467  0861  0816               	movf	22,w	;volatile
  4468  0862  391F               	andlw	31
  4469  0863  1D03               	btfss	3,2
  4470  0864  2860               	goto	l2948
  4471  0865  1D14               	btfss	20,2	;volatile
  4472  0866  0008               	return
  4473  0867  2860               	goto	l2948
  4474  0868                     __end_of_i2c_Wait:	
  4475                           
  4476                           	psect	text24
  4477  0ADD                     __ptext24:	
  4478 ;; *************** function _FindDeltaG *****************
  4479 ;; Defined at:
  4480 ;;		line 449 in file "blueGyro.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      unsigned char 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, pclath
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4494 ;;      Params:         0       0       0       0
  4495 ;;      Locals:         0       0       0       0
  4496 ;;      Temps:          4       0       0       0
  4497 ;;      Totals:         4       0       0       0
  4498 ;;Total ram usage:        4 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _FindDeltaG
  4510  0ADD                     _FindDeltaG:	
  4511                           
  4512                           ;blueGyro.c: 453: const long HG = 3072L * 3072L;
  4513                           ;blueGyro.c: 454: const long LG = 1638L * 1638L;
  4514                           ;blueGyro.c: 456: if(CurrentData.SumSquare > HG)
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _FindDeltaG: [wreg-fsr0h+pclath]
  4518  0ADD  3024               	movlw	low (FindDeltaG@HG| (0+32768))
  4519  0ADE  0084               	movwf	4
  4520  0ADF  3084               	movlw	high (FindDeltaG@HG| (0+32768))
  4521  0AE0  0085               	movwf	5
  4522  0AE1  3F00               	moviw [0]fsr0
  4523  0AE2  00F2               	movwf	??_FindDeltaG
  4524  0AE3  3F01               	moviw [1]fsr0
  4525  0AE4  00F3               	movwf	??_FindDeltaG+1
  4526  0AE5  3F02               	moviw [2]fsr0
  4527  0AE6  00F4               	movwf	??_FindDeltaG+2
  4528  0AE7  3F03               	moviw [3]fsr0
  4529  0AE8  00F5               	movwf	??_FindDeltaG+3
  4530  0AE9  0021               	movlb	1	; select bank1
  4531  0AEA  0853               	movf	((_CurrentData+3)^(0+128)+16),w
  4532  0AEB  0275               	subwf	??_FindDeltaG+3,w
  4533  0AEC  1D03               	skipz
  4534  0AED  2AF8               	goto	u3215
  4535  0AEE  0852               	movf	((_CurrentData+2)^(0+128)+16),w
  4536  0AEF  0274               	subwf	??_FindDeltaG+2,w
  4537  0AF0  1D03               	skipz
  4538  0AF1  2AF8               	goto	u3215
  4539  0AF2  0851               	movf	((_CurrentData+1)^(0+128)+16),w
  4540  0AF3  0273               	subwf	??_FindDeltaG+1,w
  4541  0AF4  1D03               	skipz
  4542  0AF5  2AF8               	goto	u3215
  4543  0AF6  0850               	movf	(_CurrentData^(0+128)+16),w
  4544  0AF7  0272               	subwf	??_FindDeltaG,w
  4545  0AF8                     u3215:	
  4546  0AF8  1803               	skipnc
  4547  0AF9  2AFC               	goto	l3408
  4548                           
  4549                           ;blueGyro.c: 457: return 1;
  4550  0AFA  3001               	movlw	1
  4551  0AFB  0008               	return
  4552  0AFC                     l3408:	
  4553                           
  4554                           ;blueGyro.c: 458: if(CurrentData.SumSquare < LG)
  4555  0AFC  3028               	movlw	low (FindDeltaG@LG| (0+32768))
  4556  0AFD  0084               	movwf	4
  4557  0AFE  3084               	movlw	high (FindDeltaG@LG| (0+32768))
  4558  0AFF  0085               	movwf	5
  4559  0B00  3F00               	moviw [0]fsr0
  4560  0B01  00F2               	movwf	??_FindDeltaG
  4561  0B02  3F01               	moviw [1]fsr0
  4562  0B03  00F3               	movwf	??_FindDeltaG+1
  4563  0B04  3F02               	moviw [2]fsr0
  4564  0B05  00F4               	movwf	??_FindDeltaG+2
  4565  0B06  3F03               	moviw [3]fsr0
  4566  0B07  00F5               	movwf	??_FindDeltaG+3
  4567  0B08  0875               	movf	??_FindDeltaG+3,w
  4568  0B09  0253               	subwf	((_CurrentData+3)^(0+128)+16),w
  4569  0B0A  1D03               	skipz
  4570  0B0B  2B16               	goto	u3225
  4571  0B0C  0874               	movf	??_FindDeltaG+2,w
  4572  0B0D  0252               	subwf	((_CurrentData+2)^(0+128)+16),w
  4573  0B0E  1D03               	skipz
  4574  0B0F  2B16               	goto	u3225
  4575  0B10  0873               	movf	??_FindDeltaG+1,w
  4576  0B11  0251               	subwf	((_CurrentData+1)^(0+128)+16),w
  4577  0B12  1D03               	skipz
  4578  0B13  2B16               	goto	u3225
  4579  0B14  0872               	movf	??_FindDeltaG,w
  4580  0B15  0250               	subwf	(_CurrentData^(0+128)+16),w
  4581  0B16                     u3225:	
  4582  0B16  1803               	skipnc
  4583  0B17  2B1A               	goto	l3414
  4584                           
  4585                           ;blueGyro.c: 459: return 1;
  4586  0B18  3001               	movlw	1
  4587  0B19  0008               	return
  4588  0B1A                     l3414:	
  4589                           
  4590                           ;blueGyro.c: 460: return 0;
  4591  0B1A  3000               	movlw	0
  4592  0B1B  0008               	return
  4593  0B1C                     __end_of_FindDeltaG:	
  4594                           
  4595                           	psect	text25
  4596  02A1                     __ptext25:	
  4597 ;; *************** function _DisplayInfo *****************
  4598 ;; Defined at:
  4599 ;;		line 465 in file "blueGyro.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  cz              2   62[BANK0 ] PTR const unsigned char 
  4604 ;;		 -> STR_5(4), 
  4605 ;;  cy              2   60[BANK0 ] PTR const unsigned char 
  4606 ;;		 -> STR_4(4), 
  4607 ;;  Gt              2   58[BANK0 ] unsigned short 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;		None               void
  4610 ;; Registers used:
  4611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4617 ;;      Params:         0       0       0       0
  4618 ;;      Locals:         0       6       0       0
  4619 ;;      Temps:          0       0       0       0
  4620 ;;      Totals:         0       6       0       0
  4621 ;;Total ram usage:        6 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    6
  4624 ;; This function calls:
  4625 ;;		_CalculateSumOfSquares
  4626 ;;		_GetGyroWithOffset
  4627 ;;		_cputs
  4628 ;;		_isqrt
  4629 ;;		_printGForce
  4630 ;;		_printGyro
  4631 ;;		_printUShort
  4632 ;;		_printValue
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _DisplayInfo
  4640  02A1                     _DisplayInfo:	
  4641                           
  4642                           ;blueGyro.c: 467: unsigned short Gt;
  4643                           ;blueGyro.c: 469: const char * cy=" y=";
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in _DisplayInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4647  02A1  3005               	movlw	low (STR_4| (0+32768))
  4648  02A2  0020               	movlb	0	; select bank0
  4649  02A3  00DC               	movwf	DisplayInfo@cy
  4650  02A4  3085               	movlw	high (STR_4| (0+32768))
  4651  02A5  00DD               	movwf	DisplayInfo@cy+1
  4652                           
  4653                           ;blueGyro.c: 470: const char * cz=" z=";
  4654  02A6  3009               	movlw	low (STR_5| (0+32768))
  4655  02A7  00DE               	movwf	DisplayInfo@cz
  4656  02A8  3085               	movlw	high (STR_5| (0+32768))
  4657  02A9  00DF               	movwf	DisplayInfo@cz+1
  4658                           
  4659                           ;blueGyro.c: 473: CalculateSumOfSquares();
  4660  02AA  3185  250D  3182   	fcall	_CalculateSumOfSquares
  4661                           
  4662                           ;blueGyro.c: 475: cputs(" Time(ms)=");
  4663  02AD  30BD               	movlw	low (STR_6| (0+32768))
  4664  02AE  00F5               	movwf	cputs@s
  4665  02AF  3084               	movlw	high (STR_6| (0+32768))
  4666  02B0  00F6               	movwf	cputs@s+1
  4667  02B1  3188  20A5  3182   	fcall	_cputs
  4668                           
  4669                           ;blueGyro.c: 476: printUShort(CurrentData.Timer);
  4670  02B4  0021               	movlb	1	; select bank1
  4671  02B5  084F               	movf	((_CurrentData+1)^(0+128)+14),w
  4672  02B6  0020               	movlb	0	; select bank0
  4673  02B7  00AA               	movwf	printUShort@value+1
  4674  02B8  0021               	movlb	1	; select bank1
  4675  02B9  084E               	movf	(_CurrentData^(0+128)+14),w
  4676  02BA  0020               	movlb	0	; select bank0
  4677  02BB  00A9               	movwf	printUShort@value
  4678  02BC  3188  20B9  3182   	fcall	_printUShort
  4679                           
  4680                           ;blueGyro.c: 477: cputs(" G x=");
  4681  02BF  30F3               	movlw	low (STR_7| (0+32768))
  4682  02C0  00F5               	movwf	cputs@s
  4683  02C1  3084               	movlw	high (STR_7| (0+32768))
  4684  02C2  00F6               	movwf	cputs@s+1
  4685  02C3  3188  20A5  3182   	fcall	_cputs
  4686                           
  4687                           ;blueGyro.c: 478: printGForce(CurrentData.Gx);
  4688  02C6  0021               	movlb	1	; select bank1
  4689  02C7  0840               	movf	_CurrentData^(0+128),w
  4690  02C8  0020               	movlb	0	; select bank0
  4691  02C9  00D6               	movwf	printGForce@RawG
  4692  02CA  0021               	movlb	1	; select bank1
  4693  02CB  0841               	movf	(_CurrentData+1)^(0+128),w
  4694  02CC  0020               	movlb	0	; select bank0
  4695  02CD  00D7               	movwf	printGForce@RawG+1
  4696  02CE  0D89               	rlf	9,f
  4697  02CF  3B89               	subwfb	9,f
  4698  02D0  0989               	comf	9,f
  4699  02D1  00D8               	movwf	printGForce@RawG+2
  4700  02D2  00D9               	movwf	printGForce@RawG+3
  4701  02D3  318B  239F  3182   	fcall	_printGForce
  4702                           
  4703                           ;blueGyro.c: 479: cputs(cy);
  4704  02D6  0020               	movlb	0	; select bank0
  4705  02D7  085D               	movf	DisplayInfo@cy+1,w
  4706  02D8  00F6               	movwf	cputs@s+1
  4707  02D9  085C               	movf	DisplayInfo@cy,w
  4708  02DA  00F5               	movwf	cputs@s
  4709  02DB  3188  20A5  3182   	fcall	_cputs
  4710                           
  4711                           ;blueGyro.c: 480: printGForce(CurrentData.Gy);
  4712  02DE  0021               	movlb	1	; select bank1
  4713  02DF  0842               	movf	(_CurrentData^(0+128)+2),w
  4714  02E0  0020               	movlb	0	; select bank0
  4715  02E1  00D6               	movwf	printGForce@RawG
  4716  02E2  0021               	movlb	1	; select bank1
  4717  02E3  0843               	movf	((_CurrentData+1)^(0+128)+2),w
  4718  02E4  0020               	movlb	0	; select bank0
  4719  02E5  00D7               	movwf	printGForce@RawG+1
  4720  02E6  0D89               	rlf	9,f
  4721  02E7  3B89               	subwfb	9,f
  4722  02E8  0989               	comf	9,f
  4723  02E9  00D8               	movwf	printGForce@RawG+2
  4724  02EA  00D9               	movwf	printGForce@RawG+3
  4725  02EB  318B  239F  3182   	fcall	_printGForce
  4726                           
  4727                           ;blueGyro.c: 481: cputs(cz);
  4728  02EE  0020               	movlb	0	; select bank0
  4729  02EF  085F               	movf	DisplayInfo@cz+1,w
  4730  02F0  00F6               	movwf	cputs@s+1
  4731  02F1  085E               	movf	DisplayInfo@cz,w
  4732  02F2  00F5               	movwf	cputs@s
  4733  02F3  3188  20A5  3182   	fcall	_cputs
  4734                           
  4735                           ;blueGyro.c: 482: printGForce(CurrentData.Gz);
  4736  02F6  0021               	movlb	1	; select bank1
  4737  02F7  0844               	movf	(_CurrentData^(0+128)+4),w
  4738  02F8  0020               	movlb	0	; select bank0
  4739  02F9  00D6               	movwf	printGForce@RawG
  4740  02FA  0021               	movlb	1	; select bank1
  4741  02FB  0845               	movf	((_CurrentData+1)^(0+128)+4),w
  4742  02FC  0020               	movlb	0	; select bank0
  4743  02FD  00D7               	movwf	printGForce@RawG+1
  4744  02FE  0D89               	rlf	9,f
  4745  02FF  3B89               	subwfb	9,f
  4746  0300  0989               	comf	9,f
  4747  0301  00D8               	movwf	printGForce@RawG+2
  4748  0302  00D9               	movwf	printGForce@RawG+3
  4749  0303  318B  239F  3182   	fcall	_printGForce
  4750                           
  4751                           ;blueGyro.c: 484: Gt = isqrt(CurrentData.SumSquare);
  4752  0306  3010               	movlw	16
  4753  0307  3EC0               	addlw	(low (_CurrentData| 0))& (0+255)
  4754  0308  0086               	movwf	6
  4755  0309  0187               	clrf	7
  4756  030A  3F40               	moviw [0]fsr1
  4757  030B  00F2               	movwf	isqrt@val
  4758  030C  3F41               	moviw [1]fsr1
  4759  030D  00F3               	movwf	isqrt@val+1
  4760  030E  3F42               	moviw [2]fsr1
  4761  030F  00F4               	movwf	isqrt@val+2
  4762  0310  3F43               	moviw [3]fsr1
  4763  0311  00F5               	movwf	isqrt@val+3
  4764  0312  318F  2778  3182   	fcall	_isqrt
  4765  0315  0873               	movf	?_isqrt+1,w
  4766  0316  0020               	movlb	0	; select bank0
  4767  0317  00DB               	movwf	DisplayInfo@Gt+1
  4768  0318  0872               	movf	?_isqrt,w
  4769  0319  00DA               	movwf	DisplayInfo@Gt
  4770                           
  4771                           ;blueGyro.c: 485: cputs("Gt=");
  4772  031A  3001               	movlw	low (STR_8| (0+32768))
  4773  031B  00F5               	movwf	cputs@s
  4774  031C  3085               	movlw	high (STR_8| (0+32768))
  4775  031D  00F6               	movwf	cputs@s+1
  4776  031E  3188  20A5  3182   	fcall	_cputs
  4777                           
  4778                           ;blueGyro.c: 486: printGForce(Gt);
  4779  0321  0020               	movlb	0	; select bank0
  4780  0322  085A               	movf	DisplayInfo@Gt,w
  4781  0323  00D6               	movwf	printGForce@RawG
  4782  0324  085B               	movf	DisplayInfo@Gt+1,w
  4783  0325  00D7               	movwf	printGForce@RawG+1
  4784  0326  01D8               	clrf	printGForce@RawG+2
  4785  0327  01D9               	clrf	printGForce@RawG+3
  4786  0328  318B  239F  3182   	fcall	_printGForce
  4787                           
  4788                           ;blueGyro.c: 488: cputs(" Gyro x=");
  4789  032B  30DB               	movlw	low (STR_9| (0+32768))
  4790  032C  00F5               	movwf	cputs@s
  4791  032D  3084               	movlw	high (STR_9| (0+32768))
  4792  032E  00F6               	movwf	cputs@s+1
  4793  032F  3188  20A5  3182   	fcall	_cputs
  4794                           
  4795                           ;blueGyro.c: 489: printGyro(GetGyroWithOffset(CurrentData.Gyrox,Setting.GyroX));
  4796  0332  0021               	movlb	1	; select bank1
  4797  0333  0849               	movf	((_CurrentData+1)^(0+128)+8),w
  4798  0334  00F3               	movwf	GetGyroWithOffset@value+1
  4799  0335  0848               	movf	(_CurrentData^(0+128)+8),w
  4800  0336  00F2               	movwf	GetGyroWithOffset@value
  4801  0337  0869               	movf	(_Setting+1)^(0+128),w
  4802  0338  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4803  0339  0868               	movf	_Setting^(0+128),w
  4804  033A  00F4               	movwf	GetGyroWithOffset@Goffset
  4805  033B  318C  2427  3182   	fcall	_GetGyroWithOffset
  4806  033E  0872               	movf	?_GetGyroWithOffset,w
  4807  033F  0020               	movlb	0	; select bank0
  4808  0340  00D6               	movwf	printGyro@RawG
  4809  0341  0873               	movf	?_GetGyroWithOffset+1,w
  4810  0342  00D7               	movwf	printGyro@RawG+1
  4811  0343  0D89               	rlf	9,f
  4812  0344  3B89               	subwfb	9,f
  4813  0345  0989               	comf	9,f
  4814  0346  00D8               	movwf	printGyro@RawG+2
  4815  0347  00D9               	movwf	printGyro@RawG+3
  4816  0348  318B  23E3  3182   	fcall	_printGyro
  4817                           
  4818                           ;blueGyro.c: 490: cputs(cy);
  4819  034B  0020               	movlb	0	; select bank0
  4820  034C  085D               	movf	DisplayInfo@cy+1,w
  4821  034D  00F6               	movwf	cputs@s+1
  4822  034E  085C               	movf	DisplayInfo@cy,w
  4823  034F  00F5               	movwf	cputs@s
  4824  0350  3188  20A5  3182   	fcall	_cputs
  4825                           
  4826                           ;blueGyro.c: 491: printGyro(GetGyroWithOffset(CurrentData.Gyroy,Setting.GyroY));
  4827  0353  0021               	movlb	1	; select bank1
  4828  0354  084B               	movf	((_CurrentData+1)^(0+128)+10),w
  4829  0355  00F3               	movwf	GetGyroWithOffset@value+1
  4830  0356  084A               	movf	(_CurrentData^(0+128)+10),w
  4831  0357  00F2               	movwf	GetGyroWithOffset@value
  4832  0358  086B               	movf	((_Setting+1)^(0+128)+2),w
  4833  0359  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4834  035A  086A               	movf	(_Setting^(0+128)+2),w
  4835  035B  00F4               	movwf	GetGyroWithOffset@Goffset
  4836  035C  318C  2427  3182   	fcall	_GetGyroWithOffset
  4837  035F  0872               	movf	?_GetGyroWithOffset,w
  4838  0360  0020               	movlb	0	; select bank0
  4839  0361  00D6               	movwf	printGyro@RawG
  4840  0362  0873               	movf	?_GetGyroWithOffset+1,w
  4841  0363  00D7               	movwf	printGyro@RawG+1
  4842  0364  0D89               	rlf	9,f
  4843  0365  3B89               	subwfb	9,f
  4844  0366  0989               	comf	9,f
  4845  0367  00D8               	movwf	printGyro@RawG+2
  4846  0368  00D9               	movwf	printGyro@RawG+3
  4847  0369  318B  23E3  3182   	fcall	_printGyro
  4848                           
  4849                           ;blueGyro.c: 492: cputs(cz);
  4850  036C  0020               	movlb	0	; select bank0
  4851  036D  085F               	movf	DisplayInfo@cz+1,w
  4852  036E  00F6               	movwf	cputs@s+1
  4853  036F  085E               	movf	DisplayInfo@cz,w
  4854  0370  00F5               	movwf	cputs@s
  4855  0371  3188  20A5  3182   	fcall	_cputs
  4856                           
  4857                           ;blueGyro.c: 493: printGyro(GetGyroWithOffset(CurrentData.Gyroz,Setting.GyroZ));
  4858  0374  0021               	movlb	1	; select bank1
  4859  0375  084D               	movf	((_CurrentData+1)^(0+128)+12),w
  4860  0376  00F3               	movwf	GetGyroWithOffset@value+1
  4861  0377  084C               	movf	(_CurrentData^(0+128)+12),w
  4862  0378  00F2               	movwf	GetGyroWithOffset@value
  4863  0379  086D               	movf	((_Setting+1)^(0+128)+4),w
  4864  037A  00F5               	movwf	GetGyroWithOffset@Goffset+1
  4865  037B  086C               	movf	(_Setting^(0+128)+4),w
  4866  037C  00F4               	movwf	GetGyroWithOffset@Goffset
  4867  037D  318C  2427  3182   	fcall	_GetGyroWithOffset
  4868  0380  0872               	movf	?_GetGyroWithOffset,w
  4869  0381  0020               	movlb	0	; select bank0
  4870  0382  00D6               	movwf	printGyro@RawG
  4871  0383  0873               	movf	?_GetGyroWithOffset+1,w
  4872  0384  00D7               	movwf	printGyro@RawG+1
  4873  0385  0D89               	rlf	9,f
  4874  0386  3B89               	subwfb	9,f
  4875  0387  0989               	comf	9,f
  4876  0388  00D8               	movwf	printGyro@RawG+2
  4877  0389  00D9               	movwf	printGyro@RawG+3
  4878  038A  318B  23E3  3182   	fcall	_printGyro
  4879                           
  4880                           ;blueGyro.c: 496: cputs(" Mag x=");
  4881  038D  30E4               	movlw	low (STR_10| (0+32768))
  4882  038E  00F5               	movwf	cputs@s
  4883  038F  3084               	movlw	high (STR_10| (0+32768))
  4884  0390  00F6               	movwf	cputs@s+1
  4885  0391  3188  20A5  3182   	fcall	_cputs
  4886                           
  4887                           ;blueGyro.c: 497: printValue(CurrentData.MagX);
  4888  0394  0021               	movlb	1	; select bank1
  4889  0395  0854               	movf	(_CurrentData^(0+128)+20),w
  4890  0396  0020               	movlb	0	; select bank0
  4891  0397  00BC               	movwf	printValue@value
  4892  0398  0021               	movlb	1	; select bank1
  4893  0399  0855               	movf	((_CurrentData+1)^(0+128)+20),w
  4894  039A  0020               	movlb	0	; select bank0
  4895  039B  00BD               	movwf	printValue@value+1
  4896  039C  0D89               	rlf	9,f
  4897  039D  3B89               	subwfb	9,f
  4898  039E  0989               	comf	9,f
  4899  039F  00BE               	movwf	printValue@value+2
  4900  03A0  00BF               	movwf	printValue@value+3
  4901  03A1  3188  20F7  3182   	fcall	_printValue
  4902                           
  4903                           ;blueGyro.c: 498: cputs(cy);
  4904  03A4  0020               	movlb	0	; select bank0
  4905  03A5  085D               	movf	DisplayInfo@cy+1,w
  4906  03A6  00F6               	movwf	cputs@s+1
  4907  03A7  085C               	movf	DisplayInfo@cy,w
  4908  03A8  00F5               	movwf	cputs@s
  4909  03A9  3188  20A5  3182   	fcall	_cputs
  4910                           
  4911                           ;blueGyro.c: 499: printValue(CurrentData.MagY);
  4912  03AC  0021               	movlb	1	; select bank1
  4913  03AD  0856               	movf	(_CurrentData^(0+128)+22),w
  4914  03AE  0020               	movlb	0	; select bank0
  4915  03AF  00BC               	movwf	printValue@value
  4916  03B0  0021               	movlb	1	; select bank1
  4917  03B1  0857               	movf	((_CurrentData+1)^(0+128)+22),w
  4918  03B2  0020               	movlb	0	; select bank0
  4919  03B3  00BD               	movwf	printValue@value+1
  4920  03B4  0D89               	rlf	9,f
  4921  03B5  3B89               	subwfb	9,f
  4922  03B6  0989               	comf	9,f
  4923  03B7  00BE               	movwf	printValue@value+2
  4924  03B8  00BF               	movwf	printValue@value+3
  4925  03B9  3188  20F7  3182   	fcall	_printValue
  4926                           
  4927                           ;blueGyro.c: 500: cputs(cz);
  4928  03BC  0020               	movlb	0	; select bank0
  4929  03BD  085F               	movf	DisplayInfo@cz+1,w
  4930  03BE  00F6               	movwf	cputs@s+1
  4931  03BF  085E               	movf	DisplayInfo@cz,w
  4932  03C0  00F5               	movwf	cputs@s
  4933  03C1  3188  20A5  3182   	fcall	_cputs
  4934                           
  4935                           ;blueGyro.c: 501: printValue(CurrentData.MagZ);
  4936  03C4  0021               	movlb	1	; select bank1
  4937  03C5  0858               	movf	(_CurrentData^(0+128)+24),w
  4938  03C6  0020               	movlb	0	; select bank0
  4939  03C7  00BC               	movwf	printValue@value
  4940  03C8  0021               	movlb	1	; select bank1
  4941  03C9  0859               	movf	((_CurrentData+1)^(0+128)+24),w
  4942  03CA  0020               	movlb	0	; select bank0
  4943  03CB  00BD               	movwf	printValue@value+1
  4944  03CC  0D89               	rlf	9,f
  4945  03CD  3B89               	subwfb	9,f
  4946  03CE  0989               	comf	9,f
  4947  03CF  00BE               	movwf	printValue@value+2
  4948  03D0  00BF               	movwf	printValue@value+3
  4949  03D1  3188  20F7  3182   	fcall	_printValue
  4950                           
  4951                           ;blueGyro.c: 503: cputs("\r\n");
  4952  03D4  30BA               	movlw	low ((STR_17+12)| (0+32768))
  4953  03D5  00F5               	movwf	cputs@s
  4954  03D6  3084               	movlw	high ((STR_17+12)| (0+32768))
  4955  03D7  00F6               	movwf	cputs@s+1
  4956  03D8  3188  20A5         	fcall	_cputs
  4957  03DA  0008               	return
  4958  03DB                     __end_of_DisplayInfo:	
  4959                           
  4960                           	psect	text26
  4961  08F7                     __ptext26:	
  4962 ;; *************** function _printValue *****************
  4963 ;; Defined at:
  4964 ;;		line 337 in file "blueGyro.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  value           4   28[BANK0 ] long 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  4969 ;; Return value:  Size  Location     Type
  4970 ;;		None               void
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4978 ;;      Params:         0       4       0       0
  4979 ;;      Locals:         0      16       0       0
  4980 ;;      Temps:          0       0       0       0
  4981 ;;      Totals:         0      20       0       0
  4982 ;;Total ram usage:       20 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    4
  4985 ;; This function calls:
  4986 ;;		_cputs
  4987 ;;		_ltoa
  4988 ;; This function is called by:
  4989 ;;		_DisplayInfo
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           
  4994                           ;psect for function _printValue
  4995  08F7                     _printValue:	
  4996                           
  4997                           ;blueGyro.c: 339: char buffer[16];
  4998                           ;blueGyro.c: 340: ltoa(buffer,value,10);
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _printValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5002  08F7  0020               	movlb	0	; select bank0
  5003  08F8  083F               	movf	printValue@value+3,w
  5004  08F9  00B6               	movwf	ltoa@val+3
  5005  08FA  083E               	movf	printValue@value+2,w
  5006  08FB  00B5               	movwf	ltoa@val+2
  5007  08FC  083D               	movf	printValue@value+1,w
  5008  08FD  00B4               	movwf	ltoa@val+1
  5009  08FE  083C               	movf	printValue@value,w
  5010  08FF  00B3               	movwf	ltoa@val
  5011  0900  300A               	movlw	10
  5012  0901  00B7               	movwf	ltoa@base
  5013  0902  3000               	movlw	0
  5014  0903  00B8               	movwf	ltoa@base+1
  5015  0904  3040               	movlw	(low (printValue@buffer| 0))& (0+255)
  5016  0905  318A  2249  3188   	fcall	_ltoa
  5017                           
  5018                           ;blueGyro.c: 341: cputs(buffer);
  5019  0908  3040               	movlw	low printValue@buffer
  5020  0909  00F5               	movwf	cputs@s
  5021  090A  3000               	movlw	high printValue@buffer
  5022  090B  00F6               	movwf	cputs@s+1
  5023  090C  3188  20A5         	fcall	_cputs
  5024  090E  0008               	return
  5025  090F                     __end_of_printValue:	
  5026                           
  5027                           	psect	text27
  5028  08B9                     __ptext27:	
  5029 ;; *************** function _printUShort *****************
  5030 ;; Defined at:
  5031 ;;		line 414 in file "blueGyro.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  value           2    9[BANK0 ] unsigned short 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  buffer         16   11[BANK0 ] unsigned char [16]
  5036 ;; Return value:  Size  Location     Type
  5037 ;;		None               void
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5045 ;;      Params:         0       2       0       0
  5046 ;;      Locals:         0      16       0       0
  5047 ;;      Temps:          0       0       0       0
  5048 ;;      Totals:         0      18       0       0
  5049 ;;Total ram usage:       18 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    3
  5052 ;; This function calls:
  5053 ;;		_cputs
  5054 ;;		_utoa
  5055 ;; This function is called by:
  5056 ;;		_DisplayInfo
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _printUShort
  5062  08B9                     _printUShort:	
  5063                           
  5064                           ;blueGyro.c: 416: char buffer[16];
  5065                           ;blueGyro.c: 417: utoa(buffer,value,10); cputs(buffer);
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in _printUShort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5069  08B9  0020               	movlb	0	; select bank0
  5070  08BA  082A               	movf	printUShort@value+1,w
  5071  08BB  00A1               	movwf	utoa@val+1
  5072  08BC  0829               	movf	printUShort@value,w
  5073  08BD  00A0               	movwf	utoa@val
  5074  08BE  300A               	movlw	10
  5075  08BF  00A2               	movwf	utoa@base
  5076  08C0  3000               	movlw	0
  5077  08C1  00A3               	movwf	utoa@base+1
  5078  08C2  302B               	movlw	(low (printUShort@buffer| 0))& (0+255)
  5079  08C3  318C  24D1  3188   	fcall	_utoa
  5080  08C6  302B               	movlw	low printUShort@buffer
  5081  08C7  00F5               	movwf	cputs@s
  5082  08C8  3000               	movlw	high printUShort@buffer
  5083  08C9  00F6               	movwf	cputs@s+1
  5084  08CA  3188  20A5         	fcall	_cputs
  5085  08CC  0008               	return
  5086  08CD                     __end_of_printUShort:	
  5087                           
  5088                           	psect	text28
  5089  0BE3                     __ptext28:	
  5090 ;; *************** function _printGyro *****************
  5091 ;; Defined at:
  5092 ;;		line 403 in file "blueGyro.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  RawG            4   54[BANK0 ] long 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5106 ;;      Params:         0       4       0       0
  5107 ;;      Locals:         0       0       0       0
  5108 ;;      Temps:          0       0       0       0
  5109 ;;      Totals:         0       4       0       0
  5110 ;;Total ram usage:        4 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    5
  5113 ;; This function calls:
  5114 ;;		___aldiv
  5115 ;;		___lmul
  5116 ;;		_printDeciValue
  5117 ;; This function is called by:
  5118 ;;		_DisplayInfo
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _printGyro
  5124  0BE3                     _printGyro:	
  5125                           
  5126                           ;blueGyro.c: 409: RawG *= 625L;
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in _printGyro: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5130  0BE3  3000               	movlw	0
  5131  0BE4  00F5               	movwf	___lmul@multiplier+3
  5132  0BE5  3000               	movlw	0
  5133  0BE6  00F4               	movwf	___lmul@multiplier+2
  5134  0BE7  3002               	movlw	2
  5135  0BE8  00F3               	movwf	___lmul@multiplier+1
  5136  0BE9  3071               	movlw	113
  5137  0BEA  00F2               	movwf	___lmul@multiplier
  5138  0BEB  0020               	movlb	0	; select bank0
  5139  0BEC  0859               	movf	printGyro@RawG+3,w
  5140  0BED  00F9               	movwf	___lmul@multiplicand+3
  5141  0BEE  0858               	movf	printGyro@RawG+2,w
  5142  0BEF  00F8               	movwf	___lmul@multiplicand+2
  5143  0BF0  0857               	movf	printGyro@RawG+1,w
  5144  0BF1  00F7               	movwf	___lmul@multiplicand+1
  5145  0BF2  0856               	movf	printGyro@RawG,w
  5146  0BF3  00F6               	movwf	___lmul@multiplicand
  5147  0BF4  318A  2277  318B   	fcall	___lmul
  5148  0BF7  0875               	movf	?___lmul+3,w
  5149  0BF8  0020               	movlb	0	; select bank0
  5150  0BF9  00D9               	movwf	printGyro@RawG+3
  5151  0BFA  0874               	movf	?___lmul+2,w
  5152  0BFB  00D8               	movwf	printGyro@RawG+2
  5153  0BFC  0873               	movf	?___lmul+1,w
  5154  0BFD  00D7               	movwf	printGyro@RawG+1
  5155  0BFE  0872               	movf	?___lmul,w
  5156  0BFF  00D6               	movwf	printGyro@RawG
  5157                           
  5158                           ;blueGyro.c: 410: RawG /= 1024L;
  5159  0C00  3000               	movlw	0
  5160  0C01  00F5               	movwf	___aldiv@divisor+3
  5161  0C02  3000               	movlw	0
  5162  0C03  00F4               	movwf	___aldiv@divisor+2
  5163  0C04  3004               	movlw	4
  5164  0C05  00F3               	movwf	___aldiv@divisor+1
  5165  0C06  3000               	movlw	0
  5166  0C07  00F2               	movwf	___aldiv@divisor
  5167  0C08  0859               	movf	printGyro@RawG+3,w
  5168  0C09  00F9               	movwf	___aldiv@dividend+3
  5169  0C0A  0858               	movf	printGyro@RawG+2,w
  5170  0C0B  00F8               	movwf	___aldiv@dividend+2
  5171  0C0C  0857               	movf	printGyro@RawG+1,w
  5172  0C0D  00F7               	movwf	___aldiv@dividend+1
  5173  0C0E  0856               	movf	printGyro@RawG,w
  5174  0C0F  00F6               	movwf	___aldiv@dividend
  5175  0C10  318E  26F6  318B   	fcall	___aldiv
  5176  0C13  0875               	movf	?___aldiv+3,w
  5177  0C14  0020               	movlb	0	; select bank0
  5178  0C15  00D9               	movwf	printGyro@RawG+3
  5179  0C16  0874               	movf	?___aldiv+2,w
  5180  0C17  00D8               	movwf	printGyro@RawG+2
  5181  0C18  0873               	movf	?___aldiv+1,w
  5182  0C19  00D7               	movwf	printGyro@RawG+1
  5183  0C1A  0872               	movf	?___aldiv,w
  5184  0C1B  00D6               	movwf	printGyro@RawG
  5185                           
  5186                           ;blueGyro.c: 411: printDeciValue(RawG);
  5187  0C1C  0859               	movf	printGyro@RawG+3,w
  5188  0C1D  00BF               	movwf	printDeciValue@value+3
  5189  0C1E  0858               	movf	printGyro@RawG+2,w
  5190  0C1F  00BE               	movwf	printDeciValue@value+2
  5191  0C20  0857               	movf	printGyro@RawG+1,w
  5192  0C21  00BD               	movwf	printDeciValue@value+1
  5193  0C22  0856               	movf	printGyro@RawG,w
  5194  0C23  00BC               	movwf	printDeciValue@value
  5195  0C24  318E  2604         	fcall	_printDeciValue
  5196  0C26  0008               	return
  5197  0C27                     __end_of_printGyro:	
  5198                           
  5199                           	psect	text29
  5200  0E04                     __ptext29:	
  5201 ;; *************** function _printDeciValue *****************
  5202 ;; Defined at:
  5203 ;;		line 370 in file "blueGyro.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  value           4   28[BANK0 ] long 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  5208 ;;  _lvalue         4   50[BANK0 ] long 
  5209 ;;  T               2   48[BANK0 ] unsigned short 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;		None               void
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5219 ;;      Params:         0       4       0       0
  5220 ;;      Locals:         0      22       0       0
  5221 ;;      Temps:          0       0       0       0
  5222 ;;      Totals:         0      26       0       0
  5223 ;;Total ram usage:       26 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    4
  5226 ;; This function calls:
  5227 ;;		___aldiv
  5228 ;;		___lwmod
  5229 ;;		_cputs
  5230 ;;		_ltoa
  5231 ;;		_putch
  5232 ;;		_utoa
  5233 ;; This function is called by:
  5234 ;;		_printGyro
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           
  5239                           ;psect for function _printDeciValue
  5240  0E04                     _printDeciValue:	
  5241                           
  5242                           ;blueGyro.c: 372: char buffer[16];
  5243                           ;blueGyro.c: 373: long _lvalue;
  5244                           ;blueGyro.c: 374: unsigned short T;
  5245                           ;blueGyro.c: 376: if(value <0)
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in _printDeciValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5249  0E04  0020               	movlb	0	; select bank0
  5250  0E05  1FBF               	btfss	printDeciValue@value+3,7
  5251  0E06  2E1C               	goto	l3110
  5252                           
  5253                           ;blueGyro.c: 377: {
  5254                           ;blueGyro.c: 378: putch('-');
  5255  0E07  302D               	movlw	45
  5256  0E08  3189  2194  318E   	fcall	_putch
  5257                           
  5258                           ;blueGyro.c: 379: _lvalue = (-value);
  5259  0E0B  0020               	movlb	0	; select bank0
  5260  0E0C  093C               	comf	printDeciValue@value,w
  5261  0E0D  00D2               	movwf	printDeciValue@_lvalue
  5262  0E0E  093D               	comf	printDeciValue@value+1,w
  5263  0E0F  00D3               	movwf	printDeciValue@_lvalue+1
  5264  0E10  093E               	comf	printDeciValue@value+2,w
  5265  0E11  00D4               	movwf	printDeciValue@_lvalue+2
  5266  0E12  093F               	comf	printDeciValue@value+3,w
  5267  0E13  00D5               	movwf	printDeciValue@_lvalue+3
  5268  0E14  0AD2               	incf	printDeciValue@_lvalue,f
  5269  0E15  1903               	skipnz
  5270  0E16  0AD3               	incf	printDeciValue@_lvalue+1,f
  5271  0E17  1903               	skipnz
  5272  0E18  0AD4               	incf	printDeciValue@_lvalue+2,f
  5273  0E19  1903               	skipnz
  5274  0E1A  0AD5               	incf	printDeciValue@_lvalue+3,f
  5275                           
  5276                           ;blueGyro.c: 380: }
  5277  0E1B  2E24               	goto	l3112
  5278  0E1C                     l3110:	
  5279                           
  5280                           ;blueGyro.c: 381: else
  5281                           ;blueGyro.c: 382: _lvalue = value;
  5282  0E1C  083F               	movf	printDeciValue@value+3,w
  5283  0E1D  00D5               	movwf	printDeciValue@_lvalue+3
  5284  0E1E  083E               	movf	printDeciValue@value+2,w
  5285  0E1F  00D4               	movwf	printDeciValue@_lvalue+2
  5286  0E20  083D               	movf	printDeciValue@value+1,w
  5287  0E21  00D3               	movwf	printDeciValue@_lvalue+1
  5288  0E22  083C               	movf	printDeciValue@value,w
  5289  0E23  00D2               	movwf	printDeciValue@_lvalue
  5290  0E24                     l3112:	
  5291                           
  5292                           ;blueGyro.c: 384: ltoa(buffer,_lvalue /10,10);cputs(buffer);
  5293  0E24  3000               	movlw	0
  5294  0E25  00F5               	movwf	___aldiv@divisor+3
  5295  0E26  3000               	movlw	0
  5296  0E27  00F4               	movwf	___aldiv@divisor+2
  5297  0E28  3000               	movlw	0
  5298  0E29  00F3               	movwf	___aldiv@divisor+1
  5299  0E2A  300A               	movlw	10
  5300  0E2B  00F2               	movwf	___aldiv@divisor
  5301  0E2C  0855               	movf	printDeciValue@_lvalue+3,w
  5302  0E2D  00F9               	movwf	___aldiv@dividend+3
  5303  0E2E  0854               	movf	printDeciValue@_lvalue+2,w
  5304  0E2F  00F8               	movwf	___aldiv@dividend+2
  5305  0E30  0853               	movf	printDeciValue@_lvalue+1,w
  5306  0E31  00F7               	movwf	___aldiv@dividend+1
  5307  0E32  0852               	movf	printDeciValue@_lvalue,w
  5308  0E33  00F6               	movwf	___aldiv@dividend
  5309  0E34  318E  26F6  318E   	fcall	___aldiv
  5310  0E37  0875               	movf	?___aldiv+3,w
  5311  0E38  0020               	movlb	0	; select bank0
  5312  0E39  00B6               	movwf	ltoa@val+3
  5313  0E3A  0874               	movf	?___aldiv+2,w
  5314  0E3B  00B5               	movwf	ltoa@val+2
  5315  0E3C  0873               	movf	?___aldiv+1,w
  5316  0E3D  00B4               	movwf	ltoa@val+1
  5317  0E3E  0872               	movf	?___aldiv,w
  5318  0E3F  00B3               	movwf	ltoa@val
  5319  0E40  300A               	movlw	10
  5320  0E41  00B7               	movwf	ltoa@base
  5321  0E42  3000               	movlw	0
  5322  0E43  00B8               	movwf	ltoa@base+1
  5323  0E44  3040               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  5324  0E45  318A  2249  318E   	fcall	_ltoa
  5325  0E48  3040               	movlw	low printDeciValue@buffer
  5326  0E49  00F5               	movwf	cputs@s
  5327  0E4A  3000               	movlw	high printDeciValue@buffer
  5328  0E4B  00F6               	movwf	cputs@s+1
  5329  0E4C  3188  20A5  318E   	fcall	_cputs
  5330                           
  5331                           ;blueGyro.c: 385: putch('.');
  5332  0E4F  302E               	movlw	46
  5333  0E50  3189  2194  318E   	fcall	_putch
  5334                           
  5335                           ;blueGyro.c: 387: T = (unsigned short) _lvalue % 10;
  5336  0E53  300A               	movlw	10
  5337  0E54  00F2               	movwf	___lwmod@divisor
  5338  0E55  3000               	movlw	0
  5339  0E56  00F3               	movwf	___lwmod@divisor+1
  5340  0E57  0020               	movlb	0	; select bank0
  5341  0E58  0853               	movf	printDeciValue@_lvalue+1,w
  5342  0E59  00F5               	movwf	___lwmod@dividend+1
  5343  0E5A  0852               	movf	printDeciValue@_lvalue,w
  5344  0E5B  00F4               	movwf	___lwmod@dividend
  5345  0E5C  318A  221D  318E   	fcall	___lwmod
  5346  0E5F  0873               	movf	?___lwmod+1,w
  5347  0E60  0020               	movlb	0	; select bank0
  5348  0E61  00D1               	movwf	printDeciValue@T+1
  5349  0E62  0872               	movf	?___lwmod,w
  5350  0E63  00D0               	movwf	printDeciValue@T
  5351                           
  5352                           ;blueGyro.c: 389: utoa(buffer,T,10);cputs(buffer);
  5353  0E64  0851               	movf	printDeciValue@T+1,w
  5354  0E65  00A1               	movwf	utoa@val+1
  5355  0E66  0850               	movf	printDeciValue@T,w
  5356  0E67  00A0               	movwf	utoa@val
  5357  0E68  300A               	movlw	10
  5358  0E69  00A2               	movwf	utoa@base
  5359  0E6A  3000               	movlw	0
  5360  0E6B  00A3               	movwf	utoa@base+1
  5361  0E6C  3040               	movlw	(low (printDeciValue@buffer| 0))& (0+255)
  5362  0E6D  318C  24D1  318E   	fcall	_utoa
  5363  0E70  3040               	movlw	low printDeciValue@buffer
  5364  0E71  00F5               	movwf	cputs@s
  5365  0E72  3000               	movlw	high printDeciValue@buffer
  5366  0E73  00F6               	movwf	cputs@s+1
  5367  0E74  3188  20A5         	fcall	_cputs
  5368  0E76  0008               	return
  5369  0E77                     __end_of_printDeciValue:	
  5370                           
  5371                           	psect	text30
  5372  0B9F                     __ptext30:	
  5373 ;; *************** function _printGForce *****************
  5374 ;; Defined at:
  5375 ;;		line 393 in file "blueGyro.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  RawG            4   54[BANK0 ] long 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5389 ;;      Params:         0       4       0       0
  5390 ;;      Locals:         0       0       0       0
  5391 ;;      Temps:          0       0       0       0
  5392 ;;      Totals:         0       4       0       0
  5393 ;;Total ram usage:        4 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    5
  5396 ;; This function calls:
  5397 ;;		___aldiv
  5398 ;;		___lmul
  5399 ;;		_printCentiValue
  5400 ;; This function is called by:
  5401 ;;		_DisplayInfo
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _printGForce
  5407  0B9F                     _printGForce:	
  5408                           
  5409                           ;blueGyro.c: 398: RawG *= 50L;
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in _printGForce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5413  0B9F  3000               	movlw	0
  5414  0BA0  00F5               	movwf	___lmul@multiplier+3
  5415  0BA1  3000               	movlw	0
  5416  0BA2  00F4               	movwf	___lmul@multiplier+2
  5417  0BA3  3000               	movlw	0
  5418  0BA4  00F3               	movwf	___lmul@multiplier+1
  5419  0BA5  3032               	movlw	50
  5420  0BA6  00F2               	movwf	___lmul@multiplier
  5421  0BA7  0020               	movlb	0	; select bank0
  5422  0BA8  0859               	movf	printGForce@RawG+3,w
  5423  0BA9  00F9               	movwf	___lmul@multiplicand+3
  5424  0BAA  0858               	movf	printGForce@RawG+2,w
  5425  0BAB  00F8               	movwf	___lmul@multiplicand+2
  5426  0BAC  0857               	movf	printGForce@RawG+1,w
  5427  0BAD  00F7               	movwf	___lmul@multiplicand+1
  5428  0BAE  0856               	movf	printGForce@RawG,w
  5429  0BAF  00F6               	movwf	___lmul@multiplicand
  5430  0BB0  318A  2277  318B   	fcall	___lmul
  5431  0BB3  0875               	movf	?___lmul+3,w
  5432  0BB4  0020               	movlb	0	; select bank0
  5433  0BB5  00D9               	movwf	printGForce@RawG+3
  5434  0BB6  0874               	movf	?___lmul+2,w
  5435  0BB7  00D8               	movwf	printGForce@RawG+2
  5436  0BB8  0873               	movf	?___lmul+1,w
  5437  0BB9  00D7               	movwf	printGForce@RawG+1
  5438  0BBA  0872               	movf	?___lmul,w
  5439  0BBB  00D6               	movwf	printGForce@RawG
  5440                           
  5441                           ;blueGyro.c: 399: RawG /= 1024L;
  5442  0BBC  3000               	movlw	0
  5443  0BBD  00F5               	movwf	___aldiv@divisor+3
  5444  0BBE  3000               	movlw	0
  5445  0BBF  00F4               	movwf	___aldiv@divisor+2
  5446  0BC0  3004               	movlw	4
  5447  0BC1  00F3               	movwf	___aldiv@divisor+1
  5448  0BC2  3000               	movlw	0
  5449  0BC3  00F2               	movwf	___aldiv@divisor
  5450  0BC4  0859               	movf	printGForce@RawG+3,w
  5451  0BC5  00F9               	movwf	___aldiv@dividend+3
  5452  0BC6  0858               	movf	printGForce@RawG+2,w
  5453  0BC7  00F8               	movwf	___aldiv@dividend+2
  5454  0BC8  0857               	movf	printGForce@RawG+1,w
  5455  0BC9  00F7               	movwf	___aldiv@dividend+1
  5456  0BCA  0856               	movf	printGForce@RawG,w
  5457  0BCB  00F6               	movwf	___aldiv@dividend
  5458  0BCC  318E  26F6  318B   	fcall	___aldiv
  5459  0BCF  0875               	movf	?___aldiv+3,w
  5460  0BD0  0020               	movlb	0	; select bank0
  5461  0BD1  00D9               	movwf	printGForce@RawG+3
  5462  0BD2  0874               	movf	?___aldiv+2,w
  5463  0BD3  00D8               	movwf	printGForce@RawG+2
  5464  0BD4  0873               	movf	?___aldiv+1,w
  5465  0BD5  00D7               	movwf	printGForce@RawG+1
  5466  0BD6  0872               	movf	?___aldiv,w
  5467  0BD7  00D6               	movwf	printGForce@RawG
  5468                           
  5469                           ;blueGyro.c: 400: printCentiValue(RawG);
  5470  0BD8  0859               	movf	printGForce@RawG+3,w
  5471  0BD9  00BF               	movwf	printCentiValue@value+3
  5472  0BDA  0858               	movf	printGForce@RawG+2,w
  5473  0BDB  00BE               	movwf	printCentiValue@value+2
  5474  0BDC  0857               	movf	printGForce@RawG+1,w
  5475  0BDD  00BD               	movwf	printCentiValue@value+1
  5476  0BDE  0856               	movf	printGForce@RawG,w
  5477  0BDF  00BC               	movwf	printCentiValue@value
  5478  0BE0  318E  2677         	fcall	_printCentiValue
  5479  0BE2  0008               	return
  5480  0BE3                     __end_of_printGForce:	
  5481                           
  5482                           	psect	text31
  5483  0E77                     __ptext31:	
  5484 ;; *************** function _printCentiValue *****************
  5485 ;; Defined at:
  5486 ;;		line 345 in file "blueGyro.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  value           4   28[BANK0 ] long 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  5491 ;;  _lvalue         4   50[BANK0 ] long 
  5492 ;;  T               2   48[BANK0 ] unsigned short 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5502 ;;      Params:         0       4       0       0
  5503 ;;      Locals:         0      22       0       0
  5504 ;;      Temps:          0       0       0       0
  5505 ;;      Totals:         0      26       0       0
  5506 ;;Total ram usage:       26 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    4
  5509 ;; This function calls:
  5510 ;;		___aldiv
  5511 ;;		___lwmod
  5512 ;;		_cputs
  5513 ;;		_ltoa
  5514 ;;		_putch
  5515 ;;		_utoa
  5516 ;; This function is called by:
  5517 ;;		_printGForce
  5518 ;;		_printVoltage
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           
  5523                           ;psect for function _printCentiValue
  5524  0E77                     _printCentiValue:	
  5525                           
  5526                           ;blueGyro.c: 347: char buffer[16];
  5527                           ;blueGyro.c: 348: long _lvalue;
  5528                           ;blueGyro.c: 349: unsigned short T;
  5529                           ;blueGyro.c: 351: if(value <0)
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _printCentiValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5533  0E77  0020               	movlb	0	; select bank0
  5534  0E78  1FBF               	btfss	printCentiValue@value+3,7
  5535  0E79  2E8F               	goto	l3088
  5536                           
  5537                           ;blueGyro.c: 352: {
  5538                           ;blueGyro.c: 353: putch('-');
  5539  0E7A  302D               	movlw	45
  5540  0E7B  3189  2194  318E   	fcall	_putch
  5541                           
  5542                           ;blueGyro.c: 354: _lvalue = (-value);
  5543  0E7E  0020               	movlb	0	; select bank0
  5544  0E7F  093C               	comf	printCentiValue@value,w
  5545  0E80  00D2               	movwf	printCentiValue@_lvalue
  5546  0E81  093D               	comf	printCentiValue@value+1,w
  5547  0E82  00D3               	movwf	printCentiValue@_lvalue+1
  5548  0E83  093E               	comf	printCentiValue@value+2,w
  5549  0E84  00D4               	movwf	printCentiValue@_lvalue+2
  5550  0E85  093F               	comf	printCentiValue@value+3,w
  5551  0E86  00D5               	movwf	printCentiValue@_lvalue+3
  5552  0E87  0AD2               	incf	printCentiValue@_lvalue,f
  5553  0E88  1903               	skipnz
  5554  0E89  0AD3               	incf	printCentiValue@_lvalue+1,f
  5555  0E8A  1903               	skipnz
  5556  0E8B  0AD4               	incf	printCentiValue@_lvalue+2,f
  5557  0E8C  1903               	skipnz
  5558  0E8D  0AD5               	incf	printCentiValue@_lvalue+3,f
  5559                           
  5560                           ;blueGyro.c: 355: }
  5561  0E8E  2E97               	goto	l3090
  5562  0E8F                     l3088:	
  5563                           
  5564                           ;blueGyro.c: 356: else
  5565                           ;blueGyro.c: 357: _lvalue = value;
  5566  0E8F  083F               	movf	printCentiValue@value+3,w
  5567  0E90  00D5               	movwf	printCentiValue@_lvalue+3
  5568  0E91  083E               	movf	printCentiValue@value+2,w
  5569  0E92  00D4               	movwf	printCentiValue@_lvalue+2
  5570  0E93  083D               	movf	printCentiValue@value+1,w
  5571  0E94  00D3               	movwf	printCentiValue@_lvalue+1
  5572  0E95  083C               	movf	printCentiValue@value,w
  5573  0E96  00D2               	movwf	printCentiValue@_lvalue
  5574  0E97                     l3090:	
  5575                           
  5576                           ;blueGyro.c: 359: ltoa(buffer,_lvalue /100,10);cputs(buffer);
  5577  0E97  3000               	movlw	0
  5578  0E98  00F5               	movwf	___aldiv@divisor+3
  5579  0E99  3000               	movlw	0
  5580  0E9A  00F4               	movwf	___aldiv@divisor+2
  5581  0E9B  3000               	movlw	0
  5582  0E9C  00F3               	movwf	___aldiv@divisor+1
  5583  0E9D  3064               	movlw	100
  5584  0E9E  00F2               	movwf	___aldiv@divisor
  5585  0E9F  0855               	movf	printCentiValue@_lvalue+3,w
  5586  0EA0  00F9               	movwf	___aldiv@dividend+3
  5587  0EA1  0854               	movf	printCentiValue@_lvalue+2,w
  5588  0EA2  00F8               	movwf	___aldiv@dividend+2
  5589  0EA3  0853               	movf	printCentiValue@_lvalue+1,w
  5590  0EA4  00F7               	movwf	___aldiv@dividend+1
  5591  0EA5  0852               	movf	printCentiValue@_lvalue,w
  5592  0EA6  00F6               	movwf	___aldiv@dividend
  5593  0EA7  318E  26F6  318E   	fcall	___aldiv
  5594  0EAA  0875               	movf	?___aldiv+3,w
  5595  0EAB  0020               	movlb	0	; select bank0
  5596  0EAC  00B6               	movwf	ltoa@val+3
  5597  0EAD  0874               	movf	?___aldiv+2,w
  5598  0EAE  00B5               	movwf	ltoa@val+2
  5599  0EAF  0873               	movf	?___aldiv+1,w
  5600  0EB0  00B4               	movwf	ltoa@val+1
  5601  0EB1  0872               	movf	?___aldiv,w
  5602  0EB2  00B3               	movwf	ltoa@val
  5603  0EB3  300A               	movlw	10
  5604  0EB4  00B7               	movwf	ltoa@base
  5605  0EB5  3000               	movlw	0
  5606  0EB6  00B8               	movwf	ltoa@base+1
  5607  0EB7  3040               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  5608  0EB8  318A  2249  318E   	fcall	_ltoa
  5609  0EBB  3040               	movlw	low printCentiValue@buffer
  5610  0EBC  00F5               	movwf	cputs@s
  5611  0EBD  3000               	movlw	high printCentiValue@buffer
  5612  0EBE  00F6               	movwf	cputs@s+1
  5613  0EBF  3188  20A5  318E   	fcall	_cputs
  5614                           
  5615                           ;blueGyro.c: 360: putch('.');
  5616  0EC2  302E               	movlw	46
  5617  0EC3  3189  2194  318E   	fcall	_putch
  5618                           
  5619                           ;blueGyro.c: 362: T = (unsigned short) _lvalue % 100;
  5620  0EC6  3064               	movlw	100
  5621  0EC7  00F2               	movwf	___lwmod@divisor
  5622  0EC8  3000               	movlw	0
  5623  0EC9  00F3               	movwf	___lwmod@divisor+1
  5624  0ECA  0020               	movlb	0	; select bank0
  5625  0ECB  0853               	movf	printCentiValue@_lvalue+1,w
  5626  0ECC  00F5               	movwf	___lwmod@dividend+1
  5627  0ECD  0852               	movf	printCentiValue@_lvalue,w
  5628  0ECE  00F4               	movwf	___lwmod@dividend
  5629  0ECF  318A  221D  318E   	fcall	___lwmod
  5630  0ED2  0873               	movf	?___lwmod+1,w
  5631  0ED3  0020               	movlb	0	; select bank0
  5632  0ED4  00D1               	movwf	printCentiValue@T+1
  5633  0ED5  0872               	movf	?___lwmod,w
  5634  0ED6  00D0               	movwf	printCentiValue@T
  5635                           
  5636                           ;blueGyro.c: 364: if(T < 10)
  5637  0ED7  3000               	movlw	0
  5638  0ED8  0251               	subwf	printCentiValue@T+1,w
  5639  0ED9  300A               	movlw	10
  5640  0EDA  1903               	skipnz
  5641  0EDB  0250               	subwf	printCentiValue@T,w
  5642  0EDC  1803               	skipnc
  5643  0EDD  2EE2               	goto	l280
  5644                           
  5645                           ;blueGyro.c: 365: putch('0');
  5646  0EDE  3030               	movlw	48
  5647  0EDF  3189  2194  318E   	fcall	_putch
  5648  0EE2                     l280:	
  5649                           
  5650                           ;blueGyro.c: 366: utoa(buffer,T,10);cputs(buffer);
  5651  0EE2  0020               	movlb	0	; select bank0
  5652  0EE3  0851               	movf	printCentiValue@T+1,w
  5653  0EE4  00A1               	movwf	utoa@val+1
  5654  0EE5  0850               	movf	printCentiValue@T,w
  5655  0EE6  00A0               	movwf	utoa@val
  5656  0EE7  300A               	movlw	10
  5657  0EE8  00A2               	movwf	utoa@base
  5658  0EE9  3000               	movlw	0
  5659  0EEA  00A3               	movwf	utoa@base+1
  5660  0EEB  3040               	movlw	(low (printCentiValue@buffer| 0))& (0+255)
  5661  0EEC  318C  24D1  318E   	fcall	_utoa
  5662  0EEF  3040               	movlw	low printCentiValue@buffer
  5663  0EF0  00F5               	movwf	cputs@s
  5664  0EF1  3000               	movlw	high printCentiValue@buffer
  5665  0EF2  00F6               	movwf	cputs@s+1
  5666  0EF3  3188  20A5         	fcall	_cputs
  5667  0EF5  0008               	return
  5668  0EF6                     __end_of_printCentiValue:	
  5669                           
  5670                           	psect	text32
  5671  0CD1                     __ptext32:	
  5672 ;; *************** function _utoa *****************
  5673 ;; Defined at:
  5674 ;;		line 17 in file "/Applications/microchip/xc8/v1.35/sources/common/itoa.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  buf             1    wreg     PTR unsigned char 
  5677 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), 
  5678 ;;  val             2    0[BANK0 ] unsigned int 
  5679 ;;  base            2    2[BANK0 ] int 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  5682 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), 
  5683 ;;  v               2    5[BANK0 ] unsigned int 
  5684 ;;  c               1    7[BANK0 ] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      PTR unsigned char 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5694 ;;      Params:         0       4       0       0
  5695 ;;      Locals:         0       4       0       0
  5696 ;;      Temps:          0       1       0       0
  5697 ;;      Totals:         0       9       0       0
  5698 ;;Total ram usage:        9 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    2
  5701 ;; This function calls:
  5702 ;;		___lwdiv
  5703 ;;		___lwmod
  5704 ;; This function is called by:
  5705 ;;		_printCentiValue
  5706 ;;		_printDeciValue
  5707 ;;		_printUShort
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function _utoa
  5713  0CD1                     _utoa:	
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5717                           ;utoa@buf stored from wreg
  5718  0CD1  0020               	movlb	0	; select bank0
  5719  0CD2  00A8               	movwf	utoa@buf
  5720  0CD3  0821               	movf	utoa@val+1,w
  5721  0CD4  00A6               	movwf	utoa@v+1
  5722  0CD5  0820               	movf	utoa@val,w
  5723  0CD6  00A5               	movwf	utoa@v
  5724  0CD7                     l2976:	
  5725  0CD7  0823               	movf	utoa@base+1,w
  5726  0CD8  00F3               	movwf	___lwdiv@divisor+1
  5727  0CD9  0822               	movf	utoa@base,w
  5728  0CDA  00F2               	movwf	___lwdiv@divisor
  5729  0CDB  0826               	movf	utoa@v+1,w
  5730  0CDC  00F5               	movwf	___lwdiv@dividend+1
  5731  0CDD  0825               	movf	utoa@v,w
  5732  0CDE  00F4               	movwf	___lwdiv@dividend
  5733  0CDF  318A  22A9  318C   	fcall	___lwdiv
  5734  0CE2  0873               	movf	?___lwdiv+1,w
  5735  0CE3  0020               	movlb	0	; select bank0
  5736  0CE4  00A6               	movwf	utoa@v+1
  5737  0CE5  0872               	movf	?___lwdiv,w
  5738  0CE6  00A5               	movwf	utoa@v
  5739  0CE7  3001               	movlw	1
  5740  0CE8  00A4               	movwf	??_utoa
  5741  0CE9  0824               	movf	??_utoa,w
  5742  0CEA  07A8               	addwf	utoa@buf,f
  5743  0CEB  0825               	movf	utoa@v,w
  5744  0CEC  0426               	iorwf	utoa@v+1,w
  5745  0CED  1D03               	btfss	3,2
  5746  0CEE  2CD7               	goto	l2976
  5747  0CEF  0828               	movf	utoa@buf,w
  5748  0CF0  0086               	movwf	6
  5749  0CF1  0187               	clrf	7
  5750  0CF2  0181               	clrf	1
  5751  0CF3  3001               	movlw	1
  5752  0CF4  02A8               	subwf	utoa@buf,f
  5753  0CF5                     l2986:	
  5754  0CF5  0823               	movf	utoa@base+1,w
  5755  0CF6  00F3               	movwf	___lwmod@divisor+1
  5756  0CF7  0822               	movf	utoa@base,w
  5757  0CF8  00F2               	movwf	___lwmod@divisor
  5758  0CF9  0821               	movf	utoa@val+1,w
  5759  0CFA  00F5               	movwf	___lwmod@dividend+1
  5760  0CFB  0820               	movf	utoa@val,w
  5761  0CFC  00F4               	movwf	___lwmod@dividend
  5762  0CFD  318A  221D  318C   	fcall	___lwmod
  5763  0D00  0872               	movf	?___lwmod,w
  5764  0D01  0020               	movlb	0	; select bank0
  5765  0D02  00A4               	movwf	??_utoa
  5766  0D03  0824               	movf	??_utoa,w
  5767  0D04  00A7               	movwf	utoa@c
  5768  0D05  0823               	movf	utoa@base+1,w
  5769  0D06  00F3               	movwf	___lwdiv@divisor+1
  5770  0D07  0822               	movf	utoa@base,w
  5771  0D08  00F2               	movwf	___lwdiv@divisor
  5772  0D09  0821               	movf	utoa@val+1,w
  5773  0D0A  00F5               	movwf	___lwdiv@dividend+1
  5774  0D0B  0820               	movf	utoa@val,w
  5775  0D0C  00F4               	movwf	___lwdiv@dividend
  5776  0D0D  318A  22A9  318C   	fcall	___lwdiv
  5777  0D10  0873               	movf	?___lwdiv+1,w
  5778  0D11  0020               	movlb	0	; select bank0
  5779  0D12  00A1               	movwf	utoa@val+1
  5780  0D13  0872               	movf	?___lwdiv,w
  5781  0D14  00A0               	movwf	utoa@val
  5782  0D15  300A               	movlw	10
  5783  0D16  0227               	subwf	utoa@c,w
  5784  0D17  1C03               	skipc
  5785  0D18  2D1D               	goto	l805
  5786  0D19  3007               	movlw	7
  5787  0D1A  00A4               	movwf	??_utoa
  5788  0D1B  0824               	movf	??_utoa,w
  5789  0D1C  07A7               	addwf	utoa@c,f
  5790  0D1D                     l805:	
  5791  0D1D  3030               	movlw	48
  5792  0D1E  00A4               	movwf	??_utoa
  5793  0D1F  0824               	movf	??_utoa,w
  5794  0D20  07A7               	addwf	utoa@c,f
  5795  0D21  0827               	movf	utoa@c,w
  5796  0D22  00A4               	movwf	??_utoa
  5797  0D23  0828               	movf	utoa@buf,w
  5798  0D24  0086               	movwf	6
  5799  0D25  0187               	clrf	7
  5800  0D26  0824               	movf	??_utoa,w
  5801  0D27  0081               	movwf	1
  5802  0D28  3001               	movlw	1
  5803  0D29  02A8               	subwf	utoa@buf,f
  5804  0D2A  0820               	movf	utoa@val,w
  5805  0D2B  0421               	iorwf	utoa@val+1,w
  5806  0D2C  1D03               	btfss	3,2
  5807  0D2D  2CF5               	goto	l2986
  5808                           
  5809                           ;	Return value of _utoa is never used
  5810  0D2E  3001               	movlw	1
  5811  0D2F  00A4               	movwf	??_utoa
  5812  0D30  0824               	movf	??_utoa,w
  5813  0D31  07A8               	addwf	utoa@buf,f
  5814  0D32  0008               	return
  5815  0D33                     __end_of_utoa:	
  5816                           
  5817                           	psect	text33
  5818  0A1D                     __ptext33:	
  5819 ;; *************** function ___lwmod *****************
  5820 ;; Defined at:
  5821 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwmod.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  divisor         2    2[COMMON] unsigned int 
  5824 ;;  dividend        2    4[COMMON] unsigned int 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  counter         1    7[COMMON] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  2    2[COMMON] unsigned int 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5836 ;;      Params:         4       0       0       0
  5837 ;;      Locals:         1       0       0       0
  5838 ;;      Temps:          1       0       0       0
  5839 ;;      Totals:         6       0       0       0
  5840 ;;Total ram usage:        6 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    1
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_printCentiValue
  5847 ;;		_printDeciValue
  5848 ;;		_utoa
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           
  5853                           ;psect for function ___lwmod
  5854  0A1D                     ___lwmod:	
  5855                           
  5856                           ;incstack = 0
  5857                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5858  0A1D  0872               	movf	___lwmod@divisor,w
  5859  0A1E  0473               	iorwf	___lwmod@divisor+1,w
  5860  0A1F  1903               	btfsc	3,2
  5861  0A20  2A44               	goto	l2942
  5862  0A21  01F7               	clrf	___lwmod@counter
  5863  0A22  0AF7               	incf	___lwmod@counter,f
  5864  0A23                     l2932:	
  5865  0A23  1BF3               	btfsc	___lwmod@divisor+1,7
  5866  0A24  2A2F               	goto	l2934
  5867  0A25  3001               	movlw	1
  5868  0A26                     u2635:	
  5869  0A26  35F2               	lslf	___lwmod@divisor,f
  5870  0A27  0DF3               	rlf	___lwmod@divisor+1,f
  5871  0A28  0B89               	decfsz	9,f
  5872  0A29  2A26               	goto	u2635
  5873  0A2A  3001               	movlw	1
  5874  0A2B  00F6               	movwf	??___lwmod
  5875  0A2C  0876               	movf	??___lwmod,w
  5876  0A2D  07F7               	addwf	___lwmod@counter,f
  5877  0A2E  2A23               	goto	l2932
  5878  0A2F                     l2934:	
  5879  0A2F  0873               	movf	___lwmod@divisor+1,w
  5880  0A30  0275               	subwf	___lwmod@dividend+1,w
  5881  0A31  1D03               	skipz
  5882  0A32  2A35               	goto	u2655
  5883  0A33  0872               	movf	___lwmod@divisor,w
  5884  0A34  0274               	subwf	___lwmod@dividend,w
  5885  0A35                     u2655:	
  5886  0A35  1C03               	skipc
  5887  0A36  2A3B               	goto	l2938
  5888  0A37  0872               	movf	___lwmod@divisor,w
  5889  0A38  02F4               	subwf	___lwmod@dividend,f
  5890  0A39  0873               	movf	___lwmod@divisor+1,w
  5891  0A3A  3BF5               	subwfb	___lwmod@dividend+1,f
  5892  0A3B                     l2938:	
  5893  0A3B  3001               	movlw	1
  5894  0A3C                     u2665:	
  5895  0A3C  36F3               	lsrf	___lwmod@divisor+1,f
  5896  0A3D  0CF2               	rrf	___lwmod@divisor,f
  5897  0A3E  0B89               	decfsz	9,f
  5898  0A3F  2A3C               	goto	u2665
  5899  0A40  3001               	movlw	1
  5900  0A41  02F7               	subwf	___lwmod@counter,f
  5901  0A42  1D03               	btfss	3,2
  5902  0A43  2A2F               	goto	l2934
  5903  0A44                     l2942:	
  5904  0A44  0875               	movf	___lwmod@dividend+1,w
  5905  0A45  00F3               	movwf	?___lwmod+1
  5906  0A46  0874               	movf	___lwmod@dividend,w
  5907  0A47  00F2               	movwf	?___lwmod
  5908  0A48  0008               	return
  5909  0A49                     __end_of___lwmod:	
  5910                           
  5911                           	psect	text34
  5912  0AA9                     __ptext34:	
  5913 ;; *************** function ___lwdiv *****************
  5914 ;; Defined at:
  5915 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lwdiv.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  divisor         2    2[COMMON] unsigned int 
  5918 ;;  dividend        2    4[COMMON] unsigned int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  quotient        2    8[COMMON] unsigned int 
  5921 ;;  counter         1    7[COMMON] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  2    2[COMMON] unsigned int 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5931 ;;      Params:         4       0       0       0
  5932 ;;      Locals:         3       0       0       0
  5933 ;;      Temps:          1       0       0       0
  5934 ;;      Totals:         8       0       0       0
  5935 ;;Total ram usage:        8 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_utoa
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function ___lwdiv
  5947  0AA9                     ___lwdiv:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5951  0AA9  01F8               	clrf	___lwdiv@quotient
  5952  0AAA  01F9               	clrf	___lwdiv@quotient+1
  5953  0AAB  0872               	movf	___lwdiv@divisor,w
  5954  0AAC  0473               	iorwf	___lwdiv@divisor+1,w
  5955  0AAD  1903               	btfsc	3,2
  5956  0AAE  2AD8               	goto	l2920
  5957  0AAF  01F7               	clrf	___lwdiv@counter
  5958  0AB0  0AF7               	incf	___lwdiv@counter,f
  5959  0AB1                     l2908:	
  5960  0AB1  1BF3               	btfsc	___lwdiv@divisor+1,7
  5961  0AB2  2ABD               	goto	l2910
  5962  0AB3  3001               	movlw	1
  5963  0AB4                     u2565:	
  5964  0AB4  35F2               	lslf	___lwdiv@divisor,f
  5965  0AB5  0DF3               	rlf	___lwdiv@divisor+1,f
  5966  0AB6  0B89               	decfsz	9,f
  5967  0AB7  2AB4               	goto	u2565
  5968  0AB8  3001               	movlw	1
  5969  0AB9  00F6               	movwf	??___lwdiv
  5970  0ABA  0876               	movf	??___lwdiv,w
  5971  0ABB  07F7               	addwf	___lwdiv@counter,f
  5972  0ABC  2AB1               	goto	l2908
  5973  0ABD                     l2910:	
  5974  0ABD  3001               	movlw	1
  5975  0ABE                     u2585:	
  5976  0ABE  35F8               	lslf	___lwdiv@quotient,f
  5977  0ABF  0DF9               	rlf	___lwdiv@quotient+1,f
  5978  0AC0  0B89               	decfsz	9,f
  5979  0AC1  2ABE               	goto	u2585
  5980  0AC2  0873               	movf	___lwdiv@divisor+1,w
  5981  0AC3  0275               	subwf	___lwdiv@dividend+1,w
  5982  0AC4  1D03               	skipz
  5983  0AC5  2AC8               	goto	u2595
  5984  0AC6  0872               	movf	___lwdiv@divisor,w
  5985  0AC7  0274               	subwf	___lwdiv@dividend,w
  5986  0AC8                     u2595:	
  5987  0AC8  1C03               	skipc
  5988  0AC9  2ACF               	goto	l2916
  5989  0ACA  0872               	movf	___lwdiv@divisor,w
  5990  0ACB  02F4               	subwf	___lwdiv@dividend,f
  5991  0ACC  0873               	movf	___lwdiv@divisor+1,w
  5992  0ACD  3BF5               	subwfb	___lwdiv@dividend+1,f
  5993  0ACE  1478               	bsf	___lwdiv@quotient,0
  5994  0ACF                     l2916:	
  5995  0ACF  3001               	movlw	1
  5996  0AD0                     u2605:	
  5997  0AD0  36F3               	lsrf	___lwdiv@divisor+1,f
  5998  0AD1  0CF2               	rrf	___lwdiv@divisor,f
  5999  0AD2  0B89               	decfsz	9,f
  6000  0AD3  2AD0               	goto	u2605
  6001  0AD4  3001               	movlw	1
  6002  0AD5  02F7               	subwf	___lwdiv@counter,f
  6003  0AD6  1D03               	btfss	3,2
  6004  0AD7  2ABD               	goto	l2910
  6005  0AD8                     l2920:	
  6006  0AD8  0879               	movf	___lwdiv@quotient+1,w
  6007  0AD9  00F3               	movwf	?___lwdiv+1
  6008  0ADA  0878               	movf	___lwdiv@quotient,w
  6009  0ADB  00F2               	movwf	?___lwdiv
  6010  0ADC  0008               	return
  6011  0ADD                     __end_of___lwdiv:	
  6012                           
  6013                           	psect	text35
  6014  0A49                     __ptext35:	
  6015 ;; *************** function _ltoa *****************
  6016 ;; Defined at:
  6017 ;;		line 7 in file "/Applications/microchip/xc8/v1.35/sources/common/ltoa.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  buf             1    wreg     PTR unsigned char 
  6020 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6021 ;;  val             4   19[BANK0 ] long 
  6022 ;;  base            2   23[BANK0 ] int 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  6025 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6026 ;;  cp              1   26[BANK0 ] PTR unsigned char 
  6027 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      PTR unsigned char 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6037 ;;      Params:         0       6       0       0
  6038 ;;      Locals:         0       2       0       0
  6039 ;;      Temps:          0       1       0       0
  6040 ;;      Totals:         0       9       0       0
  6041 ;;Total ram usage:        9 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    3
  6044 ;; This function calls:
  6045 ;;		_ultoa
  6046 ;; This function is called by:
  6047 ;;		_printValue
  6048 ;;		_printCentiValue
  6049 ;;		_printDeciValue
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function _ltoa
  6055  0A49                     _ltoa:	
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in _ltoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6059                           ;ltoa@buf stored from wreg
  6060  0A49  0020               	movlb	0	; select bank0
  6061  0A4A  00BB               	movwf	ltoa@buf
  6062  0A4B  083B               	movf	ltoa@buf,w
  6063  0A4C  00B9               	movwf	??_ltoa
  6064  0A4D  0839               	movf	??_ltoa,w
  6065  0A4E  00BA               	movwf	ltoa@cp
  6066  0A4F  1FB6               	btfss	ltoa@val+3,7
  6067  0A50  2A67               	goto	l2970
  6068  0A51  302D               	movlw	45
  6069  0A52  00B9               	movwf	??_ltoa
  6070  0A53  083B               	movf	ltoa@buf,w
  6071  0A54  0086               	movwf	6
  6072  0A55  0187               	clrf	7
  6073  0A56  0839               	movf	??_ltoa,w
  6074  0A57  0081               	movwf	1
  6075  0A58  3001               	movlw	1
  6076  0A59  00B9               	movwf	??_ltoa
  6077  0A5A  0839               	movf	??_ltoa,w
  6078  0A5B  07BB               	addwf	ltoa@buf,f
  6079  0A5C  09B3               	comf	ltoa@val,f
  6080  0A5D  09B4               	comf	ltoa@val+1,f
  6081  0A5E  09B5               	comf	ltoa@val+2,f
  6082  0A5F  09B6               	comf	ltoa@val+3,f
  6083  0A60  0AB3               	incf	ltoa@val,f
  6084  0A61  1903               	skipnz
  6085  0A62  0AB4               	incf	ltoa@val+1,f
  6086  0A63  1903               	skipnz
  6087  0A64  0AB5               	incf	ltoa@val+2,f
  6088  0A65  1903               	skipnz
  6089  0A66  0AB6               	incf	ltoa@val+3,f
  6090  0A67                     l2970:	
  6091  0A67  0836               	movf	ltoa@val+3,w
  6092  0A68  00A9               	movwf	ultoa@val+3
  6093  0A69  0835               	movf	ltoa@val+2,w
  6094  0A6A  00A8               	movwf	ultoa@val+2
  6095  0A6B  0834               	movf	ltoa@val+1,w
  6096  0A6C  00A7               	movwf	ultoa@val+1
  6097  0A6D  0833               	movf	ltoa@val,w
  6098  0A6E  00A6               	movwf	ultoa@val
  6099  0A6F  0838               	movf	ltoa@base+1,w
  6100  0A70  00AB               	movwf	ultoa@base+1
  6101  0A71  0837               	movf	ltoa@base,w
  6102  0A72  00AA               	movwf	ultoa@base
  6103  0A73  083B               	movf	ltoa@buf,w
  6104  0A74  3187  2724         	fcall	_ultoa
  6105  0A76  0008               	return
  6106  0A77                     __end_of_ltoa:	
  6107                           ;	Return value of _ltoa is never used
  6108                           
  6109                           
  6110                           	psect	text36
  6111  0724                     __ptext36:	
  6112 ;; *************** function _ultoa *****************
  6113 ;; Defined at:
  6114 ;;		line 32 in file "/Applications/microchip/xc8/v1.35/sources/common/ltoa.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  buf             1    wreg     PTR unsigned char 
  6117 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6118 ;;  val             4    6[BANK0 ] unsigned long 
  6119 ;;  base            2   10[BANK0 ] int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  6122 ;;		 -> printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  6123 ;;  v               4   13[BANK0 ] unsigned long 
  6124 ;;  c               1   17[BANK0 ] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      PTR unsigned char 
  6127 ;; Registers used:
  6128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6134 ;;      Params:         0       6       0       0
  6135 ;;      Locals:         0       6       0       0
  6136 ;;      Temps:          0       1       0       0
  6137 ;;      Totals:         0      13       0       0
  6138 ;;Total ram usage:       13 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    2
  6141 ;; This function calls:
  6142 ;;		___lldiv
  6143 ;;		___llmod
  6144 ;; This function is called by:
  6145 ;;		_ltoa
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _ultoa
  6151  0724                     _ultoa:	
  6152                           
  6153                           ;incstack = 0
  6154                           ; Regs used in _ultoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6155                           ;ultoa@buf stored from wreg
  6156  0724  0020               	movlb	0	; select bank0
  6157  0725  00B2               	movwf	ultoa@buf
  6158  0726  0829               	movf	ultoa@val+3,w
  6159  0727  00B0               	movwf	ultoa@v+3
  6160  0728  0828               	movf	ultoa@val+2,w
  6161  0729  00AF               	movwf	ultoa@v+2
  6162  072A  0827               	movf	ultoa@val+1,w
  6163  072B  00AE               	movwf	ultoa@v+1
  6164  072C  0826               	movf	ultoa@val,w
  6165  072D  00AD               	movwf	ultoa@v
  6166  072E                     l2874:	
  6167  072E  082A               	movf	ultoa@base,w
  6168  072F  00F2               	movwf	___lldiv@divisor
  6169  0730  082B               	movf	ultoa@base+1,w
  6170  0731  00F3               	movwf	___lldiv@divisor+1
  6171  0732  0D89               	rlf	9,f
  6172  0733  3B89               	subwfb	9,f
  6173  0734  0989               	comf	9,f
  6174  0735  00F4               	movwf	___lldiv@divisor+2
  6175  0736  00F5               	movwf	___lldiv@divisor+3
  6176  0737  0830               	movf	ultoa@v+3,w
  6177  0738  00F9               	movwf	___lldiv@dividend+3
  6178  0739  082F               	movf	ultoa@v+2,w
  6179  073A  00F8               	movwf	___lldiv@dividend+2
  6180  073B  082E               	movf	ultoa@v+1,w
  6181  073C  00F7               	movwf	___lldiv@dividend+1
  6182  073D  082D               	movf	ultoa@v,w
  6183  073E  00F6               	movwf	___lldiv@dividend
  6184  073F  3187  27AD  3187   	fcall	___lldiv
  6185  0742  0875               	movf	?___lldiv+3,w
  6186  0743  0020               	movlb	0	; select bank0
  6187  0744  00B0               	movwf	ultoa@v+3
  6188  0745  0874               	movf	?___lldiv+2,w
  6189  0746  00AF               	movwf	ultoa@v+2
  6190  0747  0873               	movf	?___lldiv+1,w
  6191  0748  00AE               	movwf	ultoa@v+1
  6192  0749  0872               	movf	?___lldiv,w
  6193  074A  00AD               	movwf	ultoa@v
  6194  074B  3001               	movlw	1
  6195  074C  00AC               	movwf	??_ultoa
  6196  074D  082C               	movf	??_ultoa,w
  6197  074E  07B2               	addwf	ultoa@buf,f
  6198  074F  0830               	movf	ultoa@v+3,w
  6199  0750  042F               	iorwf	ultoa@v+2,w
  6200  0751  042E               	iorwf	ultoa@v+1,w
  6201  0752  042D               	iorwf	ultoa@v,w
  6202  0753  1D03               	skipz
  6203  0754  2F2E               	goto	l2874
  6204  0755  0832               	movf	ultoa@buf,w
  6205  0756  0086               	movwf	6
  6206  0757  0187               	clrf	7
  6207  0758  0181               	clrf	1
  6208  0759  3001               	movlw	1
  6209  075A  02B2               	subwf	ultoa@buf,f
  6210  075B                     l2884:	
  6211  075B  082A               	movf	ultoa@base,w
  6212  075C  00F2               	movwf	___llmod@divisor
  6213  075D  082B               	movf	ultoa@base+1,w
  6214  075E  00F3               	movwf	___llmod@divisor+1
  6215  075F  0D89               	rlf	9,f
  6216  0760  3B89               	subwfb	9,f
  6217  0761  0989               	comf	9,f
  6218  0762  00F4               	movwf	___llmod@divisor+2
  6219  0763  00F5               	movwf	___llmod@divisor+3
  6220  0764  0829               	movf	ultoa@val+3,w
  6221  0765  00F9               	movwf	___llmod@dividend+3
  6222  0766  0828               	movf	ultoa@val+2,w
  6223  0767  00F8               	movwf	___llmod@dividend+2
  6224  0768  0827               	movf	ultoa@val+1,w
  6225  0769  00F7               	movwf	___llmod@dividend+1
  6226  076A  0826               	movf	ultoa@val,w
  6227  076B  00F6               	movwf	___llmod@dividend
  6228  076C  318B  235C  3187   	fcall	___llmod
  6229  076F  0872               	movf	?___llmod,w
  6230  0770  0020               	movlb	0	; select bank0
  6231  0771  00AC               	movwf	??_ultoa
  6232  0772  082C               	movf	??_ultoa,w
  6233  0773  00B1               	movwf	ultoa@c
  6234  0774  082A               	movf	ultoa@base,w
  6235  0775  00F2               	movwf	___lldiv@divisor
  6236  0776  082B               	movf	ultoa@base+1,w
  6237  0777  00F3               	movwf	___lldiv@divisor+1
  6238  0778  0D89               	rlf	9,f
  6239  0779  3B89               	subwfb	9,f
  6240  077A  0989               	comf	9,f
  6241  077B  00F4               	movwf	___lldiv@divisor+2
  6242  077C  00F5               	movwf	___lldiv@divisor+3
  6243  077D  0829               	movf	ultoa@val+3,w
  6244  077E  00F9               	movwf	___lldiv@dividend+3
  6245  077F  0828               	movf	ultoa@val+2,w
  6246  0780  00F8               	movwf	___lldiv@dividend+2
  6247  0781  0827               	movf	ultoa@val+1,w
  6248  0782  00F7               	movwf	___lldiv@dividend+1
  6249  0783  0826               	movf	ultoa@val,w
  6250  0784  00F6               	movwf	___lldiv@dividend
  6251  0785  3187  27AD  3187   	fcall	___lldiv
  6252  0788  0875               	movf	?___lldiv+3,w
  6253  0789  0020               	movlb	0	; select bank0
  6254  078A  00A9               	movwf	ultoa@val+3
  6255  078B  0874               	movf	?___lldiv+2,w
  6256  078C  00A8               	movwf	ultoa@val+2
  6257  078D  0873               	movf	?___lldiv+1,w
  6258  078E  00A7               	movwf	ultoa@val+1
  6259  078F  0872               	movf	?___lldiv,w
  6260  0790  00A6               	movwf	ultoa@val
  6261  0791  300A               	movlw	10
  6262  0792  0231               	subwf	ultoa@c,w
  6263  0793  1C03               	skipc
  6264  0794  2F99               	goto	l888
  6265  0795  3007               	movlw	7
  6266  0796  00AC               	movwf	??_ultoa
  6267  0797  082C               	movf	??_ultoa,w
  6268  0798  07B1               	addwf	ultoa@c,f
  6269  0799                     l888:	
  6270  0799  3030               	movlw	48
  6271  079A  00AC               	movwf	??_ultoa
  6272  079B  082C               	movf	??_ultoa,w
  6273  079C  07B1               	addwf	ultoa@c,f
  6274  079D  0831               	movf	ultoa@c,w
  6275  079E  00AC               	movwf	??_ultoa
  6276  079F  0832               	movf	ultoa@buf,w
  6277  07A0  0086               	movwf	6
  6278  07A1  0187               	clrf	7
  6279  07A2  082C               	movf	??_ultoa,w
  6280  07A3  0081               	movwf	1
  6281  07A4  3001               	movlw	1
  6282  07A5  02B2               	subwf	ultoa@buf,f
  6283  07A6  0829               	movf	ultoa@val+3,w
  6284  07A7  0428               	iorwf	ultoa@val+2,w
  6285  07A8  0427               	iorwf	ultoa@val+1,w
  6286  07A9  0426               	iorwf	ultoa@val,w
  6287  07AA  1903               	btfsc	3,2
  6288  07AB  0008               	return
  6289  07AC  2F5B               	goto	l2884
  6290  07AD                     __end_of_ultoa:	
  6291                           ;	Return value of _ultoa is never used
  6292                           
  6293                           
  6294                           	psect	text37
  6295  0B5C                     __ptext37:	
  6296 ;; *************** function ___llmod *****************
  6297 ;; Defined at:
  6298 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/llmod.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  divisor         4    2[COMMON] unsigned long 
  6301 ;;  dividend        4    6[COMMON] unsigned long 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  counter         1    1[BANK0 ] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  4    2[COMMON] unsigned long 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6313 ;;      Params:         8       0       0       0
  6314 ;;      Locals:         0       1       0       0
  6315 ;;      Temps:          0       1       0       0
  6316 ;;      Totals:         8       2       0       0
  6317 ;;Total ram usage:       10 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_ultoa
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function ___llmod
  6329  0B5C                     ___llmod:	
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6333  0B5C  0875               	movf	___llmod@divisor+3,w
  6334  0B5D  0474               	iorwf	___llmod@divisor+2,w
  6335  0B5E  0473               	iorwf	___llmod@divisor+1,w
  6336  0B5F  0472               	iorwf	___llmod@divisor,w
  6337  0B60  1903               	skipnz
  6338  0B61  2B96               	goto	l2854
  6339  0B62  0020               	movlb	0	; select bank0
  6340  0B63  01A1               	clrf	___llmod@counter
  6341  0B64  0AA1               	incf	___llmod@counter,f
  6342  0B65                     l2844:	
  6343  0B65  1BF5               	btfsc	___llmod@divisor+3,7
  6344  0B66  2B73               	goto	l2846
  6345  0B67  3001               	movlw	1
  6346  0B68                     u2455:	
  6347  0B68  35F2               	lslf	___llmod@divisor,f
  6348  0B69  0DF3               	rlf	___llmod@divisor+1,f
  6349  0B6A  0DF4               	rlf	___llmod@divisor+2,f
  6350  0B6B  0DF5               	rlf	___llmod@divisor+3,f
  6351  0B6C  0B89               	decfsz	9,f
  6352  0B6D  2B68               	goto	u2455
  6353  0B6E  3001               	movlw	1
  6354  0B6F  00A0               	movwf	??___llmod
  6355  0B70  0820               	movf	??___llmod,w
  6356  0B71  07A1               	addwf	___llmod@counter,f
  6357  0B72  2B65               	goto	l2844
  6358  0B73                     l2846:	
  6359  0B73  0875               	movf	___llmod@divisor+3,w
  6360  0B74  0279               	subwf	___llmod@dividend+3,w
  6361  0B75  1D03               	skipz
  6362  0B76  2B81               	goto	u2475
  6363  0B77  0874               	movf	___llmod@divisor+2,w
  6364  0B78  0278               	subwf	___llmod@dividend+2,w
  6365  0B79  1D03               	skipz
  6366  0B7A  2B81               	goto	u2475
  6367  0B7B  0873               	movf	___llmod@divisor+1,w
  6368  0B7C  0277               	subwf	___llmod@dividend+1,w
  6369  0B7D  1D03               	skipz
  6370  0B7E  2B81               	goto	u2475
  6371  0B7F  0872               	movf	___llmod@divisor,w
  6372  0B80  0276               	subwf	___llmod@dividend,w
  6373  0B81                     u2475:	
  6374  0B81  1C03               	skipc
  6375  0B82  2B8B               	goto	l2850
  6376  0B83  0872               	movf	___llmod@divisor,w
  6377  0B84  02F6               	subwf	___llmod@dividend,f
  6378  0B85  0873               	movf	___llmod@divisor+1,w
  6379  0B86  3BF7               	subwfb	___llmod@dividend+1,f
  6380  0B87  0874               	movf	___llmod@divisor+2,w
  6381  0B88  3BF8               	subwfb	___llmod@dividend+2,f
  6382  0B89  0875               	movf	___llmod@divisor+3,w
  6383  0B8A  3BF9               	subwfb	___llmod@dividend+3,f
  6384  0B8B                     l2850:	
  6385  0B8B  3001               	movlw	1
  6386  0B8C                     u2485:	
  6387  0B8C  36F5               	lsrf	___llmod@divisor+3,f
  6388  0B8D  0CF4               	rrf	___llmod@divisor+2,f
  6389  0B8E  0CF3               	rrf	___llmod@divisor+1,f
  6390  0B8F  0CF2               	rrf	___llmod@divisor,f
  6391  0B90  0B89               	decfsz	9,f
  6392  0B91  2B8C               	goto	u2485
  6393  0B92  3001               	movlw	1
  6394  0B93  02A1               	subwf	___llmod@counter,f
  6395  0B94  1D03               	btfss	3,2
  6396  0B95  2B73               	goto	l2846
  6397  0B96                     l2854:	
  6398  0B96  0879               	movf	___llmod@dividend+3,w
  6399  0B97  00F5               	movwf	?___llmod+3
  6400  0B98  0878               	movf	___llmod@dividend+2,w
  6401  0B99  00F4               	movwf	?___llmod+2
  6402  0B9A  0877               	movf	___llmod@dividend+1,w
  6403  0B9B  00F3               	movwf	?___llmod+1
  6404  0B9C  0876               	movf	___llmod@dividend,w
  6405  0B9D  00F2               	movwf	?___llmod
  6406  0B9E  0008               	return
  6407  0B9F                     __end_of___llmod:	
  6408                           
  6409                           	psect	text38
  6410  07AD                     __ptext38:	
  6411 ;; *************** function ___lldiv *****************
  6412 ;; Defined at:
  6413 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/lldiv.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  divisor         4    2[COMMON] unsigned long 
  6416 ;;  dividend        4    6[COMMON] unsigned long 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  quotient        4    1[BANK0 ] unsigned long 
  6419 ;;  counter         1    5[BANK0 ] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  4    2[COMMON] unsigned long 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6429 ;;      Params:         8       0       0       0
  6430 ;;      Locals:         0       5       0       0
  6431 ;;      Temps:          0       1       0       0
  6432 ;;      Totals:         8       6       0       0
  6433 ;;Total ram usage:       14 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    1
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_ultoa
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function ___lldiv
  6445  07AD                     ___lldiv:	
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6449  07AD  3000               	movlw	0
  6450  07AE  0020               	movlb	0	; select bank0
  6451  07AF  00A4               	movwf	___lldiv@quotient+3
  6452  07B0  3000               	movlw	0
  6453  07B1  00A3               	movwf	___lldiv@quotient+2
  6454  07B2  3000               	movlw	0
  6455  07B3  00A2               	movwf	___lldiv@quotient+1
  6456  07B4  3000               	movlw	0
  6457  07B5  00A1               	movwf	___lldiv@quotient
  6458  07B6  0875               	movf	___lldiv@divisor+3,w
  6459  07B7  0474               	iorwf	___lldiv@divisor+2,w
  6460  07B8  0473               	iorwf	___lldiv@divisor+1,w
  6461  07B9  0472               	iorwf	___lldiv@divisor,w
  6462  07BA  1903               	skipnz
  6463  07BB  2FF7               	goto	l2834
  6464  07BC  01A5               	clrf	___lldiv@counter
  6465  07BD  0AA5               	incf	___lldiv@counter,f
  6466  07BE                     l2820:	
  6467  07BE  1BF5               	btfsc	___lldiv@divisor+3,7
  6468  07BF  2FCC               	goto	l2822
  6469  07C0  3001               	movlw	1
  6470  07C1                     u2385:	
  6471  07C1  35F2               	lslf	___lldiv@divisor,f
  6472  07C2  0DF3               	rlf	___lldiv@divisor+1,f
  6473  07C3  0DF4               	rlf	___lldiv@divisor+2,f
  6474  07C4  0DF5               	rlf	___lldiv@divisor+3,f
  6475  07C5  0B89               	decfsz	9,f
  6476  07C6  2FC1               	goto	u2385
  6477  07C7  3001               	movlw	1
  6478  07C8  00A0               	movwf	??___lldiv
  6479  07C9  0820               	movf	??___lldiv,w
  6480  07CA  07A5               	addwf	___lldiv@counter,f
  6481  07CB  2FBE               	goto	l2820
  6482  07CC                     l2822:	
  6483  07CC  3001               	movlw	1
  6484  07CD                     u2405:	
  6485  07CD  35A1               	lslf	___lldiv@quotient,f
  6486  07CE  0DA2               	rlf	___lldiv@quotient+1,f
  6487  07CF  0DA3               	rlf	___lldiv@quotient+2,f
  6488  07D0  0DA4               	rlf	___lldiv@quotient+3,f
  6489  07D1  0B89               	decfsz	9,f
  6490  07D2  2FCD               	goto	u2405
  6491  07D3  0875               	movf	___lldiv@divisor+3,w
  6492  07D4  0279               	subwf	___lldiv@dividend+3,w
  6493  07D5  1D03               	skipz
  6494  07D6  2FE1               	goto	u2415
  6495  07D7  0874               	movf	___lldiv@divisor+2,w
  6496  07D8  0278               	subwf	___lldiv@dividend+2,w
  6497  07D9  1D03               	skipz
  6498  07DA  2FE1               	goto	u2415
  6499  07DB  0873               	movf	___lldiv@divisor+1,w
  6500  07DC  0277               	subwf	___lldiv@dividend+1,w
  6501  07DD  1D03               	skipz
  6502  07DE  2FE1               	goto	u2415
  6503  07DF  0872               	movf	___lldiv@divisor,w
  6504  07E0  0276               	subwf	___lldiv@dividend,w
  6505  07E1                     u2415:	
  6506  07E1  1C03               	skipc
  6507  07E2  2FEC               	goto	l2830
  6508  07E3  0872               	movf	___lldiv@divisor,w
  6509  07E4  02F6               	subwf	___lldiv@dividend,f
  6510  07E5  0873               	movf	___lldiv@divisor+1,w
  6511  07E6  3BF7               	subwfb	___lldiv@dividend+1,f
  6512  07E7  0874               	movf	___lldiv@divisor+2,w
  6513  07E8  3BF8               	subwfb	___lldiv@dividend+2,f
  6514  07E9  0875               	movf	___lldiv@divisor+3,w
  6515  07EA  3BF9               	subwfb	___lldiv@dividend+3,f
  6516  07EB  1421               	bsf	___lldiv@quotient,0
  6517  07EC                     l2830:	
  6518  07EC  3001               	movlw	1
  6519  07ED                     u2425:	
  6520  07ED  36F5               	lsrf	___lldiv@divisor+3,f
  6521  07EE  0CF4               	rrf	___lldiv@divisor+2,f
  6522  07EF  0CF3               	rrf	___lldiv@divisor+1,f
  6523  07F0  0CF2               	rrf	___lldiv@divisor,f
  6524  07F1  0B89               	decfsz	9,f
  6525  07F2  2FED               	goto	u2425
  6526  07F3  3001               	movlw	1
  6527  07F4  02A5               	subwf	___lldiv@counter,f
  6528  07F5  1D03               	btfss	3,2
  6529  07F6  2FCC               	goto	l2822
  6530  07F7                     l2834:	
  6531  07F7  0824               	movf	___lldiv@quotient+3,w
  6532  07F8  00F5               	movwf	?___lldiv+3
  6533  07F9  0823               	movf	___lldiv@quotient+2,w
  6534  07FA  00F4               	movwf	?___lldiv+2
  6535  07FB  0822               	movf	___lldiv@quotient+1,w
  6536  07FC  00F3               	movwf	?___lldiv+1
  6537  07FD  0821               	movf	___lldiv@quotient,w
  6538  07FE  00F2               	movwf	?___lldiv
  6539  07FF  0008               	return
  6540  0800                     __end_of___lldiv:	
  6541                           
  6542                           	psect	text39
  6543  0EF6                     __ptext39:	
  6544 ;; *************** function ___aldiv *****************
  6545 ;; Defined at:
  6546 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/aldiv.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  divisor         4    2[COMMON] long 
  6549 ;;  dividend        4    6[COMMON] long 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  quotient        4    3[BANK0 ] long 
  6552 ;;  sign            1    2[BANK0 ] unsigned char 
  6553 ;;  counter         1    1[BANK0 ] unsigned char 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  4    2[COMMON] long 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6563 ;;      Params:         8       0       0       0
  6564 ;;      Locals:         0       6       0       0
  6565 ;;      Temps:          0       1       0       0
  6566 ;;      Totals:         8       7       0       0
  6567 ;;Total ram usage:       15 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_printCentiValue
  6574 ;;		_printDeciValue
  6575 ;;		_printGForce
  6576 ;;		_printGyro
  6577 ;;		_printVoltage
  6578 ;;		_main
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function ___aldiv
  6584  0EF6                     ___aldiv:	
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6588  0EF6  0020               	movlb	0	; select bank0
  6589  0EF7  01A2               	clrf	___aldiv@sign
  6590  0EF8  1FF5               	btfss	___aldiv@divisor+3,7
  6591  0EF9  2F07               	goto	l585
  6592  0EFA  09F2               	comf	___aldiv@divisor,f
  6593  0EFB  09F3               	comf	___aldiv@divisor+1,f
  6594  0EFC  09F4               	comf	___aldiv@divisor+2,f
  6595  0EFD  09F5               	comf	___aldiv@divisor+3,f
  6596  0EFE  0AF2               	incf	___aldiv@divisor,f
  6597  0EFF  1903               	skipnz
  6598  0F00  0AF3               	incf	___aldiv@divisor+1,f
  6599  0F01  1903               	skipnz
  6600  0F02  0AF4               	incf	___aldiv@divisor+2,f
  6601  0F03  1903               	skipnz
  6602  0F04  0AF5               	incf	___aldiv@divisor+3,f
  6603  0F05  01A2               	clrf	___aldiv@sign
  6604  0F06  0AA2               	incf	___aldiv@sign,f
  6605  0F07                     l585:	
  6606  0F07  1FF9               	btfss	___aldiv@dividend+3,7
  6607  0F08  2F18               	goto	l3014
  6608  0F09  09F6               	comf	___aldiv@dividend,f
  6609  0F0A  09F7               	comf	___aldiv@dividend+1,f
  6610  0F0B  09F8               	comf	___aldiv@dividend+2,f
  6611  0F0C  09F9               	comf	___aldiv@dividend+3,f
  6612  0F0D  0AF6               	incf	___aldiv@dividend,f
  6613  0F0E  1903               	skipnz
  6614  0F0F  0AF7               	incf	___aldiv@dividend+1,f
  6615  0F10  1903               	skipnz
  6616  0F11  0AF8               	incf	___aldiv@dividend+2,f
  6617  0F12  1903               	skipnz
  6618  0F13  0AF9               	incf	___aldiv@dividend+3,f
  6619  0F14  3001               	movlw	1
  6620  0F15  00A0               	movwf	??___aldiv
  6621  0F16  0820               	movf	??___aldiv,w
  6622  0F17  06A2               	xorwf	___aldiv@sign,f
  6623  0F18                     l3014:	
  6624  0F18  3000               	movlw	0
  6625  0F19  00A6               	movwf	___aldiv@quotient+3
  6626  0F1A  3000               	movlw	0
  6627  0F1B  00A5               	movwf	___aldiv@quotient+2
  6628  0F1C  3000               	movlw	0
  6629  0F1D  00A4               	movwf	___aldiv@quotient+1
  6630  0F1E  3000               	movlw	0
  6631  0F1F  00A3               	movwf	___aldiv@quotient
  6632  0F20  0875               	movf	___aldiv@divisor+3,w
  6633  0F21  0474               	iorwf	___aldiv@divisor+2,w
  6634  0F22  0473               	iorwf	___aldiv@divisor+1,w
  6635  0F23  0472               	iorwf	___aldiv@divisor,w
  6636  0F24  1903               	skipnz
  6637  0F25  2F61               	goto	l3036
  6638  0F26  01A1               	clrf	___aldiv@counter
  6639  0F27  0AA1               	incf	___aldiv@counter,f
  6640  0F28                     l3022:	
  6641  0F28  1BF5               	btfsc	___aldiv@divisor+3,7
  6642  0F29  2F36               	goto	l3024
  6643  0F2A  3001               	movlw	1
  6644  0F2B                     u2785:	
  6645  0F2B  35F2               	lslf	___aldiv@divisor,f
  6646  0F2C  0DF3               	rlf	___aldiv@divisor+1,f
  6647  0F2D  0DF4               	rlf	___aldiv@divisor+2,f
  6648  0F2E  0DF5               	rlf	___aldiv@divisor+3,f
  6649  0F2F  0B89               	decfsz	9,f
  6650  0F30  2F2B               	goto	u2785
  6651  0F31  3001               	movlw	1
  6652  0F32  00A0               	movwf	??___aldiv
  6653  0F33  0820               	movf	??___aldiv,w
  6654  0F34  07A1               	addwf	___aldiv@counter,f
  6655  0F35  2F28               	goto	l3022
  6656  0F36                     l3024:	
  6657  0F36  3001               	movlw	1
  6658  0F37                     u2805:	
  6659  0F37  35A3               	lslf	___aldiv@quotient,f
  6660  0F38  0DA4               	rlf	___aldiv@quotient+1,f
  6661  0F39  0DA5               	rlf	___aldiv@quotient+2,f
  6662  0F3A  0DA6               	rlf	___aldiv@quotient+3,f
  6663  0F3B  0B89               	decfsz	9,f
  6664  0F3C  2F37               	goto	u2805
  6665  0F3D  0875               	movf	___aldiv@divisor+3,w
  6666  0F3E  0279               	subwf	___aldiv@dividend+3,w
  6667  0F3F  1D03               	skipz
  6668  0F40  2F4B               	goto	u2815
  6669  0F41  0874               	movf	___aldiv@divisor+2,w
  6670  0F42  0278               	subwf	___aldiv@dividend+2,w
  6671  0F43  1D03               	skipz
  6672  0F44  2F4B               	goto	u2815
  6673  0F45  0873               	movf	___aldiv@divisor+1,w
  6674  0F46  0277               	subwf	___aldiv@dividend+1,w
  6675  0F47  1D03               	skipz
  6676  0F48  2F4B               	goto	u2815
  6677  0F49  0872               	movf	___aldiv@divisor,w
  6678  0F4A  0276               	subwf	___aldiv@dividend,w
  6679  0F4B                     u2815:	
  6680  0F4B  1C03               	skipc
  6681  0F4C  2F56               	goto	l3032
  6682  0F4D  0872               	movf	___aldiv@divisor,w
  6683  0F4E  02F6               	subwf	___aldiv@dividend,f
  6684  0F4F  0873               	movf	___aldiv@divisor+1,w
  6685  0F50  3BF7               	subwfb	___aldiv@dividend+1,f
  6686  0F51  0874               	movf	___aldiv@divisor+2,w
  6687  0F52  3BF8               	subwfb	___aldiv@dividend+2,f
  6688  0F53  0875               	movf	___aldiv@divisor+3,w
  6689  0F54  3BF9               	subwfb	___aldiv@dividend+3,f
  6690  0F55  1423               	bsf	___aldiv@quotient,0
  6691  0F56                     l3032:	
  6692  0F56  3001               	movlw	1
  6693  0F57                     u2825:	
  6694  0F57  36F5               	lsrf	___aldiv@divisor+3,f
  6695  0F58  0CF4               	rrf	___aldiv@divisor+2,f
  6696  0F59  0CF3               	rrf	___aldiv@divisor+1,f
  6697  0F5A  0CF2               	rrf	___aldiv@divisor,f
  6698  0F5B  0B89               	decfsz	9,f
  6699  0F5C  2F57               	goto	u2825
  6700  0F5D  3001               	movlw	1
  6701  0F5E  02A1               	subwf	___aldiv@counter,f
  6702  0F5F  1D03               	btfss	3,2
  6703  0F60  2F36               	goto	l3024
  6704  0F61                     l3036:	
  6705  0F61  0822               	movf	___aldiv@sign,w
  6706  0F62  1903               	btfsc	3,2
  6707  0F63  2F6F               	goto	l3040
  6708  0F64  09A3               	comf	___aldiv@quotient,f
  6709  0F65  09A4               	comf	___aldiv@quotient+1,f
  6710  0F66  09A5               	comf	___aldiv@quotient+2,f
  6711  0F67  09A6               	comf	___aldiv@quotient+3,f
  6712  0F68  0AA3               	incf	___aldiv@quotient,f
  6713  0F69  1903               	skipnz
  6714  0F6A  0AA4               	incf	___aldiv@quotient+1,f
  6715  0F6B  1903               	skipnz
  6716  0F6C  0AA5               	incf	___aldiv@quotient+2,f
  6717  0F6D  1903               	skipnz
  6718  0F6E  0AA6               	incf	___aldiv@quotient+3,f
  6719  0F6F                     l3040:	
  6720  0F6F  0826               	movf	___aldiv@quotient+3,w
  6721  0F70  00F5               	movwf	?___aldiv+3
  6722  0F71  0825               	movf	___aldiv@quotient+2,w
  6723  0F72  00F4               	movwf	?___aldiv+2
  6724  0F73  0824               	movf	___aldiv@quotient+1,w
  6725  0F74  00F3               	movwf	?___aldiv+1
  6726  0F75  0823               	movf	___aldiv@quotient,w
  6727  0F76  00F2               	movwf	?___aldiv
  6728  0F77  0008               	return
  6729  0F78                     __end_of___aldiv:	
  6730                           
  6731                           	psect	text40
  6732  0F78                     __ptext40:	
  6733 ;; *************** function _isqrt *****************
  6734 ;; Defined at:
  6735 ;;		line 325 in file "blueGyro.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  val             4    2[COMMON] unsigned long 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  b               4   24[BANK0 ] unsigned long 
  6740 ;;  g               4   20[BANK0 ] unsigned long 
  6741 ;;  bshft           4   16[BANK0 ] unsigned long 
  6742 ;;  temp            4   12[BANK0 ] unsigned long 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  2    2[COMMON] unsigned short 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6752 ;;      Params:         4       0       0       0
  6753 ;;      Locals:         0      16       0       0
  6754 ;;      Temps:          0      12       0       0
  6755 ;;      Totals:         4      28       0       0
  6756 ;;Total ram usage:       32 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_DisplayInfo
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           
  6767                           ;psect for function _isqrt
  6768  0F78                     _isqrt:	
  6769                           
  6770                           ;blueGyro.c: 326: unsigned long temp, g=0, b = 0x8000, bshft = 15;
  6771                           
  6772                           ;incstack = 0
  6773                           ; Regs used in _isqrt: [wreg+status,2+status,0]
  6774  0F78  3000               	movlw	0
  6775  0F79  0020               	movlb	0	; select bank0
  6776  0F7A  00B7               	movwf	isqrt@g+3
  6777  0F7B  3000               	movlw	0
  6778  0F7C  00B6               	movwf	isqrt@g+2
  6779  0F7D  3000               	movlw	0
  6780  0F7E  00B5               	movwf	isqrt@g+1
  6781  0F7F  3000               	movlw	0
  6782  0F80  00B4               	movwf	isqrt@g
  6783  0F81  3000               	movlw	0
  6784  0F82  00BB               	movwf	isqrt@b+3
  6785  0F83  3000               	movlw	0
  6786  0F84  00BA               	movwf	isqrt@b+2
  6787  0F85  3080               	movlw	128
  6788  0F86  00B9               	movwf	isqrt@b+1
  6789  0F87  3000               	movlw	0
  6790  0F88  00B8               	movwf	isqrt@b
  6791  0F89  3000               	movlw	0
  6792  0F8A  00B3               	movwf	isqrt@bshft+3
  6793  0F8B  3000               	movlw	0
  6794  0F8C  00B2               	movwf	isqrt@bshft+2
  6795  0F8D  3000               	movlw	0
  6796  0F8E  00B1               	movwf	isqrt@bshft+1
  6797  0F8F  300F               	movlw	15
  6798  0F90  00B0               	movwf	isqrt@bshft
  6799  0F91                     l3224:	
  6800                           ;blueGyro.c: 327: do {
  6801                           
  6802                           
  6803                           ;blueGyro.c: 328: if (val >= (temp = (((g << 1) + b)<<bshft--))) {
  6804  0F91  0838               	movf	isqrt@b,w
  6805  0F92  00A0               	movwf	??_isqrt
  6806  0F93  0839               	movf	isqrt@b+1,w
  6807  0F94  00A1               	movwf	??_isqrt+1
  6808  0F95  083A               	movf	isqrt@b+2,w
  6809  0F96  00A2               	movwf	??_isqrt+2
  6810  0F97  083B               	movf	isqrt@b+3,w
  6811  0F98  00A3               	movwf	??_isqrt+3
  6812  0F99  0834               	movf	isqrt@g,w
  6813  0F9A  00A4               	movwf	??_isqrt+4
  6814  0F9B  0835               	movf	isqrt@g+1,w
  6815  0F9C  00A5               	movwf	??_isqrt+5
  6816  0F9D  0836               	movf	isqrt@g+2,w
  6817  0F9E  00A6               	movwf	??_isqrt+6
  6818  0F9F  0837               	movf	isqrt@g+3,w
  6819  0FA0  00A7               	movwf	??_isqrt+7
  6820  0FA1  3001               	movlw	1
  6821  0FA2                     u3045:	
  6822  0FA2  35A4               	lslf	??_isqrt+4,f
  6823  0FA3  0DA5               	rlf	??_isqrt+5,f
  6824  0FA4  0DA6               	rlf	??_isqrt+6,f
  6825  0FA5  0DA7               	rlf	??_isqrt+7,f
  6826  0FA6  0B89               	decfsz	9,f
  6827  0FA7  2FA2               	goto	u3045
  6828  0FA8  0824               	movf	??_isqrt+4,w
  6829  0FA9  07A0               	addwf	??_isqrt,f
  6830  0FAA  0825               	movf	??_isqrt+5,w
  6831  0FAB  3DA1               	addwfc	??_isqrt+1,f
  6832  0FAC  0826               	movf	??_isqrt+6,w
  6833  0FAD  3DA2               	addwfc	??_isqrt+2,f
  6834  0FAE  0827               	movf	??_isqrt+7,w
  6835  0FAF  3DA3               	addwfc	??_isqrt+3,f
  6836  0FB0  0833               	movf	isqrt@bshft+3,w
  6837  0FB1  00AB               	movwf	??_isqrt+11
  6838  0FB2  0832               	movf	isqrt@bshft+2,w
  6839  0FB3  00AA               	movwf	??_isqrt+10
  6840  0FB4  0831               	movf	isqrt@bshft+1,w
  6841  0FB5  00A9               	movwf	??_isqrt+9
  6842  0FB6  0830               	movf	isqrt@bshft,w
  6843  0FB7  00A8               	movwf	??_isqrt+8
  6844  0FB8  3001               	movlw	1
  6845  0FB9  02B0               	subwf	isqrt@bshft,f
  6846  0FBA  3000               	movlw	0
  6847  0FBB  3BB1               	subwfb	isqrt@bshft+1,f
  6848  0FBC  3BB2               	subwfb	isqrt@bshft+2,f
  6849  0FBD  3BB3               	subwfb	isqrt@bshft+3,f
  6850  0FBE  0A28               	incf	??_isqrt+8,w
  6851  0FBF  2FC4               	goto	u3050
  6852  0FC0                     u3055:	
  6853  0FC0  35A0               	lslf	??_isqrt,f
  6854  0FC1  0DA1               	rlf	??_isqrt+1,f
  6855  0FC2  0DA2               	rlf	??_isqrt+2,f
  6856  0FC3  0DA3               	rlf	??_isqrt+3,f
  6857  0FC4                     u3050:	
  6858  0FC4  0B89               	decfsz	9,f
  6859  0FC5  2FC0               	goto	u3055
  6860  0FC6  0823               	movf	??_isqrt+3,w
  6861  0FC7  00AF               	movwf	isqrt@temp+3
  6862  0FC8  0822               	movf	??_isqrt+2,w
  6863  0FC9  00AE               	movwf	isqrt@temp+2
  6864  0FCA  0821               	movf	??_isqrt+1,w
  6865  0FCB  00AD               	movwf	isqrt@temp+1
  6866  0FCC  0820               	movf	??_isqrt,w
  6867  0FCD  00AC               	movwf	isqrt@temp
  6868  0FCE  082F               	movf	isqrt@temp+3,w
  6869  0FCF  0275               	subwf	isqrt@val+3,w
  6870  0FD0  1D03               	skipz
  6871  0FD1  2FDC               	goto	u3065
  6872  0FD2  082E               	movf	isqrt@temp+2,w
  6873  0FD3  0274               	subwf	isqrt@val+2,w
  6874  0FD4  1D03               	skipz
  6875  0FD5  2FDC               	goto	u3065
  6876  0FD6  082D               	movf	isqrt@temp+1,w
  6877  0FD7  0273               	subwf	isqrt@val+1,w
  6878  0FD8  1D03               	skipz
  6879  0FD9  2FDC               	goto	u3065
  6880  0FDA  082C               	movf	isqrt@temp,w
  6881  0FDB  0272               	subwf	isqrt@val,w
  6882  0FDC                     u3065:	
  6883  0FDC  1C03               	skipc
  6884  0FDD  2FEE               	goto	l3228
  6885                           
  6886                           ;blueGyro.c: 329: g += b;
  6887  0FDE  0838               	movf	isqrt@b,w
  6888  0FDF  07B4               	addwf	isqrt@g,f
  6889  0FE0  0839               	movf	isqrt@b+1,w
  6890  0FE1  3DB5               	addwfc	isqrt@g+1,f
  6891  0FE2  083A               	movf	isqrt@b+2,w
  6892  0FE3  3DB6               	addwfc	isqrt@g+2,f
  6893  0FE4  083B               	movf	isqrt@b+3,w
  6894  0FE5  3DB7               	addwfc	isqrt@g+3,f
  6895                           
  6896                           ;blueGyro.c: 330: val -= temp;
  6897  0FE6  082C               	movf	isqrt@temp,w
  6898  0FE7  02F2               	subwf	isqrt@val,f
  6899  0FE8  082D               	movf	isqrt@temp+1,w
  6900  0FE9  3BF3               	subwfb	isqrt@val+1,f
  6901  0FEA  082E               	movf	isqrt@temp+2,w
  6902  0FEB  3BF4               	subwfb	isqrt@val+2,f
  6903  0FEC  082F               	movf	isqrt@temp+3,w
  6904  0FED  3BF5               	subwfb	isqrt@val+3,f
  6905  0FEE                     l3228:	
  6906                           
  6907                           ;blueGyro.c: 331: }
  6908                           ;blueGyro.c: 332: } while (b >>= 1);
  6909  0FEE  3001               	movlw	1
  6910  0FEF                     u3075:	
  6911  0FEF  36BB               	lsrf	isqrt@b+3,f
  6912  0FF0  0CBA               	rrf	isqrt@b+2,f
  6913  0FF1  0CB9               	rrf	isqrt@b+1,f
  6914  0FF2  0CB8               	rrf	isqrt@b,f
  6915  0FF3  0B89               	decfsz	9,f
  6916  0FF4  2FEF               	goto	u3075
  6917  0FF5  083B               	movf	isqrt@b+3,w
  6918  0FF6  043A               	iorwf	isqrt@b+2,w
  6919  0FF7  0439               	iorwf	isqrt@b+1,w
  6920  0FF8  0438               	iorwf	isqrt@b,w
  6921  0FF9  1D03               	skipz
  6922  0FFA  2F91               	goto	l3224
  6923                           
  6924                           ;blueGyro.c: 333: return g;
  6925  0FFB  0835               	movf	isqrt@g+1,w
  6926  0FFC  00F3               	movwf	?_isqrt+1
  6927  0FFD  0834               	movf	isqrt@g,w
  6928  0FFE  00F2               	movwf	?_isqrt
  6929  0FFF  0008               	return
  6930  1000                     __end_of_isqrt:	
  6931                           
  6932                           	psect	text41
  6933  050D                     __ptext41:	
  6934 ;; *************** function _CalculateSumOfSquares *****************
  6935 ;; Defined at:
  6936 ;;		line 423 in file "blueGyro.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  GzSquare        4   26[BANK0 ] unsigned long 
  6941 ;;  GySquare        4   22[BANK0 ] unsigned long 
  6942 ;;  GxSquare        4   18[BANK0 ] unsigned long 
  6943 ;;  temp            4    0        long 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0, pclath, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6953 ;;      Params:         0       0       0       0
  6954 ;;      Locals:         0      18       0       0
  6955 ;;      Temps:          0       8       0       0
  6956 ;;      Totals:         0      26       0       0
  6957 ;;Total ram usage:       26 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    2
  6960 ;; This function calls:
  6961 ;;		___lmul
  6962 ;; This function is called by:
  6963 ;;		_DisplayInfo
  6964 ;;		_main
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _CalculateSumOfSquares
  6970  050D                     _CalculateSumOfSquares:	
  6971                           
  6972                           ;blueGyro.c: 426: unsigned long GxSquare, GySquare, GzSquare;
  6973                           ;blueGyro.c: 427: long temp;
  6974                           ;blueGyro.c: 435: GxSquare = (unsigned long) (CurrentData.Gx<0 ? (-CurrentData.Gx) : Cur
      +                          rentData.Gx);
  6975                           
  6976                           ;incstack = 0
  6977                           ; Regs used in _CalculateSumOfSquares: [wreg+status,2+status,0+pclath+cstack]
  6978  050D  0021               	movlb	1	; select bank1
  6979  050E  1BC1               	btfsc	(_CurrentData+1)^(0+128),7
  6980  050F  2D18               	goto	l3254
  6981  0510  0841               	movf	(_CurrentData+1)^(0+128),w
  6982  0511  0020               	movlb	0	; select bank0
  6983  0512  00AD               	movwf	_CalculateSumOfSquares$290+1
  6984  0513  0021               	movlb	1	; select bank1
  6985  0514  0840               	movf	_CurrentData^(0+128),w
  6986  0515  0020               	movlb	0	; select bank0
  6987  0516  00AC               	movwf	_CalculateSumOfSquares$290
  6988  0517  2D27               	goto	l3256
  6989  0518                     l3254:	
  6990  0518  0021               	movlb	1	; select bank1
  6991  0519  0940               	comf	_CurrentData^(0+128),w
  6992  051A  0020               	movlb	0	; select bank0
  6993  051B  00A4               	movwf	??_CalculateSumOfSquares
  6994  051C  0021               	movlb	1	; select bank1
  6995  051D  0941               	comf	(_CurrentData+1)^(0+128),w
  6996  051E  0020               	movlb	0	; select bank0
  6997  051F  00A5               	movwf	??_CalculateSumOfSquares+1
  6998  0520  0AA4               	incf	??_CalculateSumOfSquares,f
  6999  0521  1903               	skipnz
  7000  0522  0AA5               	incf	??_CalculateSumOfSquares+1,f
  7001  0523  0824               	movf	??_CalculateSumOfSquares,w
  7002  0524  00AC               	movwf	_CalculateSumOfSquares$290
  7003  0525  0825               	movf	??_CalculateSumOfSquares+1,w
  7004  0526  00AD               	movwf	_CalculateSumOfSquares$290+1
  7005  0527                     l3256:	
  7006  0527  082C               	movf	_CalculateSumOfSquares$290,w
  7007  0528  00B2               	movwf	CalculateSumOfSquares@GxSquare
  7008  0529  082D               	movf	_CalculateSumOfSquares$290+1,w
  7009  052A  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  7010  052B  0D89               	rlf	9,f
  7011  052C  3B89               	subwfb	9,f
  7012  052D  0989               	comf	9,f
  7013  052E  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  7014  052F  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  7015                           
  7016                           ;blueGyro.c: 436: GySquare = (unsigned long) (CurrentData.Gy<0 ? (-CurrentData.Gy) : Cur
      +                          rentData.Gy);
  7017  0530  0021               	movlb	1	; select bank1
  7018  0531  1BC3               	btfsc	((_CurrentData+1)^(0+128)+2),7
  7019  0532  2D3B               	goto	l3262
  7020  0533  0843               	movf	((_CurrentData+1)^(0+128)+2),w
  7021  0534  0020               	movlb	0	; select bank0
  7022  0535  00AF               	movwf	_CalculateSumOfSquares$291+1
  7023  0536  0021               	movlb	1	; select bank1
  7024  0537  0842               	movf	(_CurrentData^(0+128)+2),w
  7025  0538  0020               	movlb	0	; select bank0
  7026  0539  00AE               	movwf	_CalculateSumOfSquares$291
  7027  053A  2D4A               	goto	l3264
  7028  053B                     l3262:	
  7029  053B  0021               	movlb	1	; select bank1
  7030  053C  0942               	comf	(_CurrentData^(0+128)+2),w
  7031  053D  0020               	movlb	0	; select bank0
  7032  053E  00A4               	movwf	??_CalculateSumOfSquares
  7033  053F  0021               	movlb	1	; select bank1
  7034  0540  0943               	comf	((_CurrentData+1)^(0+128)+2),w
  7035  0541  0020               	movlb	0	; select bank0
  7036  0542  00A5               	movwf	??_CalculateSumOfSquares+1
  7037  0543  0AA4               	incf	??_CalculateSumOfSquares,f
  7038  0544  1903               	skipnz
  7039  0545  0AA5               	incf	??_CalculateSumOfSquares+1,f
  7040  0546  0824               	movf	??_CalculateSumOfSquares,w
  7041  0547  00AE               	movwf	_CalculateSumOfSquares$291
  7042  0548  0825               	movf	??_CalculateSumOfSquares+1,w
  7043  0549  00AF               	movwf	_CalculateSumOfSquares$291+1
  7044  054A                     l3264:	
  7045  054A  082E               	movf	_CalculateSumOfSquares$291,w
  7046  054B  00B6               	movwf	CalculateSumOfSquares@GySquare
  7047  054C  082F               	movf	_CalculateSumOfSquares$291+1,w
  7048  054D  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  7049  054E  0D89               	rlf	9,f
  7050  054F  3B89               	subwfb	9,f
  7051  0550  0989               	comf	9,f
  7052  0551  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  7053  0552  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  7054                           
  7055                           ;blueGyro.c: 437: GzSquare = (unsigned long) (CurrentData.Gz<0 ? (-CurrentData.Gz) : Cur
      +                          rentData.Gz);
  7056  0553  0021               	movlb	1	; select bank1
  7057  0554  1BC5               	btfsc	((_CurrentData+1)^(0+128)+4),7
  7058  0555  2D5E               	goto	l3270
  7059  0556  0845               	movf	((_CurrentData+1)^(0+128)+4),w
  7060  0557  0020               	movlb	0	; select bank0
  7061  0558  00B1               	movwf	_CalculateSumOfSquares$292+1
  7062  0559  0021               	movlb	1	; select bank1
  7063  055A  0844               	movf	(_CurrentData^(0+128)+4),w
  7064  055B  0020               	movlb	0	; select bank0
  7065  055C  00B0               	movwf	_CalculateSumOfSquares$292
  7066  055D  2D6D               	goto	l3272
  7067  055E                     l3270:	
  7068  055E  0021               	movlb	1	; select bank1
  7069  055F  0944               	comf	(_CurrentData^(0+128)+4),w
  7070  0560  0020               	movlb	0	; select bank0
  7071  0561  00A4               	movwf	??_CalculateSumOfSquares
  7072  0562  0021               	movlb	1	; select bank1
  7073  0563  0945               	comf	((_CurrentData+1)^(0+128)+4),w
  7074  0564  0020               	movlb	0	; select bank0
  7075  0565  00A5               	movwf	??_CalculateSumOfSquares+1
  7076  0566  0AA4               	incf	??_CalculateSumOfSquares,f
  7077  0567  1903               	skipnz
  7078  0568  0AA5               	incf	??_CalculateSumOfSquares+1,f
  7079  0569  0824               	movf	??_CalculateSumOfSquares,w
  7080  056A  00B0               	movwf	_CalculateSumOfSquares$292
  7081  056B  0825               	movf	??_CalculateSumOfSquares+1,w
  7082  056C  00B1               	movwf	_CalculateSumOfSquares$292+1
  7083  056D                     l3272:	
  7084  056D  0830               	movf	_CalculateSumOfSquares$292,w
  7085  056E  00BA               	movwf	CalculateSumOfSquares@GzSquare
  7086  056F  0831               	movf	_CalculateSumOfSquares$292+1,w
  7087  0570  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  7088  0571  0D89               	rlf	9,f
  7089  0572  3B89               	subwfb	9,f
  7090  0573  0989               	comf	9,f
  7091  0574  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  7092  0575  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  7093                           
  7094                           ;blueGyro.c: 441: GxSquare *= GxSquare;
  7095  0576  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  7096  0577  00F5               	movwf	___lmul@multiplier+3
  7097  0578  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  7098  0579  00F4               	movwf	___lmul@multiplier+2
  7099  057A  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  7100  057B  00F3               	movwf	___lmul@multiplier+1
  7101  057C  0832               	movf	CalculateSumOfSquares@GxSquare,w
  7102  057D  00F2               	movwf	___lmul@multiplier
  7103  057E  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  7104  057F  00F9               	movwf	___lmul@multiplicand+3
  7105  0580  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  7106  0581  00F8               	movwf	___lmul@multiplicand+2
  7107  0582  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  7108  0583  00F7               	movwf	___lmul@multiplicand+1
  7109  0584  0832               	movf	CalculateSumOfSquares@GxSquare,w
  7110  0585  00F6               	movwf	___lmul@multiplicand
  7111  0586  318A  2277  3185   	fcall	___lmul
  7112  0589  0875               	movf	?___lmul+3,w
  7113  058A  0020               	movlb	0	; select bank0
  7114  058B  00B5               	movwf	CalculateSumOfSquares@GxSquare+3
  7115  058C  0874               	movf	?___lmul+2,w
  7116  058D  00B4               	movwf	CalculateSumOfSquares@GxSquare+2
  7117  058E  0873               	movf	?___lmul+1,w
  7118  058F  00B3               	movwf	CalculateSumOfSquares@GxSquare+1
  7119  0590  0872               	movf	?___lmul,w
  7120  0591  00B2               	movwf	CalculateSumOfSquares@GxSquare
  7121                           
  7122                           ;blueGyro.c: 442: GySquare *= GySquare;
  7123  0592  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  7124  0593  00F5               	movwf	___lmul@multiplier+3
  7125  0594  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  7126  0595  00F4               	movwf	___lmul@multiplier+2
  7127  0596  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  7128  0597  00F3               	movwf	___lmul@multiplier+1
  7129  0598  0836               	movf	CalculateSumOfSquares@GySquare,w
  7130  0599  00F2               	movwf	___lmul@multiplier
  7131  059A  0839               	movf	CalculateSumOfSquares@GySquare+3,w
  7132  059B  00F9               	movwf	___lmul@multiplicand+3
  7133  059C  0838               	movf	CalculateSumOfSquares@GySquare+2,w
  7134  059D  00F8               	movwf	___lmul@multiplicand+2
  7135  059E  0837               	movf	CalculateSumOfSquares@GySquare+1,w
  7136  059F  00F7               	movwf	___lmul@multiplicand+1
  7137  05A0  0836               	movf	CalculateSumOfSquares@GySquare,w
  7138  05A1  00F6               	movwf	___lmul@multiplicand
  7139  05A2  318A  2277  3185   	fcall	___lmul
  7140  05A5  0875               	movf	?___lmul+3,w
  7141  05A6  0020               	movlb	0	; select bank0
  7142  05A7  00B9               	movwf	CalculateSumOfSquares@GySquare+3
  7143  05A8  0874               	movf	?___lmul+2,w
  7144  05A9  00B8               	movwf	CalculateSumOfSquares@GySquare+2
  7145  05AA  0873               	movf	?___lmul+1,w
  7146  05AB  00B7               	movwf	CalculateSumOfSquares@GySquare+1
  7147  05AC  0872               	movf	?___lmul,w
  7148  05AD  00B6               	movwf	CalculateSumOfSquares@GySquare
  7149                           
  7150                           ;blueGyro.c: 443: GzSquare *= GzSquare;
  7151  05AE  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  7152  05AF  00F5               	movwf	___lmul@multiplier+3
  7153  05B0  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  7154  05B1  00F4               	movwf	___lmul@multiplier+2
  7155  05B2  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  7156  05B3  00F3               	movwf	___lmul@multiplier+1
  7157  05B4  083A               	movf	CalculateSumOfSquares@GzSquare,w
  7158  05B5  00F2               	movwf	___lmul@multiplier
  7159  05B6  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  7160  05B7  00F9               	movwf	___lmul@multiplicand+3
  7161  05B8  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  7162  05B9  00F8               	movwf	___lmul@multiplicand+2
  7163  05BA  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  7164  05BB  00F7               	movwf	___lmul@multiplicand+1
  7165  05BC  083A               	movf	CalculateSumOfSquares@GzSquare,w
  7166  05BD  00F6               	movwf	___lmul@multiplicand
  7167  05BE  318A  2277  3185   	fcall	___lmul
  7168  05C1  0875               	movf	?___lmul+3,w
  7169  05C2  0020               	movlb	0	; select bank0
  7170  05C3  00BD               	movwf	CalculateSumOfSquares@GzSquare+3
  7171  05C4  0874               	movf	?___lmul+2,w
  7172  05C5  00BC               	movwf	CalculateSumOfSquares@GzSquare+2
  7173  05C6  0873               	movf	?___lmul+1,w
  7174  05C7  00BB               	movwf	CalculateSumOfSquares@GzSquare+1
  7175  05C8  0872               	movf	?___lmul,w
  7176  05C9  00BA               	movwf	CalculateSumOfSquares@GzSquare
  7177                           
  7178                           ;blueGyro.c: 444: CurrentData.SumSquare = GxSquare + GySquare + GzSquare;
  7179  05CA  083A               	movf	CalculateSumOfSquares@GzSquare,w
  7180  05CB  00A4               	movwf	??_CalculateSumOfSquares
  7181  05CC  083B               	movf	CalculateSumOfSquares@GzSquare+1,w
  7182  05CD  00A5               	movwf	??_CalculateSumOfSquares+1
  7183  05CE  083C               	movf	CalculateSumOfSquares@GzSquare+2,w
  7184  05CF  00A6               	movwf	??_CalculateSumOfSquares+2
  7185  05D0  083D               	movf	CalculateSumOfSquares@GzSquare+3,w
  7186  05D1  00A7               	movwf	??_CalculateSumOfSquares+3
  7187  05D2  0832               	movf	CalculateSumOfSquares@GxSquare,w
  7188  05D3  0736               	addwf	CalculateSumOfSquares@GySquare,w
  7189  05D4  00A8               	movwf	??_CalculateSumOfSquares+4
  7190  05D5  0833               	movf	CalculateSumOfSquares@GxSquare+1,w
  7191  05D6  3D37               	addwfc	CalculateSumOfSquares@GySquare+1,w
  7192  05D7  00A9               	movwf	??_CalculateSumOfSquares+5
  7193  05D8  0834               	movf	CalculateSumOfSquares@GxSquare+2,w
  7194  05D9  3D38               	addwfc	CalculateSumOfSquares@GySquare+2,w
  7195  05DA  00AA               	movwf	??_CalculateSumOfSquares+6
  7196  05DB  0835               	movf	CalculateSumOfSquares@GxSquare+3,w
  7197  05DC  3D39               	addwfc	CalculateSumOfSquares@GySquare+3,w
  7198  05DD  00AB               	movwf	??_CalculateSumOfSquares+7
  7199  05DE  0828               	movf	??_CalculateSumOfSquares+4,w
  7200  05DF  07A4               	addwf	??_CalculateSumOfSquares,f
  7201  05E0  0829               	movf	??_CalculateSumOfSquares+5,w
  7202  05E1  3DA5               	addwfc	??_CalculateSumOfSquares+1,f
  7203  05E2  082A               	movf	??_CalculateSumOfSquares+6,w
  7204  05E3  3DA6               	addwfc	??_CalculateSumOfSquares+2,f
  7205  05E4  082B               	movf	??_CalculateSumOfSquares+7,w
  7206  05E5  3DA7               	addwfc	??_CalculateSumOfSquares+3,f
  7207  05E6  0827               	movf	??_CalculateSumOfSquares+3,w
  7208  05E7  0021               	movlb	1	; select bank1
  7209  05E8  00D3               	movwf	((_CurrentData+3)^(0+128)+16)
  7210  05E9  0020               	movlb	0	; select bank0
  7211  05EA  0826               	movf	??_CalculateSumOfSquares+2,w
  7212  05EB  0021               	movlb	1	; select bank1
  7213  05EC  00D2               	movwf	((_CurrentData+2)^(0+128)+16)
  7214  05ED  0020               	movlb	0	; select bank0
  7215  05EE  0825               	movf	??_CalculateSumOfSquares+1,w
  7216  05EF  0021               	movlb	1	; select bank1
  7217  05F0  00D1               	movwf	((_CurrentData+1)^(0+128)+16)
  7218  05F1  0020               	movlb	0	; select bank0
  7219  05F2  0824               	movf	??_CalculateSumOfSquares,w
  7220  05F3  0021               	movlb	1	; select bank1
  7221  05F4  00D0               	movwf	(_CurrentData^(0+128)+16)
  7222  05F5  0008               	return
  7223  05F6                     __end_of_CalculateSumOfSquares:	
  7224                           
  7225                           	psect	text42
  7226  0A77                     __ptext42:	
  7227 ;; *************** function ___lmul *****************
  7228 ;; Defined at:
  7229 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul32.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  multiplier      4    2[COMMON] unsigned long 
  7232 ;;  multiplicand    4    6[COMMON] unsigned long 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  product         4    0[BANK0 ] unsigned long 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  4    2[COMMON] unsigned long 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7244 ;;      Params:         8       0       0       0
  7245 ;;      Locals:         0       4       0       0
  7246 ;;      Temps:          0       0       0       0
  7247 ;;      Totals:         8       4       0       0
  7248 ;;Total ram usage:       12 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_printGForce
  7255 ;;		_printGyro
  7256 ;;		_CalculateSumOfSquares
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           
  7261                           ;psect for function ___lmul
  7262  0A77                     ___lmul:	
  7263                           
  7264                           ;incstack = 0
  7265                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7266  0A77  3000               	movlw	0
  7267  0A78  0020               	movlb	0	; select bank0
  7268  0A79  00A3               	movwf	___lmul@product+3
  7269  0A7A  3000               	movlw	0
  7270  0A7B  00A2               	movwf	___lmul@product+2
  7271  0A7C  3000               	movlw	0
  7272  0A7D  00A1               	movwf	___lmul@product+1
  7273  0A7E  3000               	movlw	0
  7274  0A7F  00A0               	movwf	___lmul@product
  7275  0A80                     l3134:	
  7276  0A80  1C72               	btfss	___lmul@multiplier,0
  7277  0A81  2A8B               	goto	l3138
  7278  0A82  0876               	movf	___lmul@multiplicand,w
  7279  0A83  0020               	movlb	0	; select bank0
  7280  0A84  07A0               	addwf	___lmul@product,f
  7281  0A85  0877               	movf	___lmul@multiplicand+1,w
  7282  0A86  3DA1               	addwfc	___lmul@product+1,f
  7283  0A87  0878               	movf	___lmul@multiplicand+2,w
  7284  0A88  3DA2               	addwfc	___lmul@product+2,f
  7285  0A89  0879               	movf	___lmul@multiplicand+3,w
  7286  0A8A  3DA3               	addwfc	___lmul@product+3,f
  7287  0A8B                     l3138:	
  7288  0A8B  3001               	movlw	1
  7289  0A8C                     u2915:	
  7290  0A8C  35F6               	lslf	___lmul@multiplicand,f
  7291  0A8D  0DF7               	rlf	___lmul@multiplicand+1,f
  7292  0A8E  0DF8               	rlf	___lmul@multiplicand+2,f
  7293  0A8F  0DF9               	rlf	___lmul@multiplicand+3,f
  7294  0A90  0B89               	decfsz	9,f
  7295  0A91  2A8C               	goto	u2915
  7296  0A92  3001               	movlw	1
  7297  0A93                     u2925:	
  7298  0A93  36F5               	lsrf	___lmul@multiplier+3,f
  7299  0A94  0CF4               	rrf	___lmul@multiplier+2,f
  7300  0A95  0CF3               	rrf	___lmul@multiplier+1,f
  7301  0A96  0CF2               	rrf	___lmul@multiplier,f
  7302  0A97  0B89               	decfsz	9,f
  7303  0A98  2A93               	goto	u2925
  7304  0A99  0875               	movf	___lmul@multiplier+3,w
  7305  0A9A  0474               	iorwf	___lmul@multiplier+2,w
  7306  0A9B  0473               	iorwf	___lmul@multiplier+1,w
  7307  0A9C  0472               	iorwf	___lmul@multiplier,w
  7308  0A9D  1D03               	skipz
  7309  0A9E  2A80               	goto	l3134
  7310  0A9F  0020               	movlb	0	; select bank0
  7311  0AA0  0823               	movf	___lmul@product+3,w
  7312  0AA1  00F5               	movwf	?___lmul+3
  7313  0AA2  0822               	movf	___lmul@product+2,w
  7314  0AA3  00F4               	movwf	?___lmul+2
  7315  0AA4  0821               	movf	___lmul@product+1,w
  7316  0AA5  00F3               	movwf	?___lmul+1
  7317  0AA6  0820               	movf	___lmul@product,w
  7318  0AA7  00F2               	movwf	?___lmul
  7319  0AA8  0008               	return
  7320  0AA9                     __end_of___lmul:	
  7321                           
  7322                           	psect	text43
  7323  0694                     __ptext43:	
  7324 ;; *************** function _DisplayData *****************
  7325 ;; Defined at:
  7326 ;;		line 529 in file "blueGyro.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;		None               void
  7333 ;; Registers used:
  7334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7340 ;;      Params:         0       0       0       0
  7341 ;;      Locals:         0       0       0       0
  7342 ;;      Temps:          0       0       0       0
  7343 ;;      Totals:         0       0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    4
  7347 ;; This function calls:
  7348 ;;		_GetGyroWithOffset
  7349 ;;		_cputs
  7350 ;;		_putHex
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _DisplayData
  7358  0694                     _DisplayData:	
  7359                           
  7360                           ;blueGyro.c: 540: putHex(CurrentData.Timer);
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _DisplayData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7364  0694  0021               	movlb	1	; select bank1
  7365  0695  084F               	movf	((_CurrentData+1)^(0+128)+14),w
  7366  0696  0020               	movlb	0	; select bank0
  7367  0697  00A1               	movwf	putHex@value+1
  7368  0698  0021               	movlb	1	; select bank1
  7369  0699  084E               	movf	(_CurrentData^(0+128)+14),w
  7370  069A  0020               	movlb	0	; select bank0
  7371  069B  00A0               	movwf	putHex@value
  7372  069C  3189  21F8  3186   	fcall	_putHex
  7373                           
  7374                           ;blueGyro.c: 541: putHex(CurrentData.Gx);
  7375  069F  0021               	movlb	1	; select bank1
  7376  06A0  0841               	movf	(_CurrentData+1)^(0+128),w
  7377  06A1  0020               	movlb	0	; select bank0
  7378  06A2  00A1               	movwf	putHex@value+1
  7379  06A3  0021               	movlb	1	; select bank1
  7380  06A4  0840               	movf	_CurrentData^(0+128),w
  7381  06A5  0020               	movlb	0	; select bank0
  7382  06A6  00A0               	movwf	putHex@value
  7383  06A7  3189  21F8  3186   	fcall	_putHex
  7384                           
  7385                           ;blueGyro.c: 542: putHex(CurrentData.Gy);
  7386  06AA  0021               	movlb	1	; select bank1
  7387  06AB  0843               	movf	((_CurrentData+1)^(0+128)+2),w
  7388  06AC  0020               	movlb	0	; select bank0
  7389  06AD  00A1               	movwf	putHex@value+1
  7390  06AE  0021               	movlb	1	; select bank1
  7391  06AF  0842               	movf	(_CurrentData^(0+128)+2),w
  7392  06B0  0020               	movlb	0	; select bank0
  7393  06B1  00A0               	movwf	putHex@value
  7394  06B2  3189  21F8  3186   	fcall	_putHex
  7395                           
  7396                           ;blueGyro.c: 543: putHex(CurrentData.Gz);
  7397  06B5  0021               	movlb	1	; select bank1
  7398  06B6  0845               	movf	((_CurrentData+1)^(0+128)+4),w
  7399  06B7  0020               	movlb	0	; select bank0
  7400  06B8  00A1               	movwf	putHex@value+1
  7401  06B9  0021               	movlb	1	; select bank1
  7402  06BA  0844               	movf	(_CurrentData^(0+128)+4),w
  7403  06BB  0020               	movlb	0	; select bank0
  7404  06BC  00A0               	movwf	putHex@value
  7405  06BD  3189  21F8  3186   	fcall	_putHex
  7406                           
  7407                           ;blueGyro.c: 547: putHex(GetGyroWithOffset(CurrentData.Gyrox,Setting.GyroX));
  7408  06C0  0021               	movlb	1	; select bank1
  7409  06C1  0849               	movf	((_CurrentData+1)^(0+128)+8),w
  7410  06C2  00F3               	movwf	GetGyroWithOffset@value+1
  7411  06C3  0848               	movf	(_CurrentData^(0+128)+8),w
  7412  06C4  00F2               	movwf	GetGyroWithOffset@value
  7413  06C5  0869               	movf	(_Setting+1)^(0+128),w
  7414  06C6  00F5               	movwf	GetGyroWithOffset@Goffset+1
  7415  06C7  0868               	movf	_Setting^(0+128),w
  7416  06C8  00F4               	movwf	GetGyroWithOffset@Goffset
  7417  06C9  318C  2427  3186   	fcall	_GetGyroWithOffset
  7418  06CC  0873               	movf	?_GetGyroWithOffset+1,w
  7419  06CD  0020               	movlb	0	; select bank0
  7420  06CE  00A1               	movwf	putHex@value+1
  7421  06CF  0872               	movf	?_GetGyroWithOffset,w
  7422  06D0  00A0               	movwf	putHex@value
  7423  06D1  3189  21F8  3186   	fcall	_putHex
  7424                           
  7425                           ;blueGyro.c: 548: putHex(GetGyroWithOffset(CurrentData.Gyroy,Setting.GyroY));
  7426  06D4  0021               	movlb	1	; select bank1
  7427  06D5  084B               	movf	((_CurrentData+1)^(0+128)+10),w
  7428  06D6  00F3               	movwf	GetGyroWithOffset@value+1
  7429  06D7  084A               	movf	(_CurrentData^(0+128)+10),w
  7430  06D8  00F2               	movwf	GetGyroWithOffset@value
  7431  06D9  086B               	movf	((_Setting+1)^(0+128)+2),w
  7432  06DA  00F5               	movwf	GetGyroWithOffset@Goffset+1
  7433  06DB  086A               	movf	(_Setting^(0+128)+2),w
  7434  06DC  00F4               	movwf	GetGyroWithOffset@Goffset
  7435  06DD  318C  2427  3186   	fcall	_GetGyroWithOffset
  7436  06E0  0873               	movf	?_GetGyroWithOffset+1,w
  7437  06E1  0020               	movlb	0	; select bank0
  7438  06E2  00A1               	movwf	putHex@value+1
  7439  06E3  0872               	movf	?_GetGyroWithOffset,w
  7440  06E4  00A0               	movwf	putHex@value
  7441  06E5  3189  21F8  3186   	fcall	_putHex
  7442                           
  7443                           ;blueGyro.c: 549: putHex(GetGyroWithOffset(CurrentData.Gyroz,Setting.GyroZ));
  7444  06E8  0021               	movlb	1	; select bank1
  7445  06E9  084D               	movf	((_CurrentData+1)^(0+128)+12),w
  7446  06EA  00F3               	movwf	GetGyroWithOffset@value+1
  7447  06EB  084C               	movf	(_CurrentData^(0+128)+12),w
  7448  06EC  00F2               	movwf	GetGyroWithOffset@value
  7449  06ED  086D               	movf	((_Setting+1)^(0+128)+4),w
  7450  06EE  00F5               	movwf	GetGyroWithOffset@Goffset+1
  7451  06EF  086C               	movf	(_Setting^(0+128)+4),w
  7452  06F0  00F4               	movwf	GetGyroWithOffset@Goffset
  7453  06F1  318C  2427  3186   	fcall	_GetGyroWithOffset
  7454  06F4  0873               	movf	?_GetGyroWithOffset+1,w
  7455  06F5  0020               	movlb	0	; select bank0
  7456  06F6  00A1               	movwf	putHex@value+1
  7457  06F7  0872               	movf	?_GetGyroWithOffset,w
  7458  06F8  00A0               	movwf	putHex@value
  7459  06F9  3189  21F8  3186   	fcall	_putHex
  7460                           
  7461                           ;blueGyro.c: 552: putHex(CurrentData.MagX);
  7462  06FC  0021               	movlb	1	; select bank1
  7463  06FD  0855               	movf	((_CurrentData+1)^(0+128)+20),w
  7464  06FE  0020               	movlb	0	; select bank0
  7465  06FF  00A1               	movwf	putHex@value+1
  7466  0700  0021               	movlb	1	; select bank1
  7467  0701  0854               	movf	(_CurrentData^(0+128)+20),w
  7468  0702  0020               	movlb	0	; select bank0
  7469  0703  00A0               	movwf	putHex@value
  7470  0704  3189  21F8  3186   	fcall	_putHex
  7471                           
  7472                           ;blueGyro.c: 553: putHex(CurrentData.MagY);
  7473  0707  0021               	movlb	1	; select bank1
  7474  0708  0857               	movf	((_CurrentData+1)^(0+128)+22),w
  7475  0709  0020               	movlb	0	; select bank0
  7476  070A  00A1               	movwf	putHex@value+1
  7477  070B  0021               	movlb	1	; select bank1
  7478  070C  0856               	movf	(_CurrentData^(0+128)+22),w
  7479  070D  0020               	movlb	0	; select bank0
  7480  070E  00A0               	movwf	putHex@value
  7481  070F  3189  21F8  3186   	fcall	_putHex
  7482                           
  7483                           ;blueGyro.c: 554: putHex(CurrentData.MagZ);
  7484  0712  0021               	movlb	1	; select bank1
  7485  0713  0859               	movf	((_CurrentData+1)^(0+128)+24),w
  7486  0714  0020               	movlb	0	; select bank0
  7487  0715  00A1               	movwf	putHex@value+1
  7488  0716  0021               	movlb	1	; select bank1
  7489  0717  0858               	movf	(_CurrentData^(0+128)+24),w
  7490  0718  0020               	movlb	0	; select bank0
  7491  0719  00A0               	movwf	putHex@value
  7492  071A  3189  21F8  3186   	fcall	_putHex
  7493                           
  7494                           ;blueGyro.c: 556: cputs("\r\n");
  7495  071D  30BA               	movlw	low ((STR_17+12)| (0+32768))
  7496  071E  00F5               	movwf	cputs@s
  7497  071F  3084               	movlw	high ((STR_17+12)| (0+32768))
  7498  0720  00F6               	movwf	cputs@s+1
  7499  0721  3188  20A5         	fcall	_cputs
  7500  0723  0008               	return
  7501  0724                     __end_of_DisplayData:	
  7502                           
  7503                           	psect	text44
  7504  09F8                     __ptext44:	
  7505 ;; *************** function _putHex *****************
  7506 ;; Defined at:
  7507 ;;		line 520 in file "blueGyro.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  value           2    0[BANK0 ] unsigned short 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;		None               void
  7514 ;; Registers used:
  7515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7521 ;;      Params:         0       2       0       0
  7522 ;;      Locals:         0       0       0       0
  7523 ;;      Temps:          0       2       0       0
  7524 ;;      Totals:         0       4       0       0
  7525 ;;Total ram usage:        4 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    3
  7528 ;; This function calls:
  7529 ;;		_putHexNibble
  7530 ;; This function is called by:
  7531 ;;		_DisplayData
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           
  7536                           ;psect for function _putHex
  7537  09F8                     _putHex:	
  7538                           
  7539                           ;blueGyro.c: 523: putHexNibble(value >> 12);
  7540                           
  7541                           ;incstack = 0
  7542                           ; Regs used in _putHex: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7543  09F8  0020               	movlb	0	; select bank0
  7544  09F9  0821               	movf	putHex@value+1,w
  7545  09FA  00A3               	movwf	??_putHex+1
  7546  09FB  0820               	movf	putHex@value,w
  7547  09FC  00A2               	movwf	??_putHex
  7548  09FD  0E23               	swapf	??_putHex+1,w
  7549  09FE  390F               	andlw	15
  7550  09FF  00A2               	movwf	??_putHex
  7551  0A00  01A3               	clrf	??_putHex+1
  7552  0A01  0822               	movf	??_putHex,w
  7553  0A02  3188  2092  3189   	fcall	_putHexNibble
  7554                           
  7555                           ;blueGyro.c: 524: putHexNibble(value >> 8);
  7556  0A05  0020               	movlb	0	; select bank0
  7557  0A06  0821               	movf	putHex@value+1,w
  7558  0A07  3188  2092  3189   	fcall	_putHexNibble
  7559                           
  7560                           ;blueGyro.c: 525: putHexNibble(value >> 4);
  7561  0A0A  0020               	movlb	0	; select bank0
  7562  0A0B  0821               	movf	putHex@value+1,w
  7563  0A0C  00A3               	movwf	??_putHex+1
  7564  0A0D  0820               	movf	putHex@value,w
  7565  0A0E  00A2               	movwf	??_putHex
  7566  0A0F  3004               	movlw	4
  7567  0A10                     u3125:	
  7568  0A10  36A3               	lsrf	??_putHex+1,f
  7569  0A11  0CA2               	rrf	??_putHex,f
  7570  0A12  0B89               	decfsz	9,f
  7571  0A13  2A10               	goto	u3125
  7572  0A14  0822               	movf	??_putHex,w
  7573  0A15  3188  2092  3189   	fcall	_putHexNibble
  7574                           
  7575                           ;blueGyro.c: 526: putHexNibble(value);
  7576  0A18  0020               	movlb	0	; select bank0
  7577  0A19  0820               	movf	putHex@value,w
  7578  0A1A  3188  2092         	fcall	_putHexNibble
  7579  0A1C  0008               	return
  7580  0A1D                     __end_of_putHex:	
  7581                           
  7582                           	psect	text45
  7583  0892                     __ptext45:	
  7584 ;; *************** function _putHexNibble *****************
  7585 ;; Defined at:
  7586 ;;		line 507 in file "blueGyro.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  value           1    wreg     unsigned char 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  value           1    6[COMMON] unsigned char 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;		None               void
  7593 ;; Registers used:
  7594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7600 ;;      Params:         0       0       0       0
  7601 ;;      Locals:         1       0       0       0
  7602 ;;      Temps:          1       0       0       0
  7603 ;;      Totals:         2       0       0       0
  7604 ;;Total ram usage:        2 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    2
  7607 ;; This function calls:
  7608 ;;		_putch
  7609 ;; This function is called by:
  7610 ;;		_putHex
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           
  7615                           ;psect for function _putHexNibble
  7616  0892                     _putHexNibble:	
  7617                           
  7618                           ;incstack = 0
  7619                           ; Regs used in _putHexNibble: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7620                           ;putHexNibble@value stored from wreg
  7621  0892  00F6               	movwf	putHexNibble@value
  7622                           
  7623                           ;blueGyro.c: 509: value &= 0xf;
  7624  0893  300F               	movlw	15
  7625  0894  00F5               	movwf	??_putHexNibble
  7626  0895  0875               	movf	??_putHexNibble,w
  7627  0896  05F6               	andwf	putHexNibble@value,f
  7628                           
  7629                           ;blueGyro.c: 510: if(value > 9)
  7630  0897  300A               	movlw	10
  7631  0898  0276               	subwf	putHexNibble@value,w
  7632  0899  1C03               	skipc
  7633  089A  289D               	goto	l3128
  7634                           
  7635                           ;blueGyro.c: 511: value += 'A' - 10;
  7636  089B  3037               	movlw	55
  7637  089C  289E               	goto	L5
  7638  089D                     l3128:	
  7639                           
  7640                           ;blueGyro.c: 512: else
  7641                           ;blueGyro.c: 513: value += '0';
  7642  089D  3030               	movlw	48
  7643  089E                     L5:	
  7644  089E  00F5               	movwf	??_putHexNibble
  7645  089F  0875               	movf	??_putHexNibble,w
  7646  08A0  07F6               	addwf	putHexNibble@value,f
  7647                           
  7648                           ;blueGyro.c: 514: putch(value);
  7649  08A1  0876               	movf	putHexNibble@value,w
  7650  08A2  3189  2194         	fcall	_putch
  7651  08A4  0008               	return
  7652  08A5                     __end_of_putHexNibble:	
  7653                           
  7654                           	psect	text46
  7655  08A5                     __ptext46:	
  7656 ;; *************** function _cputs *****************
  7657 ;; Defined at:
  7658 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/cputs.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  s               2    5[COMMON] PTR const unsigned char 
  7661 ;;		 -> STR_19(10), STR_18(9), STR_17(15), STR_16(4), 
  7662 ;;		 -> STR_15(4), STR_14(7), STR_13(17), STR_12(3), 
  7663 ;;		 -> STR_11(3), STR_10(8), STR_9(9), STR_8(4), 
  7664 ;;		 -> STR_7(6), STR_6(11), STR_5(4), STR_4(4), 
  7665 ;;		 -> printUShort@buffer(16), printDeciValue@buffer(16), printCentiValue@buffer(16), printValue@buffer(16), 
  7666 ;;		 -> STR_3(27), STR_2(40), STR_1(46), 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7678 ;;      Params:         2       0       0       0
  7679 ;;      Locals:         0       0       0       0
  7680 ;;      Temps:          1       0       0       0
  7681 ;;      Totals:         3       0       0       0
  7682 ;;Total ram usage:        3 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    2
  7685 ;; This function calls:
  7686 ;;		_putch
  7687 ;; This function is called by:
  7688 ;;		_MPU6050_Test_I2C
  7689 ;;		_Setup_MPU6050
  7690 ;;		_printValue
  7691 ;;		_printCentiValue
  7692 ;;		_printDeciValue
  7693 ;;		_printUShort
  7694 ;;		_DisplayInfo
  7695 ;;		_DisplayData
  7696 ;;		_printVersion
  7697 ;;		_printVoltage
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _cputs
  7704  08A5                     _cputs:	
  7705  08A5                     l2958:	
  7706                           ;incstack = 0
  7707                           ; Regs used in _cputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7708                           
  7709  08A5  0875               	movf	cputs@s,w
  7710  08A6  0084               	movwf	4
  7711  08A7  0876               	movf	cputs@s+1,w
  7712  08A8  0085               	movwf	5
  7713  08A9  0012               	moviw fsr0++
  7714  08AA  1903               	btfsc	3,2
  7715  08AB  0008               	return
  7716  08AC  0875               	movf	cputs@s,w
  7717  08AD  0084               	movwf	4
  7718  08AE  0876               	movf	cputs@s+1,w
  7719  08AF  0085               	movwf	5
  7720  08B0  0800               	movf	0,w	;code access
  7721  08B1  3189  2194  3188   	fcall	_putch
  7722  08B4  3001               	movlw	1
  7723  08B5  07F5               	addwf	cputs@s,f
  7724  08B6  3000               	movlw	0
  7725  08B7  3DF6               	addwfc	cputs@s+1,f
  7726  08B8  28A5               	goto	l2958
  7727  08B9                     __end_of_cputs:	
  7728                           
  7729                           	psect	text47
  7730  0994                     __ptext47:	
  7731 ;; *************** function _putch *****************
  7732 ;; Defined at:
  7733 ;;		line 300 in file "blueGyro.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  char_out        1    wreg     unsigned char 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  char_out        1    3[COMMON] unsigned char 
  7738 ;;  temp            1    4[COMMON] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;		None               void
  7741 ;; Registers used:
  7742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7748 ;;      Params:         0       0       0       0
  7749 ;;      Locals:         2       0       0       0
  7750 ;;      Temps:          1       0       0       0
  7751 ;;      Totals:         3       0       0       0
  7752 ;;Total ram usage:        3 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    1
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_printCentiValue
  7759 ;;		_printDeciValue
  7760 ;;		_putHexNibble
  7761 ;;		_cputs
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function _putch
  7767  0994                     _putch:	
  7768                           
  7769                           ;incstack = 0
  7770                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0]
  7771                           ;putch@char_out stored from wreg
  7772  0994  00F3               	movwf	putch@char_out
  7773                           
  7774                           ;blueGyro.c: 302: unsigned char temp;
  7775                           ;blueGyro.c: 305: temp = InFiFo + 1;
  7776  0995  0020               	movlb	0	; select bank0
  7777  0996  0867               	movf	_InFiFo,w	;volatile
  7778  0997  3E01               	addlw	1
  7779  0998  00F2               	movwf	??_putch
  7780  0999  0872               	movf	??_putch,w
  7781  099A  00F4               	movwf	putch@temp
  7782                           
  7783                           ;blueGyro.c: 306: if(temp >= 32)
  7784  099B  3020               	movlw	32
  7785  099C  0274               	subwf	putch@temp,w
  7786  099D  1803               	btfsc	3,0
  7787                           
  7788                           ;blueGyro.c: 307: temp = 0;
  7789  099E  01F4               	clrf	putch@temp
  7790  099F                     l2864:	
  7791                           ;blueGyro.c: 310: while(temp == OutFiFo);
  7792                           
  7793  099F  0874               	movf	putch@temp,w
  7794  09A0  0669               	xorwf	_OutFiFo,w	;volatile
  7795  09A1  1903               	skipnz
  7796  09A2  299F               	goto	l2864
  7797                           
  7798                           ;blueGyro.c: 313: SerialBuffer[InFiFo]=char_out;
  7799  09A3  0873               	movf	putch@char_out,w
  7800  09A4  00F2               	movwf	??_putch
  7801  09A5  0867               	movf	_InFiFo,w
  7802  09A6  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  7803  09A7  0086               	movwf	6
  7804  09A8  0187               	clrf	7
  7805  09A9  0872               	movf	??_putch,w
  7806  09AA  0081               	movwf	1
  7807                           
  7808                           ;blueGyro.c: 315: InFiFo= temp;
  7809  09AB  0874               	movf	putch@temp,w
  7810  09AC  00F2               	movwf	??_putch
  7811  09AD  0872               	movf	??_putch,w
  7812  09AE  00E7               	movwf	_InFiFo	;volatile
  7813                           
  7814                           ;blueGyro.c: 317: TXIE=1;
  7815  09AF  0021               	movlb	1	; select bank1
  7816  09B0  1611               	bsf	17,4	;volatile
  7817  09B1  0008               	return
  7818  09B2                     __end_of_putch:	
  7819                           
  7820                           	psect	text48
  7821  0C27                     __ptext48:	
  7822 ;; *************** function _GetGyroWithOffset *****************
  7823 ;; Defined at:
  7824 ;;		line 213 in file "blueGyro.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  value           2    2[COMMON] short 
  7827 ;;  Goffset         2    4[COMMON] short 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  _temp           2    8[COMMON] short 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  2    2[COMMON] short 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7839 ;;      Params:         4       0       0       0
  7840 ;;      Locals:         2       0       0       0
  7841 ;;      Temps:          2       0       0       0
  7842 ;;      Totals:         8       0       0       0
  7843 ;;Total ram usage:        8 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    1
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_DisplayInfo
  7850 ;;		_DisplayData
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function _GetGyroWithOffset
  7856  0C27                     _GetGyroWithOffset:	
  7857                           
  7858                           ;blueGyro.c: 215: short _temp;
  7859                           ;blueGyro.c: 217: if(value > 0)
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in _GetGyroWithOffset: [wreg+status,2+status,0]
  7863  0C27  0873               	movf	GetGyroWithOffset@value+1,w
  7864  0C28  3A80               	xorlw	128
  7865  0C29  00F6               	movwf	??_GetGyroWithOffset
  7866  0C2A  3080               	movlw	128
  7867  0C2B  0276               	subwf	??_GetGyroWithOffset,w
  7868  0C2C  1D03               	skipz
  7869  0C2D  2C30               	goto	u2995
  7870  0C2E  3001               	movlw	1
  7871  0C2F  0272               	subwf	GetGyroWithOffset@value,w
  7872  0C30                     u2995:	
  7873  0C30  1C03               	skipc
  7874  0C31  2C4B               	goto	l3208
  7875                           
  7876                           ;blueGyro.c: 218: {
  7877                           ;blueGyro.c: 219: if(Goffset <0)
  7878  0C32  1FF5               	btfss	GetGyroWithOffset@Goffset+1,7
  7879  0C33  2C6D               	goto	l3218
  7880                           
  7881                           ;blueGyro.c: 220: {
  7882                           ;blueGyro.c: 221: _temp = 32767 +Goffset;
  7883  0C34  0874               	movf	GetGyroWithOffset@Goffset,w
  7884  0C35  3EFF               	addlw	255
  7885  0C36  00F8               	movwf	GetGyroWithOffset@_temp
  7886  0C37  307F               	movlw	127
  7887  0C38  3D75               	addwfc	GetGyroWithOffset@Goffset+1,w
  7888  0C39  00F9               	movwf	GetGyroWithOffset@_temp+1
  7889                           
  7890                           ;blueGyro.c: 222: if(value >= _temp)
  7891  0C3A  0873               	movf	GetGyroWithOffset@value+1,w
  7892  0C3B  3A80               	xorlw	128
  7893  0C3C  00F6               	movwf	??_GetGyroWithOffset
  7894  0C3D  0879               	movf	GetGyroWithOffset@_temp+1,w
  7895  0C3E  3A80               	xorlw	128
  7896  0C3F  0276               	subwf	??_GetGyroWithOffset,w
  7897  0C40  1D03               	skipz
  7898  0C41  2C44               	goto	u3015
  7899  0C42  0878               	movf	GetGyroWithOffset@_temp,w
  7900  0C43  0272               	subwf	GetGyroWithOffset@value,w
  7901  0C44                     u3015:	
  7902  0C44  1C03               	skipc
  7903  0C45  2C6D               	goto	l3218
  7904                           
  7905                           ;blueGyro.c: 223: return 32767;
  7906  0C46  30FF               	movlw	255
  7907  0C47  00F2               	movwf	?_GetGyroWithOffset
  7908  0C48  307F               	movlw	127
  7909  0C49  00F3               	movwf	?_GetGyroWithOffset+1
  7910  0C4A  0008               	return
  7911  0C4B                     l3208:	
  7912                           ;blueGyro.c: 224: }
  7913                           ;blueGyro.c: 225: }
  7914                           
  7915                           
  7916                           ;blueGyro.c: 226: else
  7917                           ;blueGyro.c: 227: {
  7918                           ;blueGyro.c: 228: if(Goffset >0)
  7919  0C4B  0875               	movf	GetGyroWithOffset@Goffset+1,w
  7920  0C4C  3A80               	xorlw	128
  7921  0C4D  00F6               	movwf	??_GetGyroWithOffset
  7922  0C4E  3080               	movlw	128
  7923  0C4F  0276               	subwf	??_GetGyroWithOffset,w
  7924  0C50  1D03               	skipz
  7925  0C51  2C54               	goto	u3025
  7926  0C52  3001               	movlw	1
  7927  0C53  0274               	subwf	GetGyroWithOffset@Goffset,w
  7928  0C54                     u3025:	
  7929  0C54  1C03               	skipc
  7930  0C55  2C6D               	goto	l3218
  7931                           
  7932                           ;blueGyro.c: 229: {
  7933                           ;blueGyro.c: 230: _temp = -32768 + Goffset;
  7934  0C56  0874               	movf	GetGyroWithOffset@Goffset,w
  7935  0C57  3E00               	addlw	0
  7936  0C58  00F8               	movwf	GetGyroWithOffset@_temp
  7937  0C59  3080               	movlw	128
  7938  0C5A  3D75               	addwfc	GetGyroWithOffset@Goffset+1,w
  7939  0C5B  00F9               	movwf	GetGyroWithOffset@_temp+1
  7940                           
  7941                           ;blueGyro.c: 231: if(value <= _temp)
  7942  0C5C  0879               	movf	GetGyroWithOffset@_temp+1,w
  7943  0C5D  3A80               	xorlw	128
  7944  0C5E  00F6               	movwf	??_GetGyroWithOffset
  7945  0C5F  0873               	movf	GetGyroWithOffset@value+1,w
  7946  0C60  3A80               	xorlw	128
  7947  0C61  0276               	subwf	??_GetGyroWithOffset,w
  7948  0C62  1D03               	skipz
  7949  0C63  2C66               	goto	u3035
  7950  0C64  0872               	movf	GetGyroWithOffset@value,w
  7951  0C65  0278               	subwf	GetGyroWithOffset@_temp,w
  7952  0C66                     u3035:	
  7953  0C66  1C03               	skipc
  7954  0C67  2C6D               	goto	l3218
  7955                           
  7956                           ;blueGyro.c: 232: return -32768;
  7957  0C68  3000               	movlw	0
  7958  0C69  00F2               	movwf	?_GetGyroWithOffset
  7959  0C6A  3080               	movlw	128
  7960  0C6B  00F3               	movwf	?_GetGyroWithOffset+1
  7961  0C6C  0008               	return
  7962  0C6D                     l3218:	
  7963                           
  7964                           ;blueGyro.c: 233: }
  7965                           ;blueGyro.c: 234: }
  7966                           ;blueGyro.c: 235: return(value - Goffset);
  7967  0C6D  0974               	comf	GetGyroWithOffset@Goffset,w
  7968  0C6E  00F6               	movwf	??_GetGyroWithOffset
  7969  0C6F  0975               	comf	GetGyroWithOffset@Goffset+1,w
  7970  0C70  00F7               	movwf	??_GetGyroWithOffset+1
  7971  0C71  0AF6               	incf	??_GetGyroWithOffset,f
  7972  0C72  1903               	skipnz
  7973  0C73  0AF7               	incf	??_GetGyroWithOffset+1,f
  7974  0C74  0872               	movf	GetGyroWithOffset@value,w
  7975  0C75  0776               	addwf	??_GetGyroWithOffset,w
  7976  0C76  00F2               	movwf	?_GetGyroWithOffset
  7977  0C77  0873               	movf	GetGyroWithOffset@value+1,w
  7978  0C78  3D77               	addwfc	??_GetGyroWithOffset+1,w
  7979  0C79  00F3               	movwf	?_GetGyroWithOffset+1
  7980  0C7A  0008               	return
  7981  0C7B                     __end_of_GetGyroWithOffset:	
  7982                           
  7983                           	psect	intentry
  7984  0004                     __pintentry:	
  7985 ;; *************** function _isr *****************
  7986 ;; Defined at:
  7987 ;;		line 269 in file "blueGyro.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;		None               void
  7994 ;; Registers used:
  7995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8001 ;;      Params:         0       0       0       0
  8002 ;;      Locals:         0       0       0       0
  8003 ;;      Temps:          2       0       0       0
  8004 ;;      Totals:         2       0       0       0
  8005 ;;Total ram usage:        2 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		Interrupt level 1
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014  0004                     _isr:	
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  8018  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8019  0005  3180               	pagesel	$
  8020  0006  0020               	movlb	0	; select bank0
  8021  0007  087F               	movf	127,w
  8022  0008  00F1               	movwf	??_isr+1
  8023                           
  8024                           ;blueGyro.c: 271: if(TXIE)
  8025  0009  0021               	movlb	1	; select bank1
  8026  000A  1E11               	btfss	17,4	;volatile
  8027  000B  282B               	goto	i1l252
  8028                           
  8029                           ;blueGyro.c: 272: if(TXIF)
  8030  000C  0020               	movlb	0	; select bank0
  8031  000D  1E11               	btfss	17,4	;volatile
  8032  000E  282B               	goto	i1l252
  8033                           
  8034                           ;blueGyro.c: 273: {
  8035                           ;blueGyro.c: 275: if(InFiFo != OutFiFo)
  8036  000F  0867               	movf	_InFiFo,w	;volatile
  8037  0010  0669               	xorwf	_OutFiFo,w	;volatile
  8038  0011  1903               	skipnz
  8039  0012  2825               	goto	i1l2592
  8040                           
  8041                           ;blueGyro.c: 276: {
  8042                           ;blueGyro.c: 277: TXREG= SerialBuffer[OutFiFo];
  8043  0013  0869               	movf	_OutFiFo,w
  8044  0014  3EA0               	addlw	(low (_SerialBuffer| 0))& (0+255)
  8045  0015  0086               	movwf	6
  8046  0016  0187               	clrf	7
  8047  0017  0801               	movf	1,w
  8048  0018  0023               	movlb	3	; select bank3
  8049  0019  009A               	movwf	26	;volatile
  8050                           
  8051                           ;blueGyro.c: 278: OutFiFo++;
  8052  001A  3001               	movlw	1
  8053  001B  00F0               	movwf	??_isr
  8054  001C  0870               	movf	??_isr,w
  8055  001D  0020               	movlb	0	; select bank0
  8056  001E  07E9               	addwf	_OutFiFo,f	;volatile
  8057                           
  8058                           ;blueGyro.c: 279: if(OutFiFo >= 32)
  8059  001F  3020               	movlw	32
  8060  0020  0269               	subwf	_OutFiFo,w	;volatile
  8061  0021  1C03               	skipc
  8062  0022  282B               	goto	i1l252
  8063                           
  8064                           ;blueGyro.c: 280: OutFiFo=0;
  8065  0023  01E9               	clrf	_OutFiFo	;volatile
  8066                           
  8067                           ;blueGyro.c: 281: }
  8068  0024  282B               	goto	i1l252
  8069  0025                     i1l2592:	
  8070                           
  8071                           ;blueGyro.c: 282: else
  8072                           ;blueGyro.c: 283: if(OutFiFo == InFiFo)
  8073  0025  0869               	movf	_OutFiFo,w	;volatile
  8074  0026  0667               	xorwf	_InFiFo,w	;volatile
  8075  0027  1D03               	skipz
  8076  0028  282B               	goto	i1l252
  8077                           
  8078                           ;blueGyro.c: 284: {
  8079                           ;blueGyro.c: 287: TXIE=0;
  8080  0029  0021               	movlb	1	; select bank1
  8081  002A  1211               	bcf	17,4	;volatile
  8082  002B                     i1l252:	
  8083                           
  8084                           ;blueGyro.c: 288: }
  8085                           ;blueGyro.c: 289: }
  8086                           ;blueGyro.c: 292: if(TMR2IF){
  8087  002B  0020               	movlb	0	; select bank0
  8088  002C  1C91               	btfss	17,1	;volatile
  8089  002D  2833               	goto	i1l259
  8090                           
  8091                           ;blueGyro.c: 293: TMR2IF=0;
  8092  002E  1091               	bcf	17,1	;volatile
  8093                           
  8094                           ;blueGyro.c: 294: Timerms++;
  8095  002F  3001               	movlw	1
  8096  0030  07FA               	addwf	_Timerms,f	;volatile
  8097  0031  3000               	movlw	0
  8098  0032  3DFB               	addwfc	_Timerms+1,f	;volatile
  8099  0033                     i1l259:	
  8100  0033  0871               	movf	??_isr+1,w
  8101  0034  00FF               	movwf	127
  8102  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8103  0036  0009               	retfie
  8104  0037                     __end_of_isr:	
  8105  007E                     btemp	set	126	;btemp
  8106  007E                     int$flags	set	126
  8107  007E                     wtemp	set	126
  8108  007E                     wtemp0	set	126
  8109  0080                     wtemp1	set	128
  8110  0082                     wtemp2	set	130
  8111  0084                     wtemp3	set	132
  8112  0086                     wtemp4	set	134
  8113  0088                     wtemp5	set	136
  8114  007F                     wtemp6	set	127
  8115  007E                     ttemp	set	126
  8116  007E                     ttemp0	set	126
  8117  0081                     ttemp1	set	129
  8118  0084                     ttemp2	set	132
  8119  0087                     ttemp3	set	135
  8120  007F                     ttemp4	set	127
  8121  007E                     ltemp	set	126
  8122  007E                     ltemp0	set	126
  8123  0082                     ltemp1	set	130
  8124  0086                     ltemp2	set	134
  8125  0080                     ltemp3	set	128


Data Sizes:
    Strings     225
    Constant    81
    Data        1
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     69      75
    BANK1            80      0      78
    BANK2            80      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    cputs@s	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[15]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[7]), STR_13(CODE[17]), STR_12(CODE[3]), 
		 -> STR_11(CODE[3]), STR_10(CODE[8]), STR_9(CODE[9]), STR_8(CODE[4]), 
		 -> STR_7(CODE[6]), STR_6(CODE[11]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 
		 -> STR_3(CODE[27]), STR_2(CODE[40]), STR_1(CODE[46]), 

    DisplayInfo@cz	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), 

    DisplayInfo@cy	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> printUShort@buffer(BANK0[16]), printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 16
		 -> printDeciValue@buffer(BANK0[16]), printCentiValue@buffer(BANK0[16]), printValue@buffer(BANK0[16]), 

    SaveSetting@pointer	PTR unsigned char  size(1) Largest target is 6
		 -> Setting(BANK1[6]), 

    LoadSetting@pointer	PTR unsigned char  size(1) Largest target is 6
		 -> Setting(BANK1[6]), 

    LDByteReadI2C@Data	PTR unsigned char  size(1) Largest target is 14
		 -> Get_HMC5883L_Values@cval(BANK0[6]), GotInt_MPU6050@uc_temp(BANK0[1]), Get_Accel_Values@cval(BANK0[14]), MPU6050_Test_I2C@Data(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_Setup_MPU6050
    _main->___aldiv
    _printVoltage->___aldiv
    _printVersion->_cputs
    _Setup_MPU6050->_LDByteWriteI2C
    _Setup_MPU6050->_cputs
    _Setup_HMC5883L->_LDByteWriteI2C
    _SaveSetting->_eeprom_write
    _MPU6050_Test_I2C->_LDByteReadI2C
    _LoadSetting->_eeprom_read
    _GotInt_MPU6050->_LDByteReadI2C
    _Get_HMC5883L_Values->_LDByteReadI2C
    _LDByteWriteI2C->_i2c_Address
    _Get_Accel_Values->_LDByteReadI2C
    _LDByteReadI2C->_i2c_Address
    _DisplayInfo->_GetGyroWithOffset
    _printGyro->_GetGyroWithOffset
    _printGyro->___aldiv
    _printGyro->___lmul
    _printDeciValue->___aldiv
    _printGForce->___aldiv
    _printGForce->___lmul
    _printCentiValue->___aldiv
    _utoa->___lwdiv
    _ltoa->___aldiv
    _ultoa->___lldiv
    _ultoa->___llmod
    _CalculateSumOfSquares->___lmul
    _DisplayData->_GetGyroWithOffset
    _putHex->_GetGyroWithOffset
    _putHexNibble->_putch
    _cputs->_putch

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DisplayInfo
    _printVoltage->_printCentiValue
    _Setup_MPU6050->_LDByteWriteI2C
    _Setup_HMC5883L->_LDByteWriteI2C
    _MPU6050_Test_I2C->_LDByteReadI2C
    _GotInt_MPU6050->_LDByteReadI2C
    _Get_HMC5883L_Values->_LDByteWriteI2C
    _Get_Accel_Values->_LDByteReadI2C
    _DisplayInfo->_printGForce
    _DisplayInfo->_printGyro
    _printValue->_ltoa
    _printUShort->_utoa
    _printGyro->_printDeciValue
    _printDeciValue->_ltoa
    _printGForce->_printCentiValue
    _printCentiValue->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _CalculateSumOfSquares->___lmul
    _DisplayData->_putHex

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   78763
                                             64 BANK0      5     5      0
              _CalculateSumOfSquares
                        _DisplayData
                        _DisplayInfo
                         _FindDeltaG
                   _Get_Accel_Values
                _Get_HMC5883L_Values
                     _GotInt_MPU6050
                       _Init1msTimer
                        _LoadSetting
                   _MPU6050_Test_I2C
                        _SaveSetting
                     _Setup_HMC5883L
                      _Setup_MPU6050
                            ___aldiv
                              _cputs
                           _i2c_Init
                       _printVersion
                       _printVoltage
 ---------------------------------------------------------------------------------
 (1) _printVoltage                                         9     9      0   12833
                                             54 BANK0      9     9      0
                            ___aldiv
                              _cputs
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (1) _printVersion                                         0     0      0    2080
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup_MPU6050                                        5     5      0    4033
                                              8 COMMON     2     2      0
                                              3 BANK0      3     3      0
                     _LDByteWriteI2C
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _Setup_HMC5883L                                       1     1      0    1851
                                              8 COMMON     1     1      0
                     _LDByteWriteI2C
 ---------------------------------------------------------------------------------
 (1) _SaveSetting                                          3     3      0     263
                                              6 COMMON     3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         4     3      1     127
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Test_I2C                                     3     3      0    3649
                                              1 BANK0      3     3      0
                      _LDByteReadI2C
                              _cputs
 ---------------------------------------------------------------------------------
 (1) _LoadSetting                                          3     3      0     167
                                              6 COMMON     3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init1msTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GotInt_MPU6050                                       3     3      0    1566
                                              1 BANK0      3     3      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (1) _Get_HMC5883L_Values                                 12    12      0    3587
                                              3 BANK0     11    11      0
                      _LDByteReadI2C
                     _LDByteWriteI2C
 ---------------------------------------------------------------------------------
 (2) _LDByteWriteI2C                                       5     3      2    1851
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _Get_Accel_Values                                    19    19      0    2008
                                              1 BANK0     19    19      0
                      _LDByteReadI2C
 ---------------------------------------------------------------------------------
 (2) _LDByteReadI2C                                        5     2      3    1492
                                              6 COMMON     4     1      3
                                              0 BANK0      1     1      0
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      65
                                              2 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Address                                          4     3      1     424
                                              2 COMMON     4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FindDeltaG                                           4     4      0       0
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayInfo                                          6     6      0   37379
                                             58 BANK0      6     6      0
              _CalculateSumOfSquares
                  _GetGyroWithOffset
                              _cputs
                              _isqrt
                        _printGForce
                          _printGyro
                        _printUShort
                         _printValue
 ---------------------------------------------------------------------------------
 (2) _printValue                                          20    16      4    4565
                                             28 BANK0     20    16      4
                              _cputs
                               _ltoa
 ---------------------------------------------------------------------------------
 (2) _printUShort                                         18    16      2    4419
                                              9 BANK0     18    16      2
                              _cputs
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGyro                                            4     0      4   11638
                                             54 BANK0      4     0      4
                  _GetGyroWithOffset (ARG)
                            ___aldiv
                             ___lmul
                     _printDeciValue
 ---------------------------------------------------------------------------------
 (3) _printDeciValue                                      26    22      4    9073
                                             28 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _ltoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _printGForce                                          4     0      4   11799
                                             54 BANK0      4     0      4
                            ___aldiv
                             ___lmul
                    _printCentiValue
 ---------------------------------------------------------------------------------
 (2) _printCentiValue                                     26    22      4    9169
                                             28 BANK0     26    22      4
                            ___aldiv
                            ___lwmod
                              _cputs
                               _ltoa
                              _putch
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2163
                                              0 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     622
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     501
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    2173
                                             19 BANK0      9     3      6
                            ___aldiv (ARG)
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    1460
                                              6 BANK0     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     362
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     501
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1485
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _isqrt                                               32    28      4     331
                                              2 COMMON     4     0      4
                                              0 BANK0     28    28      0
 ---------------------------------------------------------------------------------
 (2) _CalculateSumOfSquares                               30    30      0    1194
                                              4 BANK0     26    26      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     786
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DisplayData                                          0     0      0    4182
                  _GetGyroWithOffset
                              _cputs
                             _putHex
 ---------------------------------------------------------------------------------
 (2) _putHex                                               4     2      2     975
                                              0 BANK0      4     2      2
                  _GetGyroWithOffset (ARG)
                       _putHexNibble
 ---------------------------------------------------------------------------------
 (3) _putHexNibble                                         2     2      0     201
                                              5 COMMON     2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _cputs                                                3     1      2    2080
                                              5 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                3     3      0     130
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _GetGyroWithOffset                                    8     4      4    1127
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalculateSumOfSquares
     ___lmul
   _DisplayData
     _GetGyroWithOffset
     _cputs
       _putch
     _putHex
       _GetGyroWithOffset (ARG)
       _putHexNibble (ARG)
         _putch
   _DisplayInfo
     _CalculateSumOfSquares
       ___lmul
     _GetGyroWithOffset
     _cputs
       _putch
     _isqrt
     _printGForce
       ___aldiv
       ___lmul
       _printCentiValue
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _ltoa
           ___aldiv (ARG)
           _ultoa (ARG)
             ___lldiv
             ___llmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printGyro
       _GetGyroWithOffset (ARG)
       ___aldiv (ARG)
       ___lmul (ARG)
       _printDeciValue (ARG)
         ___aldiv
         ___lwmod
         _cputs
           _putch
         _ltoa
           ___aldiv (ARG)
           _ultoa (ARG)
             ___lldiv
             ___llmod
         _putch
         _utoa
           ___lwdiv
           ___lwmod
     _printUShort
       _cputs
         _putch
       _utoa
         ___lwdiv
         ___lwmod
     _printValue
       _cputs
         _putch
       _ltoa
         ___aldiv (ARG)
         _ultoa (ARG)
           ___lldiv
           ___llmod
   _FindDeltaG
   _Get_Accel_Values
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Get_HMC5883L_Values
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _LDByteWriteI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _GotInt_MPU6050
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Init1msTimer
   _LoadSetting
     _eeprom_read
   _MPU6050_Test_I2C
     _LDByteReadI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _cputs
       _putch
   _SaveSetting
     _eeprom_write
   _Setup_HMC5883L
     _LDByteWriteI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _Setup_MPU6050
     _LDByteWriteI2C
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _cputs
       _putch
   ___aldiv
   _cputs
     _putch
   _i2c_Init
   _printVersion
     _cputs
       _putch
   _printVoltage
     ___aldiv
     _cputs
       _putch
     _printCentiValue
       ___aldiv
       ___lwmod
       _cputs
         _putch
       _ltoa
         ___aldiv (ARG)
         _ultoa (ARG)
           ___lldiv
           ___llmod
       _putch
       _utoa
         ___lwdiv
         ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      A5      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 29 15:14:45 2015

                       ?_Init1msTimer 0070                           __CFG_CP$OFF 0000  
                       ??_i2c_Address 0073                                    l55 0956  
                                  l56 0958                                    _RD 0CA8  
                                  _WR 0CA9                           __CFG_LVP$ON 0000  
                         i2c_Read@ack 0073                                   l280 0EE2  
                                 l440 09D6                                   l418 0928  
                                 l339 0D4B                                   l805 0D1D  
                                 l585 0F07                                   l888 0799  
                                 _GIE 005F                                   _PR2 001B  
                                 _PEN 10B2                          __CFG_CPD$OFF 0000  
                                 _SEN 10B0                           main@UserKey 0064  
                                 _isr 0004          __size_of_Get_HMC5883L_Values 0056  
                        __CFG_BORV$LO 0000                                   wreg 0009  
                       ??_i2c_Restart 0072                                  l3022 0F28  
                                l3014 0F18                                  l3110 0E1C  
                                l3040 0F6F                                  l3032 0F56  
                                l3024 0F36                                  l3112 0E24  
                                l3036 0F61                                  l3134 0A80  
                                l3208 0C4B                                  l3128 089D  
                                l3224 0F91                                  l3304 09CE  
                                l3312 0DC0                                  l3218 0C6D  
                                l3138 0A8B                                  l3090 0E97  
                                l3322 0DDE                                  l3228 0FEE  
                                l3164 0B35                                  l3270 055E  
                                l3262 053B                                  l3254 0518  
                                l3414 0B1A                                  l3166 0B4B  
                                l3272 056D                                  l3264 054A  
                                l3256 0527                                  l3088 0E8F  
                                l3408 0AFC                                  l3600 00DF  
                                l3610 00EF                                  l3602 00E1  
                                l2820 07BE                                  l3612 00F1  
                                l2830 07EC                                  l2822 07CC  
                                l2910 0ABD                                  l3630 0116  
                                l3606 00E7                                  l2920 0AD8  
                                l3624 0109                                  l3616 00F9  
                                l2834 07F7                                  l2850 0B8B  
                                l3642 0148                                  l3634 0137  
                                l3626 010D                                  l3618 00FE  
                                l2844 0B65                                  l2916 0ACF  
                                l2908 0AB1                                  l2932 0A23  
                                l3492 0D8E                                  l3660 017E  
                                l3644 0150                                  l2846 0B73  
                                l2854 0B96                                  l2934 0A2F  
                                l2942 0A44                                  l3718 028F  
                                l3646 0158                                  l3654 016D  
                                l3638 013E                                  l3590 00CA  
                                l2864 099F                                  l3488 0D68  
                                l3656 0179                                  l2874 072E  
                                l2970 0A67                                  l2938 0A3B  
                                l3690 025C                                  l2884 075B  
                                l2948 0860                                  l2958 08A5  
                                l3686 0258                                  l2976 0CD7  
                                l2986 0CF5                                  l3698 026F  
                                ?_isr 0070                                  _ADGO 04E9  
                                STR_1 042C                                  STR_2 045A  
                                STR_3 0482                                  STR_4 0505  
                                STR_5 0509                                  STR_6 04BD  
                                STR_7 04F3                                  STR_8 0501  
                                STR_9 04DB                                  _BRGH 0CF2  
                                _CREN 0CEC                    LDByteWriteI2C@data 0077  
                                u3015 0C44                                  u3025 0C54  
                                u3050 0FC4                                  u3035 0C66  
                                u3125 0A10                                  u3045 0FA2  
                                u2405 07CD                                  u3150 08F5  
                                u3055 0FC0                                  u2415 07E1  
                                u3215 0AF8                                  u3065 0FDC  
                                u2425 07ED                                  u3225 0B16  
                                u3075 0FEF                                  u2605 0AD0  
                                u2455 0B68                                  u2385 07C1  
                                u2475 0B81                                  u2635 0A26  
                                u3435 01E7                                  u3507 00A0  
                                u2805 0F37                                  u2485 0B8C  
                                u2565 0AB4                                  u3517 00B1  
                                u2815 0F4B                                  u2655 0A35  
                                u3527 0D43                                  u2825 0F57  
                                u2585 0ABE                                  u2665 0A3C  
                                u2915 0A8C                                  u2595 0AC8  
                                _PEIE 005E                                  u2925 0A93  
                                u2785 0F2B                                  u3497 008D  
                                _RCIE 048D                                  _RCEN 10B3  
                                _RCIF 008D                                  u2995 0C30  
                                _SCKP 0CFC                                  _TMR2 001A  
                                _SPEN 0CEF                                  _RSEN 10B1  
                                _TXIE 048C                                  _WREN 0CAA  
                                _TXEN 0CF5                                  _TXIF 008C  
                                _SYNC 0CF4                                  _WPUA 020C  
                      ??_eeprom_write 0073                                  _Mode 006A  
                        __CFG_WRT$OFF 0000                         __CFG_FCMEN$ON 0000  
                                _main 004F                                  _ltoa 0A49  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  _utoa 0CD1  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
                                start 0037                                  ttemp 007E  
                 Setup_MPU6050@TheReg 0025                                  wtemp 007E  
                       __CFG_IESO$OFF 0000                         printGyro@RawG 0056  
                       ??_LoadSetting 0076                  printVoltage@VDDValue 0059  
                   _GetGyroWithOffset 0C27                         __CFG_MCLRE$ON 0000  
                      ??_Init1msTimer 0072                    ?_GetGyroWithOffset 0072  
                          _FindDeltaG 0ADD                                 ??_isr 0070  
                 __end_of_DisplayData 0724                   __end_of_DisplayInfo 03DB  
                     __end_of___aldiv 0F78                                 _ABDEN 0CF8  
                               ?_main 0070                                 _ACKEN 10B4  
                               _ACKDT 10B5                                 _ADRES 009B  
                               _EEADR 0191                                 STR_10 04E4  
                               ?_ltoa 0033                                 STR_11 04BA  
                               STR_12 04BA                                 STR_13 049D  
                               STR_14 04EC                                 STR_15 04FD  
                               STR_16 04F9                                 _BRG16 0CFB  
                               STR_17 04AE                         __CFG_WDTE$OFF 0000  
                               STR_18 04D2                                 STR_19 04C8  
                               _CARRY 0018                       __end_of___lldiv 0800  
                               ?_utoa 0020                       __end_of___llmod 0B9F  
                 ??_GetGyroWithOffset 0076                                 _T2CON 001C  
                     __end_of___lwdiv 0ADD              __size_of_printCentiValue 007F  
                               i1l252 002B                       __end_of___lwmod 0A49  
                               i1l259 0033                                 _RCREG 0199  
                               _RCSTA 019D                                 _PORTA 000C  
                               _TRISA 008C                                 _TXREG 019A  
                               _TXSTA 019E                   __end_of_i2c_Address 0883  
                 ___lmul@multiplicand 0076                      printCentiValue@T 0050  
                    ??_printDeciValue 007A                                 _cputs 08A5  
                               _isqrt 0F78                      ??_LDByteWriteI2C 0078  
                               _putch 0994                                 _ultoa 0724  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                 __end_of_i2c_Restart 0842                                 ttemp4 007F  
                               utoa@c 0027                                 utoa@v 0025  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
           __end_of_GetGyroWithOffset 0C7B                       __initialization 0039  
                        __end_of_main 02A1                      __end_of_i2c_Init 0874  
                    __end_of_i2c_Read 095B                          __end_of_ltoa 0A77  
                    __end_of_i2c_Wait 0868                          __end_of_utoa 0D33  
                    __end_of_i2c_Stop 084C                 printCentiValue@buffer 0040  
                 __end_of_LoadSetting 0977                                ??_main 0060  
                       ??_SaveSetting 0076                                ??_ltoa 0039  
                              ??_utoa 0024                        __CFG_PLLEN$OFF 0000  
             __size_of_Setup_HMC5883L 0014                  LDByteWriteI2C@LowAdd 0076  
                              _ADCON0 009D                                _ADCON1 009E  
                              ?_cputs 0075                      ___llmod@dividend 0076  
                              _EEDATA 0193                                _EECON1 0195  
                              _EECON2 0196                                ?_isqrt 0072  
                              _APFCON 011D                                _ANSELA 018C  
                              ?_putch 0070                                ?_ultoa 0026  
                  __size_of_i2c_Start 0005                                i1l2592 0025  
                  __size_of_i2c_Write 0007                                _INTCON 000B  
                              _FVRCON 0117                                _OSCCON 0099  
                              _TMR2IE 0489                                _TMR2IF 0089  
                              _SPBRGH 019C                                _SPBRGL 019B  
                    ??_GotInt_MPU6050 0021                                _SSPADD 0212  
                              _TRISA1 0461                                _TRISA2 0462  
                              _SSPBUF 0211                                _InFiFo 0067  
                    _MPU6050_Test_I2C 09B2                        __CFG_PWRTE$OFF 0000  
                         _DisplayData 0694                  __size_of_eeprom_read 0018  
                         _DisplayInfo 02A1                                ___lmul 0A77  
                           ??___aldiv 0020                           ?_FindDeltaG 0070  
                      __CFG_STVREN$ON 0000                            _TimerCrash 00E6  
      __size_of_CalculateSumOfSquares 00E9                             ??___lldiv 0020  
                           ??___llmod 0020         __end_of_CalculateSumOfSquares 05F6  
                           ??___lwdiv 0076                             ??___lwmod 0076  
                         _i2c_Address 0874                  __end_of_eeprom_write 09F8  
                              _putHex 09F8                 __end_of_Setup_MPU6050 0E04  
                              cputs@s 0075                         i2c_Write@data 0072  
                        ?_printGForce 0056                                ltoa@cp 003A  
                              isqrt@b 0038                                isqrt@g 0034  
                         _i2c_Restart 083D                          ?_printUShort 0029  
                              ultoa@c 0031                                ultoa@v 002D  
                 __end_of_SaveSetting 0994                        SaveSetting@idx 0078  
                __end_of_Init1msTimer 0892                     ??_printCentiValue 007A  
           __size_of_Get_Accel_Values 009E                __size_of_LDByteReadI2C 0040  
             __end_of__initialization 004B                       eeprom_read@addr 0075  
          __size_of_GetGyroWithOffset 0054                   _Get_HMC5883L_Values 0C7B  
                         _LoadSetting 095B                        __pcstackCOMMON 0070  
                       putch@char_out 0073                          __pidataBANK0 0003  
                       __end_of_cputs 08B9                         __end_of_isqrt 1000  
                       __end_of_putch 09B2                         __end_of_ultoa 07AD  
                   __end_of_i2c_Start 0847                     __end_of_i2c_Write 0859  
                         _CurrentData 00C0                printCentiValue@_lvalue 0052  
                ?_Get_HMC5883L_Values 0070                     eeprom_write@value 0072  
                             ??_cputs 0077                               ??_isqrt 0020  
                             ??_putch 0072                               ??_ultoa 002C  
       LDByteWriteI2C@i2cSlaveAddress 0022                             ?_i2c_Init 0070  
                 __size_of_FindDeltaG 003F                             ?_i2c_Read 0070  
                          __pbssBANK0 0065                            __pbssBANK1 00A0  
                           ?_i2c_Wait 0070                             ?_i2c_Stop 0070  
                     printValue@value 003C                            __pmaintext 004F  
                             ?___lmul 0072               LDByteWriteI2C@ErrorCode 0020  
                          __pintentry 0004                         _LDByteReadI2C 0B1C  
                      ___lmul@product 0020                               ?_putHex 0020  
                  i2c_Address@address 0074                           _SaveSetting 0977  
               ??_Get_HMC5883L_Values 0023                    __size_of_printGyro 0044  
__end_ofSetup_MPU6050@MPU6050RegTable 0424          Setup_MPU6050@MPU6050RegTable 03DB  
                      _Setup_HMC5883L 08CD                      printUShort@value 0029  
                             _SSPCON1 0215                               _SSPCON2 0216  
                             _SSPSTAT 0214                            ??_i2c_Init 0072  
                          ??_i2c_Read 0072                            ??_i2c_Wait 0072  
                          ??_i2c_Stop 0072                  LDByteReadI2C@Address 0076  
                             _NewMode 0068                               _OutFiFo 0069  
                             _Setting 00E8                               _Timerms 007A  
           _CalculateSumOfSquares$290 002C             _CalculateSumOfSquares$291 002E  
               __size_of_eeprom_write 0023             _CalculateSumOfSquares$292 0030  
                             ___aldiv 0EF6                       __size_of___lmul 0032  
                             ___lldiv 07AD                               ___llmod 0B5C  
                             ___lwdiv 0AA9                               ___lwmod 0A1D  
                      ?_LDByteReadI2C 0076                               __ptext1 0D33  
                             __ptext2 0859                               __ptext3 0868  
                             __ptext4 0D99                               __ptext5 08CD  
                             __ptext6 0977                               __ptext7 09D5  
                             __ptext8 09B2                               __ptext9 095B  
                     __size_of_putHex 0025                     LDByteReadI2C@Data 0077  
              GetGyroWithOffset@_temp 0078                __end_of_Setup_HMC5883L 08E1  
            __end_of_MPU6050_Test_I2C 09D5                 __size_of_Init1msTimer 000F  
                        __size_of_isr 0033                GetGyroWithOffset@value 0072  
                    ___aldiv@dividend 0076                  __size_of_printGForce 0044  
                             clrloop0 084D                  end_of_initialization 004B  
                    _Get_Accel_Values 05F6                  __size_of_printUShort 0014  
                i2c_Address@l_address 0075                          _eeprom_write 09D5  
                             ltoa@buf 003B                               ltoa@val 0033  
                       ?_putHexNibble 0070                       ___lldiv@divisor 0072  
                     ___lldiv@counter 0025                     __end_of_printGyro 0C27  
                        ?_DisplayData 0070                          ?_DisplayInfo 0070  
                    ___aldiv@quotient 0023                          ??_FindDeltaG 0072  
                        _Init1msTimer 0883                          __pstringtext 03DB  
                             utoa@buf 0028                               utoa@val 0020  
                        ?_i2c_Address 0072                       _printCentiValue 0E77  
                          _printValue 08F7                         ?_printVersion 0070  
                __end_ofFindDeltaG@HG 0428                  __end_ofFindDeltaG@LG 042C  
                     ?_Setup_HMC5883L 0070                           putHex@value 0020  
                       ?_printVoltage 0070                      __CFG_FOSC$INTOSC 0000  
                        ?_i2c_Restart 0070                  printDeciValue@buffer 0040  
                  __end_of_FindDeltaG 0B1C                     Setup_MPU6050@loop 0023  
                       ??_eeprom_read 0072                        ??_putHexNibble 0075  
             __size_of_printDeciValue 0073                          ?_LoadSetting 0070  
             __size_of_LDByteWriteI2C 0018                       ??_LDByteReadI2C 0079  
                      __end_of___lmul 0AA9                 _CalculateSumOfSquares 050D  
                      ??_printVersion 0078                        ??_printVoltage 0056  
                  LoadSetting@pointer 0077                        __end_of_putHex 0A1D  
                           _i2c_Start 0842                             _i2c_Write 0852  
                 start_initialization 0039                           __end_of_isr 0037  
                printCentiValue@value 003C          LDByteReadI2C@i2cSlaveAddress 0020  
                   __size_of_i2c_Init 000C                     __size_of_i2c_Read 001C  
                     ___llmod@divisor 0072                     __size_of_i2c_Wait 0008  
                   __size_of_i2c_Stop 0005                       ___llmod@counter 0021  
              __size_of_Setup_MPU6050 006B               __end_of_printCentiValue 0EF6  
                            ??___lmul 007A                   __end_of_eeprom_read 093F  
             __size_of_GotInt_MPU6050 0016                           __pdataBANK0 006A  
                            ??_putHex 0022                           ?_printValue 003C  
                        ?_SaveSetting 0070                            ?_i2c_Start 0070  
                          ?_i2c_Write 0070                           __pbssCOMMON 007A  
                           ___latbits 0001                      printValue@buffer 0040  
                       __pcstackBANK0 0020                      eeprom_write@addr 0075  
                   putHexNibble@value 0076                      ___lwdiv@dividend 0074  
            GetGyroWithOffset@Goffset 0074                              ?___aldiv 0072  
                            ?___lldiv 0072                  __size_of_DisplayData 0090  
                            ?___llmod 0072           __end_of_Get_HMC5883L_Values 0CD1  
                __size_of_DisplayInfo 013A                              ?___lwdiv 0072  
                            ?___lwmod 0072                ?_CalculateSumOfSquares 0070  
            __end_of_Get_Accel_Values 0694                            isqrt@bshft 0030  
                __size_of_i2c_Address 000F                  __end_of_putHexNibble 08A5  
                       _Setup_MPU6050 0D99         CalculateSumOfSquares@GxSquare 0032  
                   ?_MPU6050_Test_I2C 0070         CalculateSumOfSquares@GySquare 0036  
                 LDByteReadI2C@Length 0078         CalculateSumOfSquares@GzSquare 003A  
                MPU6050_Test_I2C@Data 0023                    ??_MPU6050_Test_I2C 0021  
                    ___lwdiv@quotient 0078                        __size_of_cputs 0014  
                      __size_of_isqrt 0088                        __size_of_putch 001E  
                      __size_of_ultoa 0089                  __size_of_i2c_Restart 0005  
                     ___aldiv@divisor 0072                       ___aldiv@counter 0021  
                __end_of_printVersion 0860                             clear_ram0 084C  
                         _eeprom_read 0927                          FindDeltaG@HG 0424  
                        FindDeltaG@LG 0428                  __end_of_printVoltage 0D99  
                 __size_of_printValue 0018                     printUShort@buffer 002B  
                      _printDeciValue 0E04                        _LDByteWriteI2C 090F  
                    ?_printCentiValue 003C                 GotInt_MPU6050@uc_temp 0023  
                            _SSP1CON2 0216                  __size_of_LoadSetting 001C  
                    ??_Setup_HMC5883L 0078                             _printGyro 0BE3  
                            _AccGyroX 00DA                              _AccGyroY 00DE  
                            _AccGyroZ 00E2                   printDeciValue@value 003C  
                      ?_Setup_MPU6050 0070                         ??_printGForce 007A  
                         ??_i2c_Start 0072                           ??_i2c_Write 0072  
                       ??_printUShort 007A                          _SerialBuffer 00A0  
                   printVoltage@value 005D                     ___lmul@multiplier 0072  
                            _i2c_Init 0868                              _i2c_Read 093F  
                            _i2c_Wait 0860                              _i2c_Stop 0847  
                      LoadSetting@idx 0078                __end_of_printDeciValue 0E77  
              __end_of_LDByteWriteI2C 0927                        _GotInt_MPU6050 08E1  
                    __size_of___aldiv 0082                            ?_printGyro 0056  
                    __size_of___lldiv 0053                      __size_of___llmod 0043  
                    __size_of___lwdiv 0034                      __size_of___lwmod 002C  
                __size_of_SaveSetting 001D                       ___lwdiv@divisor 0072  
                     ___lwdiv@counter 0077                              __ptext10 0927  
                            __ptext11 0883                              __ptext20 083D  
                            __ptext12 08E1                              __ptext21 093F  
                            __ptext13 0C7B                              __ptext30 0B9F  
                            __ptext22 0874                              __ptext14 090F  
                            __ptext31 0E77                              __ptext23 0860  
                            __ptext15 05F6                              __ptext40 0F78  
                            __ptext32 0CD1                              __ptext24 0ADD  
                            __ptext16 0B1C                              __ptext41 050D  
                            __ptext33 0A1D                              __ptext25 02A1  
                            __ptext17 0852                              __ptext42 0A77  
                            __ptext34 0AA9                              __ptext26 08F7  
                            __ptext18 0847                              __ptext43 0694  
                            __ptext35 0A49                              __ptext27 08B9  
                            __ptext19 0842                              __ptext44 09F8  
                            __ptext36 0724                              __ptext28 0BE3  
                            __ptext45 0892                              __ptext37 0B5C  
                            __ptext29 0E04                              __ptext46 08A5  
                            __ptext38 07AD                              __ptext47 0994  
                            __ptext39 0EF6                              __ptext48 0C27  
                Get_Accel_Values@cval 0026                             isqrt@temp 002C  
                     printGForce@RawG 0056                   __end_of_printGForce 0BE3  
                  SaveSetting@pointer 0077                       ?_printDeciValue 003C  
                       __size_of_main 0252                   __end_of_printUShort 08CD  
                       __size_of_ltoa 002E                         __size_of_utoa 0062  
                     ?_LDByteWriteI2C 0076                __end_of_GotInt_MPU6050 08F7  
                            int$flags 007E                         DisplayInfo@Gt 005A  
                       DisplayInfo@cy 005C                         DisplayInfo@cz 005E  
               __end_of_LDByteReadI2C 0B5C                 __size_of_putHexNibble 0013  
                     ??_Setup_MPU6050 0078                          ??_printValue 007A  
                           putch@temp 0074                             ultoa@base 002A  
             Get_HMC5883L_Values@cval 0028                 __size_of_printVersion 0007  
               __size_of_printVoltage 0066                              intlevel1 0000  
                            ltoa@base 0037                      ___lwmod@dividend 0074  
                    ___lldiv@dividend 0076                              isqrt@val 0072  
                     i2c_Address@mode 0072                     __CFG_CLKOUTEN$OFF 0000  
                        _putHexNibble 0892                    __end_of_printValue 090F  
                        _AccGyroCount 0065                       ?_GotInt_MPU6050 0070  
             ??_CalculateSumOfSquares 0024                           ??_printGyro 007A  
                   ?_Get_Accel_Values 0070                              utoa@base 0022  
                            ultoa@buf 0032                              ultoa@val 0026  
                          _OPTION_REG 0095                          _printVersion 0859  
                  ??_Get_Accel_Values 0021                      ___lldiv@quotient 0021  
                        _printVoltage 0D33                       ___lwmod@divisor 0072  
                         _printGForce 0B9F                       ___lwmod@counter 0077  
                        ___aldiv@sign 0022                           _printUShort 08B9  
                 i2c_Read@i2cReadData 0074                       printDeciValue@T 0050  
                       ?_eeprom_write 0072                          ?_eeprom_read 0070  
           __size_of_MPU6050_Test_I2C 0023                         ??_DisplayData 007A  
                       ??_DisplayInfo 007A                 printDeciValue@_lvalue 0052  
